!function(n){"use strict";function e(n,e,r){return r.a=n,r.f=e,r}function d(r){return e(2,r,function(e){return function(n){return r(e,n)}})}function P(t){return e(3,t,function(r){return function(e){return function(n){return t(r,e,n)}}})}function a(a){return e(4,a,function(t){return function(r){return function(e){return function(n){return a(t,r,e,n)}}}})}function r(o){return e(5,o,function(a){return function(t){return function(r){return function(e){return function(n){return o(a,t,r,e,n)}}}}})}function t(i){return e(6,i,function(o){return function(a){return function(t){return function(r){return function(e){return function(n){return i(o,a,t,r,e,n)}}}}}})}function o(c){return e(7,c,function(i){return function(o){return function(a){return function(t){return function(r){return function(e){return function(n){return c(i,o,a,t,r,e,n)}}}}}}})}function i(u){return e(8,u,function(c){return function(i){return function(o){return function(a){return function(t){return function(r){return function(e){return function(n){return u(c,i,o,a,t,r,e,n)}}}}}}}})}function D(n,e,r){return 2===n.a?n.f(e,r):n(e)(r)}function _(n,e,r,t){return 3===n.a?n.f(e,r,t):n(e)(r)(t)}function B(n,e,r,t,a){return 4===n.a?n.f(e,r,t,a):n(e)(r)(t)(a)}function z(n,e,r,t,a,o){return 5===n.a?n.f(e,r,t,a,o):n(e)(r)(t)(a)(o)}function b(n,e,r,t,a,o,i){return 6===n.a?n.f(e,r,t,a,o,i):n(e)(r)(t)(a)(o)(i)}function f(n,e,r,t,a,o,i,c){return 7===n.a?n.f(e,r,t,a,o,i,c):n(e)(r)(t)(a)(o)(i)(c)}function c(n,e,r,t,a,o,i,c,u){return 8===n.a?n.f(e,r,t,a,o,i,c,u):n(e)(r)(t)(a)(o)(i)(c)(u)}function g(n,e){for(var r,t=[],a=u(n,e,0,t);a&&(r=t.pop());a=u(r.a,r.b,0,t));return a}function u(n,e,r,t){if(n===e)return!0;if("object"!=typeof n||null===n||null===e)return"function"==typeof n&&k(5),!1;if(100<r)return t.push({a:n,b:e}),!0;for(var a in n.$<0&&(n=Ct(n),e=Ct(e)),n)if(!u(n[a],e[a],r+1,t))return!1;return!0}var l=d(g);function s(n,e,r){if("object"!=typeof n)return n===e?0:n<e?-1:1;if(void 0===n.$)return(r=s(n.a,e.a))||(r=s(n.b,e.b))?r:s(n.c,e.c);for(;n.b&&e.b&&!(r=s(n.a,e.a));n=n.b,e=e.b);return r||(n.b?1:e.b?-1:0)}var p=d(function(n,e){return s(n,e)<0}),m=d(function(n,e){return 0<s(n,e)}),v=d(function(n,e){return 0<=s(n,e)}),h=d(function(n,e){e=s(n,e);return e<0?$t:e?xt:ht}),x=0;function $(n,e){var r,t={};for(r in n)t[r]=n[r];for(r in e)t[r]=e[r];return t}var y=d(S);function S(n,e){if("string"==typeof n)return n+e;if(!n.b)return e;var r={$:1,a:n.a,b:e};n=n.b;for(var t=r;n.b;n=n.b)t=t.b={$:1,a:n.a,b:e};return r}var T={$:0};function w(n,e){return{$:1,a:n,b:e}}var C=d(w);function N(n){for(var e=T,r=n.length;r--;)e={$:1,a:n[r],b:e};return e}function M(n){for(var e=[];n.b;n=n.b)e.push(n.a);return e}var L=P(function(n,e,r){for(var t=[];e.b&&r.b;e=e.b,r=r.b)t.push(D(n,e.a,r.a));return N(t)}),A=P(function(n,e,r){for(var t=Array(n),a=0;a<n;a++)t[a]=r(e+a);return t}),j=d(function(n,e){for(var r=Array(n),t=0;t<n&&e.b;t++)r[t]=e.a,e=e.b;return r.length=t,{a:r,b:e}}),V=P(function(n,e,r){for(var t=r.length-1;0<=t;t--)e=D(n,r[t],e);return e});function k(n){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+n+".md")}var q=d(function(n,e){return n+e}),F=d(function(n,e){return n/e|0}),R=d(Math.pow),E=d(function(n,e){return e%n}),I=Math.cos,H=Math.sin,U=Math.tan,Y=d(Math.atan2),O=Math.ceil,W=Math.floor,G=Math.round,X=Math.sqrt,Q=Math.log,J=isNaN,K=d(function(n,e){return n||e}),Z=d(function(n,e){return n+e}),nn=d(function(n,e){for(var r=[],t=e.length,a=0;a<t;){var o=e[a],i=e.charCodeAt(a);a++,i<55296||56319<i||(o+=e[a],a++),n(o)&&r.push(o)}return r.join("")}),en=P(function(n,e,r){for(var t=r.length;t--;){var a=r[t],o=r.charCodeAt(t);o<56320||57343<o||(a=r[--t]+a),e=D(n,a,e)}return e}),rn=d(function(n,e){return e.split(n)}),tn=d(function(n,e){return e.join(n)}),an=P(function(n,e,r){return r.slice(n,e)}),on=d(function(n,e){for(var r=e.length;r--;){var t=e[r],a=e.charCodeAt(r);if(a<56320||57343<a||(t=e[--r]+t),!n(t))return!1}return!0}),cn=d(function(n,e){return!!~e.indexOf(n)}),un=d(function(n,e){return 0==e.indexOf(n)}),ln=d(function(n,e){var r=n.length;if(r<1)return T;for(var t=0,a=[];-1<(t=e.indexOf(n,t));)a.push(t),t+=r;return N(a)});function fn(n){return n+""}var sn={$:2,b:function(n){return"number"!=typeof n||(n<=-2147483647||2147483647<=n||(0|n)!==n)&&(!isFinite(n)||n%1)?zn("an INT",n):At(n)}},dn={$:2,b:function(n){return"boolean"==typeof n?At(n):zn("a BOOL",n)}},gn={$:2,b:function(n){return"number"==typeof n?At(n):zn("a FLOAT",n)}},bn={$:2,b:function(n){return At(n)}},pn={$:2,b:function(n){return"string"==typeof n?At(n):n instanceof String?At(n+""):zn("a STRING",n)}},mn=d(function(n,e){return{$:6,d:n,b:e}}),vn=d(function(n,e){return{$:10,b:e,h:n}}),hn=d(function(n,e){return{$:9,f:n,g:[e]}}),xn=P(function(n,e,r){return{$:9,f:n,g:[e,r]}}),$n=a(function(n,e,r,t){return{$:9,f:n,g:[e,r,t]}}),yn=r(function(n,e,r,t,a){return{$:9,f:n,g:[e,r,t,a]}}),wn=o(function(n,e,r,t,a,o,i){return{$:9,f:n,g:[e,r,t,a,o,i]}}),Cn=i(function(n,e,r,t,a,o,i,c){return{$:9,f:n,g:[e,r,t,a,o,i,c]}}),Pn=d(function(n,e){try{return Mn(n,JSON.parse(e))}catch(n){return Pt(D(Tt,"This is not valid JSON! "+n.message,e))}}),Tn=d(Mn);function Mn(n,e){switch(n.$){case 2:return n.b(e);case 5:return null===e?At(n.c):zn("null",e);case 3:return An(e)?Ln(n.b,e,N):zn("a LIST",e);case 4:return An(e)?Ln(n.b,e,Bn):zn("an ARRAY",e);case 6:var r=n.d;if("object"!=typeof e||null===e||!(r in e))return zn("an OBJECT with a field named `"+r+"`",e);var t=Mn(n.b,e[r]);return ua(t)?t:Pt(D(Mt,r,t.a));case 7:r=n.e;if(!An(e))return zn("an ARRAY",e);if(e.length<=r)return zn("a LONGER array. Need index "+r+" but only see "+e.length+" entries",e);t=Mn(n.b,e[r]);return ua(t)?t:Pt(D(Lt,r,t.a));case 8:if("object"!=typeof e||null===e||An(e))return zn("an OBJECT",e);var a,o=T;for(a in e)if(e.hasOwnProperty(a)){t=Mn(n.b,e[a]);if(!ua(t))return Pt(D(Mt,a,t.a));o={$:1,a:{a:a,b:t.a},b:o}}return At(Et(o));case 9:for(var i=n.f,c=n.g,u=0;u<c.length;u++){t=Mn(c[u],e);if(!ua(t))return t;i=i(t.a)}return At(i);case 10:t=Mn(n.b,e);return ua(t)?Mn(n.h(t.a),e):t;case 11:for(var l=T,f=n.g;f.b;f=f.b){t=Mn(f.a,e);if(ua(t))return t;l={$:1,a:t.a,b:l}}return Pt(Bt(Et(l)));case 1:return Pt(D(Tt,n.a,e));case 0:return At(n.a)}}function Ln(n,e,r){for(var t=e.length,a=Array(t),o=0;o<t;o++){var i=Mn(n,e[o]);if(!ua(i))return Pt(D(Lt,o,i.a));a[o]=i.a}return At(r(a))}function An(n){return Array.isArray(n)||"undefined"!=typeof FileList&&n instanceof FileList}function Bn(e){return D(ca,e.length,function(n){return e[n]})}function zn(n,e){return Pt(D(Tt,"Expecting "+n,e))}function Nn(n,e){if(n===e)return!0;if(n.$!==e.$)return!1;switch(n.$){case 0:case 1:return n.a===e.a;case 2:return n.b===e.b;case 5:return n.c===e.c;case 3:case 4:case 8:return Nn(n.b,e.b);case 6:return n.d===e.d&&Nn(n.b,e.b);case 7:return n.e===e.e&&Nn(n.b,e.b);case 9:return n.f===e.f&&Dn(n.g,e.g);case 10:return n.h===e.h&&Nn(n.b,e.b);case 11:return Dn(n.g,e.g)}}function Dn(n,e){var r=n.length;if(r!==e.length)return!1;for(var t=0;t<r;t++)if(!Nn(n[t],e[t]))return!1;return!0}var _n=d(function(n,e){return JSON.stringify(e,null,n)+""});function Sn(n){return n}var jn=P(function(n,e,r){return r[n]=e,r}),Vn=null;function kn(n){return{$:0,a:n}}var qn=d(function(n,e){return{$:3,b:n,d:e}}),Fn=0;function Rn(n){n={$:0,e:Fn++,f:n,g:null,h:[]};return On(n),n}function En(e){return{$:2,b:function(n){n({$:0,a:Rn(e)})},c:null}}function In(n,e){n.h.push(e),On(n)}var Hn=d(function(e,r){return{$:2,b:function(n){In(e,r),n({$:0,a:x})},c:null}}),Un=!1,Yn=[];function On(n){if(Yn.push(n),!Un){for(Un=!0;n=Yn.shift();)!function(e){for(;e.f;){var n=e.f.$;if(0===n||1===n){for(;e.g&&e.g.$!==n;)e.g=e.g.i;if(!e.g)return;e.f=e.g.b(e.f.a),e.g=e.g.i}else{if(2===n)return e.f.c=e.f.b(function(n){e.f=n,On(e)});if(5===n){if(0===e.h.length)return;e.f=e.f.b(e.h.shift())}else e.g={$:3===n?0:1,b:e.f.b,i:e.g},e.f=e.f.d}}}(n);Un=!1}}function Wn(r){return{$:2,b:function(n){var e=setTimeout(function(){n({$:0,a:x})},r);return function(){clearTimeout(e)}},c:null}}function Gn(n,e,r,t,a,o){e=D(Tn,n,e?e.flags:void 0);ua(e)||k(2);var i={},e=r(e.a),c=e.a,u=o(l,c),o=function(n,e){var r,t;for(t in Xn){var a=Xn[t];a.a&&((r=r||{})[t]=a.a(t,e)),n[t]=function(n,e){var t={g:e,h:void 0},a=n.c,o=n.d,i=n.e,c=n.f;function u(r){return D(qn,u,{$:5,b:function(n){var e=n.a;return 0===n.$?_(o,t,e,r):i&&c?B(a,t,e.i,e.j,r):_(a,t,i?e.i:e.j,r)}})}return t.h=Rn(D(qn,u,n.b))}(a,e)}return r}(i,l);function l(n,e){n=D(t,n,c);u(c=n.a,e),te(i,n.b,a(c))}return te(i,e.b,a(c)),o?{ports:o}:{}}var Xn={},Qn=d(function(e,r){return{$:2,b:function(n){e.g(r),n({$:0,a:x})},c:null}}),Jn=d(function(n,e){return D(Hn,n.h,{$:0,a:e})});function Kn(e){return function(n){return{$:1,k:e,l:n}}}function Zn(n){return{$:2,m:n}}var ne=d(function(n,e){return{$:3,n:n,o:e}}),ee=[],re=!1;function te(n,e,r){if(ee.push({p:n,q:e,r:r}),!re){re=!0;for(var a;a=ee.shift();)!function(n,e){var r,t={};for(r in ae(!0,a.q,t,null),ae(!1,e,t,null),n)In(n[r],{$:"fx",a:t[r]||{i:T,j:T}})}(a.p,a.r);re=!1}}function ae(n,e,r,t){switch(e.$){case 1:var a=e.k,o=function(n,e,r,t){function a(n){for(var e=r;e;e=e.t)n=e.s(n);return n}return D(n?Xn[e].e:Xn[e].f,a,t)}(n,a,t,e.l);return void(r[a]=function(n,e,r){return r=r||{i:T,j:T},n?r.i={$:1,a:e,b:r.i}:r.j={$:1,a:e,b:r.j},r}(n,o,r[a]));case 2:for(var i=e.m;i.b;i=i.b)ae(n,i.a,r,t);return;case 3:return void ae(n,e.o,r,{s:e.n,t:t})}}function oe(n){Xn[n]&&k(3)}function ie(n,e){return oe(n),Xn[n]={e:ce,u:e,a:ue},Kn(n)}var ce=d(function(n,e){return e});function ue(n){var o=[],i=Xn[n].u,c=Wn(0);return Xn[n].b=c,Xn[n].c=P(function(n,e){for(;e.b;e=e.b)for(var r=o,t=i(e.a),a=0;a<r.length;a++)r[a](t);return c}),{subscribe:function(n){o.push(n)},unsubscribe:function(n){(n=(o=o.slice()).indexOf(n))<0||o.splice(n,1)}}}function le(n,e){return oe(n),Xn[n]={f:se,u:e,a:de},Kn(n)}var fe,se=d(function(e,r){return function(n){return e(r(n))}});function de(n,t){var a=T,o=Xn[n].u,r={$:0,a:null};return Xn[n].b=r,Xn[n].c=P(function(n,e){return a=e,r}),{send:function(n){ua(n=D(Tn,o,n))||k(4);for(var e=n.a,r=a;r.b;r=r.b)t(r.a(e))}}}var ge="undefined"!=typeof document?document:{};function be(n){return{$:0,a:n}}var pe=(z$=d(function(o,i){return d(function(n,e){for(var r=[],t=0;e.b;e=e.b){var a=e.a;t+=a.b||0,r.push(a)}return t+=r.length,{$:1,c:i,d:Ae(n),e:r,f:o,b:t}})}))(void 0),me=d(function(o,i){return d(function(n,e){for(var r=[],t=0;e.b;e=e.b){var a=e.a;t+=a.b.b||0,r.push(a)}return t+=r.length,{$:2,c:i,d:Ae(n),e:r,f:o,b:t}})})(void 0),ve=d(function(n,e){return{$:4,j:n,k:e,b:1+(e.b||0)}}),he=d(function(n,e){return{$:"a0",n:n,o:e}}),xe=d(function(n,e){return{$:"a1",n:n,o:e}}),$e=d(function(n,e){return{$:"a2",n:n,o:e}}),ye=d(function(n,e){return{$:"a3",n:n,o:e}});function we(n){return"script"==n?"p":n}function Ce(n){return/^\s*(javascript:|data:text\/html)/i.test(n)?"":n}var Pe,Te=d(function(n,e){return"a0"===e.$?D(he,e.n,function(n,e){var r=da(e);return{$:e.$,a:r?_(fa,r<3?Me:Le,sa(n),e.a):D(la,n,e.a)}}(n,e.o)):e}),Me=d(function(n,e){return{a:n(e.a),b:e.b}}),Le=d(function(n,e){return{iB:n(e.iB),gd:e.gd,fX:e.fX}});function Ae(n){for(var e={};n.b;n=n.b){var r=n.a,t=r.$,a=r.n,o=r.o;"a2"!==t?(r=e[t]||(e[t]={}),"a3"===t&&"class"===a?Be(r,a,o):r[a]=o):"className"===a?Be(e,a,o):e[a]=o}return e}function Be(n,e,r){var t=n[e];n[e]=t?t+" "+r:r}function ze(n,e){var r=n.$;if(5===r)return ze(n.k||(n.k=n.m()),e);if(0===r)return ge.createTextNode(n.a);if(4===r){for(var t=n.k,a=n.j;4===t.$;)"object"!=typeof a?a=[a,t.j]:a.push(t.j),t=t.k;var o={j:a,p:e};return(i=ze(t,o)).elm_event_node_ref=o,i}if(3===r)return Ne(i=n.h(n.g),e,n.d),i;var i=n.f?ge.createElementNS(n.f,n.c):ge.createElement(n.c);fe&&"a"==n.c&&i.addEventListener("click",fe(i)),Ne(i,e,n.d);for(var c=n.e,u=0;u<c.length;u++)i.appendChild(ze(1===r?c[u]:c[u].b,e));return i}function Ne(n,e,r){for(var t in r){var a=r[t];"a1"===t?function(n,e){var r,t=n.style;for(r in e)t[r]=e[r]}(n,a):"a0"===t?function(n,e,r){var t,a=n.elmFs||(n.elmFs={});for(t in r){var o=r[t],i=a[t];if(o){if(i){if(i.q.$===o.$){i.q=o;continue}n.removeEventListener(t,i)}i=function(u,n){function l(n){var e=l.q,r=Mn(e.a,n);if(ua(r)){for(var t,a=da(e),e=r.a,o=a?a<3?e.a:e.iB:e,r=1==a?e.b:3==a&&e.gd,i=(r&&n.stopPropagation(),(2==a?e.b:3==a&&e.fX)&&n.preventDefault(),u);t=i.j;){if("function"==typeof t)o=t(o);else for(var c=t.length;c--;)o=t[c](o);i=i.p}i(o,r)}}return l.q=n,l}(e,o),n.addEventListener(t,i,Pe&&{passive:da(o)<2}),a[t]=i}else n.removeEventListener(t,i),a[t]=void 0}}(n,e,a):"a3"===t?function(n,e){for(var r in e){var t=e[r];void 0!==t?n.setAttribute(r,t):n.removeAttribute(r)}}(n,a):"a4"===t?function(n,e){for(var r in e){var t=e[r],a=t.f,t=t.o;void 0!==t?n.setAttributeNS(a,r,t):n.removeAttributeNS(a,r)}}(n,a):("value"!==t&&"checked"!==t||n[t]!==a)&&(n[t]=a)}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){Pe=!0}}))}catch(n){}function De(n,e){var r=[];return Se(n,e,r,0),r}function _e(n,e,r,t){t={$:e,r:r,s:t,t:void 0,u:void 0};return n.push(t),t}function Se(n,e,r,t){if(n!==e){var a=n.$,o=e.$;if(a!==o){if(1!==a||2!==o)return void _e(r,0,t,e);e=function(n){for(var e=n.e,r=e.length,t=Array(r),a=0;a<r;a++)t[a]=e[a].b;return{$:1,c:n.c,d:n.d,e:t,f:n.f,b:n.b}}(e),o=1}switch(o){case 5:for(var i=n.l,c=e.l,u=i.length,l=u===c.length;l&&u--;)l=i[u]===c[u];if(l)return void(e.k=n.k);e.k=e.m();var f=[];return Se(n.k,e.k,f,0),void(0<f.length&&_e(r,1,t,f));case 4:for(var s=n.j,d=e.j,g=!1,b=n.k;4===b.$;)g=!0,"object"!=typeof s?s=[s,b.j]:s.push(b.j),b=b.k;for(var p=e.k;4===p.$;)g=!0,"object"!=typeof d?d=[d,p.j]:d.push(p.j),p=p.k;return g&&s.length!==d.length?void _e(r,0,t,e):((g?function(n,e){for(var r=0;r<n.length;r++)if(n[r]!==e[r])return!1;return!0}(s,d):s===d)||_e(r,2,t,d),void Se(b,p,r,t+1));case 0:return void(n.a!==e.a&&_e(r,3,t,e.a));case 1:return void je(n,e,r,t,ke);case 2:return void je(n,e,r,t,qe);case 3:if(n.h!==e.h)return void _e(r,0,t,e);f=Ve(n.d,e.d);f&&_e(r,4,t,f);f=e.i(n.g,e.g);return void(f&&_e(r,5,t,f))}}}function je(n,e,r,t,a){var o;n.c===e.c&&n.f===e.f?((o=Ve(n.d,e.d))&&_e(r,4,t,o),a(n,e,r,t)):_e(r,0,t,e)}function Ve(n,e,r){var t,a,o,i,c;for(a in n)"a1"!==a&&"a0"!==a&&"a3"!==a&&"a4"!==a?a in e?(o=n[a])===(i=e[a])&&"value"!==a&&"checked"!==a||"a0"===r&&function(n,e){return n.$==e.$&&Nn(n.a,e.a)}(o,i)||((t=t||{})[a]=i):(t=t||{})[a]=r?"a1"===r?"":"a0"===r||"a3"===r?void 0:{f:n[a].f,o:void 0}:"string"==typeof n[a]?"":null:(i=Ve(n[a],e[a]||{},a))&&((t=t||{})[a]=i);for(c in e)c in n||((t=t||{})[c]=e[c]);return t}function ke(n,e,r,t){var a=n.e,o=e.e,n=a.length,e=o.length;e<n?_e(r,6,t,{v:e,i:n-e}):n<e&&_e(r,7,t,{v:n,e:o});for(var i=n<e?n:e,c=0;c<i;c++){var u=a[c];Se(u,o[c],r,++t),t+=u.b||0}}function qe(n,e,r,t){for(var a=[],o={},i=[],c=n.e,u=e.e,l=c.length,f=u.length,s=0,d=0,g=t;s<l&&d<f;){var b,p=(b=c[s]).a,m=(L=u[d]).a,v=b.b,h=L.b,x=void 0,$=void 0;if(p!==m){var y,w,C,P,T=c[s+1],M=u[d+1];if(T&&(w=T.b,$=m===(y=T.a)),M&&(P=M.b,x=p===(C=M.a)),x&&$)Se(v,P,a,++g),Re(o,a,p,h,d,i),g+=v.b||0,Ee(o,a,p,w,++g),g+=w.b||0,s+=2,d+=2;else if(x)g++,Re(o,a,m,h,d,i),Se(v,P,a,g),g+=v.b||0,s+=1,d+=2;else if($)Ee(o,a,p,v,++g),g+=v.b||0,Se(w,h,a,++g),g+=w.b||0,s+=2,d+=1;else{if(!T||y!==C)break;Ee(o,a,p,v,++g),Re(o,a,m,h,d,i),g+=v.b||0,Se(w,P,a,++g),g+=w.b||0,s+=2,d+=2}}else Se(v,h,a,++g),g+=v.b||0,s++,d++}for(;s<l;)Ee(o,a,(b=c[s]).a,v=b.b,++g),g+=v.b||0,s++;for(;d<f;){var L,A=A||[];Re(o,a,(L=u[d]).a,L.b,void 0,A),d++}(0<a.length||0<i.length||A)&&_e(r,8,t,{w:a,x:i,y:A})}var Fe="_elmW6BL";function Re(n,e,r,t,a,o){var i=n[r];if(!i)return o.push({r:a,A:i={c:0,z:t,r:a,s:void 0}}),void(n[r]=i);if(1===i.c){o.push({r:a,A:i}),i.c=2;var c=[];return Se(i.z,t,c,i.r),i.r=a,void(i.s.s={w:c,A:i})}Re(n,e,r+Fe,t,a,o)}function Ee(n,e,r,t,a){var o=n[r];if(o){if(0===o.c){o.c=2;var i=[];return Se(t,o.z,i,a),void _e(e,9,a,{w:i,A:o})}Ee(n,e,r+Fe,t,a)}else{e=_e(e,9,a,void 0);n[r]={c:1,z:t,r:a,s:e}}}function Ie(n,e,r,t){!function n(e,r,t,a,o,i,c){var u=t[a];var l=u.r;for(;l===o;){var f,s=u.$;if(1===s?Ie(e,r.k,u.s,c):8===s?(u.t=e,u.u=c,0<(f=u.s.w).length&&n(e,r,f,0,o,i,c)):9===s?(u.t=e,u.u=c,(s=u.s)&&(s.A.s=e,0<(f=s.w).length&&n(e,r,f,0,o,i,c))):(u.t=e,u.u=c),!(u=t[++a])||(l=u.r)>i)return a}var d=r.$;if(4===d){for(var g=r.k;4===g.$;)g=g.k;return n(e,g,t,a,o+1,i,e.elm_event_node_ref)}var b=r.e;var p=e.childNodes;for(var m=0;m<b.length;m++){var v=1===d?b[m]:b[m].b,h=++o+(v.b||0);if(o<=l&&l<=h&&(a=n(p[m],v,t,a,o,h,c),!(u=t[a])||(l=u.r)>i))return a;o=h}return a}(n,e,r,0,0,e.b,t)}function He(n,e,r,t){return 0===r.length?n:(Ie(n,e,r,t),Ue(n,r))}function Ue(n,e){for(var r=0;r<e.length;r++){var t=e[r],a=t.t,t=function(n,e){switch(e.$){case 0:return function(n,e,r){var t=n.parentNode,r=ze(e,r);r.elm_event_node_ref||(r.elm_event_node_ref=n.elm_event_node_ref);t&&r!==n&&t.replaceChild(r,n);return r}(n,e.s,e.u);case 4:return Ne(n,e.u,e.s),n;case 3:return n.replaceData(0,n.length,e.s),n;case 1:return Ue(n,e.s);case 2:return n.elm_event_node_ref?n.elm_event_node_ref.j=e.s:n.elm_event_node_ref={j:e.s,p:e.u},n;case 6:for(var r=e.s,t=0;t<r.i;t++)n.removeChild(n.childNodes[r.v]);return n;case 7:for(var a=(r=e.s).e,o=n.childNodes[t=r.v];t<a.length;t++)n.insertBefore(ze(a[t],e.u),o);return n;case 9:if(!(r=e.s))return n.parentNode.removeChild(n),n;var i=r.A;return void 0!==i.r&&n.parentNode.removeChild(n),i.s=Ue(n,r.w),n;case 8:return function(n,e){var r=e.s,t=function(n,e){if(!n)return;for(var r=ge.createDocumentFragment(),t=0;t<n.length;t++){var a=n[t].A;r.appendChild(2===a.c?a.s:ze(a.z,e.u))}return r}(r.y,e);n=Ue(n,r.w);for(var a=r.x,o=0;o<a.length;o++){var i=a[o],c=i.A,c=2===c.c?c.s:ze(c.z,e.u);n.insertBefore(c,n.childNodes[i.r])}t&&n.appendChild(t);return n}(n,e);case 5:return e.s(n);default:k(10)}}(a,t);a===n&&(n=t)}return n}function Ye(n){if(3===n.nodeType)return{$:0,a:n.textContent};if(1!==n.nodeType)return{$:0,a:""};for(var e=T,r=n.attributes,t=r.length;t--;)var a=r[t],e={$:1,a:D(ye,a.name,a.value),b:e};for(var o=n.tagName.toLowerCase(),i=T,c=n.childNodes,t=c.length;t--;)i={$:1,a:Ye(c[t]),b:i};return _(pe,o,e,i)}var Oe=a(function(e,n,r,t){return Gn(n,t,e.ig,e.jU,e.jt,function(t,n){var a=e.eg&&e.eg(t),o=e.jZ,i=ge.title,c=ge.body,u=Ye(c);return Ge(n,function(n){fe=a;var e=o(n),r=pe("body")(T)(e.g2),n=De(u,r);c=He(c,u,n,t),u=r,fe=0,i!==e.jN&&(ge.title=i=e.jN)})})}),We="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){return setTimeout(n,1e3/60)};function Ge(r,t){t(r);var a=0;function o(){a=1===a?0:(We(o),t(r),1)}return function(n,e){r=n,e?(t(r),2===a&&(a=1)):(0===a&&We(o),a=2)}}function Xe(){return Ma(ge.location.href).a||k(1)}var Qe=d(function(n,e){return D($o,La,{$:2,b:function(){history.replaceState({},"",e),n()},c:null})}),Je={addEventListener:function(){},removeEventListener:function(){}},Ke="undefined"!=typeof window?window:Je;function Ze(n){return n.byteLength}var nr,er=P(function(n,e,r){return n.setInt8(e,r),e+1}),rr=a(function(n,e,r,t){return n.setInt16(e,r,t),e+2}),tr=a(function(n,e,r,t){return n.setInt32(e,r,t),e+4}),ar=P(function(n,e,r){return n.setUint8(e,r),e+1}),or=a(function(n,e,r,t){return n.setUint16(e,r,t),e+2}),ir=a(function(n,e,r,t){return n.setUint32(e,r,t),e+4}),cr=a(function(n,e,r,t){return n.setFloat32(e,r,t),e+4}),ur=a(function(n,e,r,t){return n.setFloat64(e,r,t),e+8}),lr=P(function(n,e,r){for(var t=0,a=r.byteLength,o=a-4;t<=o;t+=4)n.setUint32(e+t,r.getUint32(t));for(;t<a;t++)n.setUint8(e+t,r.getUint8(t));return e+a}),fr=P(function(n,e,r){for(var t=0;t<r.length;t++){var a=r.charCodeAt(t);e+=a<128?(n.setUint8(e,a),1):a<2048?(n.setUint16(e,49280|(a>>>6&31)<<8|63&a),2):a<55296||56319<a?(n.setUint16(e,57472|(a>>>12&15)<<8|a>>>6&63),n.setUint8(e+2,128|63&a),3):(a=1024*(a-55296)+r.charCodeAt(++t)-56320+65536,n.setUint32(e,4034953344|(a>>>18&7)<<24|(a>>>12&63)<<16|(a>>>6&63)<<8|63&a),4)}return e}),sr=d(function(n,e){try{return pt(D(n,e,0).b)}catch(n){return mt}}),dr=d(function(n,e){return{a:e+1,b:n.getUint8(e)}}),gr=d(function(n,e){return n&e}),br=d(function(n,e){return e<<n}),pr=d(function(n,e){return e>>>n});function mr(n){var e;"function"==typeof MouseEvent?n.dispatchEvent(new MouseEvent("click")):((e=document.createEvent("MouseEvents")).initMouseEvent("click",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),document.body.appendChild(n),n.dispatchEvent(e),document.body.removeChild(n))}var vr=d(function(n,e){var r="g";n.iE&&(r+="m"),n.hg&&(r+="i");try{return pt(RegExp(e,r))}catch(n){return mt}}),hr=P(function(n,e,r){for(var t,a=[],o=0,i=r,r=e.lastIndex,c=-1;o++<n&&(t=e.exec(i))&&c!=e.lastIndex;){for(var u=t.length-1,l=Array(u);0<u;){var f=t[u];l[--u]=f?pt(f):mt}a.push(B(xc,t[0],t.index,o,N(l))),c=e.lastIndex}return e.lastIndex=r,N(a)}),xr=P(function(t,a,o){return{$:2,b:function(e){function r(n){e(a(o.eQ.a(n)))}var n=new XMLHttpRequest;n.addEventListener("error",function(){r(Dc)}),n.addEventListener("timeout",function(){r(jc)}),n.addEventListener("load",function(){r(function(n,e){return D(200<=e.status&&e.status<300?Nc:Bc,function(n){return{gr:n.responseURL,jn:n.status,jo:n.statusText,eX:function(n){if(!n)return Bo;for(var e=Bo,r=n.split("\r\n"),t=r.length;t--;){var a,o,i=r[t],c=i.indexOf(": ");0<c&&(a=i.substring(0,c),o=i.substring(2+c),e=_(Fi,a,function(n){return pt(Vc(n)?o+", "+n.a:o)},e))}return e}(n.getAllResponseHeaders())}}(e),n(e.response))}(o.eQ.b,n))}),Vc(o.gm)&&function(e,r,t){r.upload.addEventListener("progress",function(n){r.c||Rn(D(kc,e,{a:t,b:Sc({jc:n.loaded,gb:n.total})}))}),r.addEventListener("progress",function(n){r.c||Rn(D(kc,e,{a:t,b:_c({i$:n.loaded,gb:n.lengthComputable?pt(n.total):mt})}))})}(t,n,o.gm.a);try{n.open(o.fA,o.gr,!0)}catch(n){return r(zc(o.gr))}return function(n,e){for(var r=e.eX;r.b;r=r.b)n.setRequestHeader(r.a.a,r.a.b);n.timeout=e.gj.a||0,n.responseType=e.eQ.d,n.withCredentials=e.gQ}(n,o),o.g2.a&&n.setRequestHeader("Content-Type",o.g2.a),n.send(o.g2.b),function(){n.c=!0,n.abort()}},c:null}}),$r=P(function(n,e,r){return{$:0,d:n,b:e,a:r}}),yr=d(function(e,r){return{$:0,d:r.d,b:r.b,a:function(n){return e(r.a(n))}}}),wr=d(function(n,e){return{$:0,a:n,b:e}}),Cr=d(function(n,e){return new Float64Array([n,e])});new Float64Array(3),new Float64Array(3),new Float64Array(3);var Pr=P(function(n,e,r){return new Float64Array([n,e,r])}),Tr=d(function(n,e){return new Float64Array([e[0]*n,e[1]*n,e[2]*n])}),Mr=a(function(n,e,r,t){return new Float64Array([n,e,r,t])});new Float64Array(16),new Float64Array(16),new Float64Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);var Lr=0;function Ar(n,e){for(;e.b;e=e.b)n(e.a)}function Br(n){for(var e=0;n.b;n=n.b)e++;return e}function zr(n){n.scissor.enabled&&(n.gl.disable(n.gl.SCISSOR_TEST),n.scissor.enabled=!1)}function Nr(n){var e=n.colorMask;e.a&&e.b&&e.c&&e.d||(n.gl.colorMask(!0,!0,!0,!0),e.a=!0,e.b=!0,e.c=!0,e.d=!0)}var Dr="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){setTimeout(n,1e3/60)},_r=r(function(n,e,r,t,a){return{$:0,a:n,b:e,c:r,d:t,e:a}}),Sr=d(function(n,e){var r=n.blend;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.BLEND),r.enabled=!0),r.a===e.a&&r.d===e.d||(n.gl.blendEquationSeparate(e.a,e.d),r.a=e.a,r.d=e.d),r.b===e.b&&r.c===e.c&&r.e===e.e&&r.f===e.f||(n.gl.blendFuncSeparate(e.b,e.c,e.e,e.f),r.b=e.b,r.c=e.c,r.e=e.e,r.f=e.f),r.g===e.g&&r.h===e.h&&r.i===e.i&&r.j===e.j||(n.gl.blendColor(e.g,e.h,e.i,e.j),r.g=e.g,r.h=e.h,r.i=e.i,r.j=e.j)}),jr=d(function(n,e){var r=n.depthTest;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.DEPTH_TEST),r.enabled=!0),r.a!==e.a&&(n.gl.depthFunc(e.a),r.a=e.a),r.b!==e.b&&(n.gl.depthMask(e.b),r.b=e.b),r.c===e.c&&r.d===e.d||(n.gl.depthRange(e.c,e.d),r.c=e.c,r.d=e.d)}),Vr=d(function(n,e){var r=n.stencilTest;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.STENCIL_TEST),r.enabled=!0),r.d===e.d&&r.a===e.a&&r.b===e.b||(n.gl.stencilFuncSeparate(n.gl.FRONT,e.d,e.a,e.b),r.d=e.d),r.e===e.e&&r.f===e.f&&r.g===e.g||(n.gl.stencilOpSeparate(n.gl.FRONT,e.e,e.f,e.g),r.e=e.e,r.f=e.f,r.g=e.g),r.c!==e.c&&(n.gl.stencilMask(e.c),r.c=e.c),r.h===e.h&&r.a===e.a&&r.b===e.b||(n.gl.stencilFuncSeparate(n.gl.BACK,e.h,e.a,e.b),r.h=e.h,r.a=e.a,r.b=e.b),r.i===e.i&&r.j===e.j&&r.k===e.k||(n.gl.stencilOpSeparate(n.gl.BACK,e.i,e.j,e.k),r.i=e.i,r.j=e.j,r.k=e.k)}),kr=d(function(n,e){var r=n.scissor;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.SCISSOR_TEST),r.enabled=!0),r.a===e.a&&r.b===e.b&&r.c===e.c&&r.d===e.d||(n.gl.scissor(e.a,e.b,e.c,e.d),r.a=e.a,r.b=e.b,r.c=e.c,r.d=e.d)}),qr=d(function(n,e){var r=n.colorMask;r.toggle=n.toggle,r.enabled=!0,r.a===e.a&&r.b===e.b&&r.c===e.c&&r.d===e.d||(n.gl.colorMask(e.a,e.b,e.c,e.d),r.a=e.a,r.b=e.b,r.c=e.c,r.d=e.d)}),Fr=d(function(n,e){var r=n.cullFace;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.CULL_FACE),r.enabled=!0),r.a!==e.a&&(n.gl.cullFace(e.a),r.a=e.a)}),Rr=d(function(n,e){var r=n.polygonOffset;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.POLYGON_OFFSET_FILL),r.enabled=!0),r.a===e.a&&r.b===e.b||(n.gl.polygonOffset(e.a,e.b),r.a=e.a,r.b=e.b)}),Er=d(function(n,e){var r=n.sampleCoverage;r.toggle=n.toggle,r.enabled||(n.gl.enable(n.gl.SAMPLE_COVERAGE),r.enabled=!0),r.a===e.a&&r.b===e.b||(n.gl.sampleCoverage(e.a,e.b),r.a=e.a,r.b=e.b)}),Ir=["blend","depthTest","stencilTest","scissor","colorMask","cullFace","polygonOffset","sampleCoverage","sampleAlphaToCoverage"],Hr=[function(n){n.blend.enabled&&(n.gl.disable(n.gl.BLEND),n.blend.enabled=!1)},function(n){n.depthTest.enabled&&(n.gl.disable(n.gl.DEPTH_TEST),n.depthTest.enabled=!1)},function(n){n.stencilTest.enabled&&(n.gl.disable(n.gl.STENCIL_TEST),n.stencilTest.enabled=!1)},zr,Nr,function(n){n.gl.disable(n.gl.CULL_FACE)},function(n){n.gl.disable(n.gl.POLYGON_OFFSET_FILL)},function(n){n.gl.disable(n.gl.SAMPLE_COVERAGE)},function(n){n.gl.disable(n.gl.SAMPLE_ALPHA_TO_COVERAGE)}];function Ur(n,e,r){r=n.createShader(r);return n.shaderSource(r,"#extension GL_OES_standard_derivatives : enable\n"+e),n.compileShader(r),r}function Yr(n,e){switch(e){case n.FLOAT:return{size:1,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC2:return{size:2,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC3:return{size:3,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_VEC4:return{size:4,arraySize:1,type:Float32Array,baseType:n.FLOAT};case n.FLOAT_MAT4:return{size:4,arraySize:4,type:Float32Array,baseType:n.FLOAT};case n.INT:return{size:1,arraySize:1,type:Int32Array,baseType:n.INT}}}function Or(n,e,r,t){for(var c=r.a.eK,u=[],a=0;a<c;a++)u.push(String.fromCharCode(97+a));var o=Yr(n,e.type);if(void 0===o)throw Error("No info available for: "+e.type);var i=0,l=o.size*o.arraySize*c,f=new o.type(Br(r.b)*l);Ar(function(n){!function(e,r,t,a,o){var i;if(1===c)for(i=0;i<r;i++)e[t++]=1===r?a[o]:a[o][i];else u.forEach(function(n){for(i=0;i<r;i++)e[t++]=1===r?a[n][o]:a[n][o][i]})}(f,o.size*o.arraySize,i,n,t[e.name]||e.name),i+=l},r.b);r=n.createBuffer();return n.bindBuffer(n.ARRAY_BUFFER,r),n.bufferData(n.ARRAY_BUFFER,f,n.STATIC_DRAW),r}function Wr(n,e){if(0<e.a.e0){var r=n.createBuffer(),t=function(n,e){var r,t=new Uint32Array(Br(n)*e),a=0;return Ar(function(n){if(1===e)t[a++]=n;else for(r=0;r<e;r++)t[a++]=n[String.fromCharCode(97+r)]},n),t}(e.c,e.a.e0);return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW),{numIndices:t.length,indexBuffer:r,buffers:{}}}return{numIndices:e.a.eK*Br(e.b),indexBuffer:null,buffers:{}}}var Gr=d(function(h,n){var x=h.f,$=x.gl;return $&&($.viewport(0,0,$.drawingBufferWidth,$.drawingBufferHeight),x.depthTest.b||($.depthMask(!0),x.depthTest.b=!0),x.stencilTest.c!==x.STENCIL_WRITEMASK&&($.stencilMask(x.STENCIL_WRITEMASK),x.stencilTest.c=x.STENCIL_WRITEMASK),zr(x),Nr(x),$.clear($.COLOR_BUFFER_BIT|$.DEPTH_BUFFER_BIT|$.STENCIL_BUFFER_BIT),Ar(function(n){if(n.d.b.b){var e,r,t,a,o;if(n.b.id&&n.c.id&&(i=x.programs[e=n.b.id+"#"+n.c.id]),!i){n.b.id?r=x.shaders[n.b.id]:n.b.id=Lr++,r||(r=Ur($,n.b.src,$.VERTEX_SHADER),x.shaders[n.b.id]=r),n.c.id?t=x.shaders[n.c.id]:n.c.id=Lr++,t||(t=Ur($,n.c.src,$.FRAGMENT_SHADER),x.shaders[n.c.id]=t);var i,c=function(n,e,r){var t=n.createProgram();if(n.attachShader(t,e),n.attachShader(t,r),n.linkProgram(t),!n.getProgramParameter(t,n.LINK_STATUS))throw"Link failed: "+n.getProgramInfoLog(t)+"\nvs info-log: "+n.getShaderInfoLog(e)+"\nfs info-log: "+n.getShaderInfoLog(r);return t}($,r,t);(i={glProgram:c,attributes:Object.assign({},n.b.attributes,n.c.attributes),currentUniforms:{},activeAttributes:[],activeAttributeLocations:[]}).uniformSetters=function(o,n,e,r){var t=e.glProgram,i=e.currentUniforms,c=0,u=n.f;for(var a={},l=o.getProgramParameter(t,o.ACTIVE_UNIFORMS),f=0;f<l;f++){var s=o.getActiveUniform(t,f);a[r[s.name]||s.name]=function(n,e){var r=e.name,t=o.getUniformLocation(n,r);switch(e.type){case o.INT:return function(n){i[r]!==n&&(o.uniform1i(t,n),i[r]=n)};case o.FLOAT:return function(n){i[r]!==n&&(o.uniform1f(t,n),i[r]=n)};case o.FLOAT_VEC2:return function(n){i[r]!==n&&(o.uniform2f(t,n[0],n[1]),i[r]=n)};case o.FLOAT_VEC3:return function(n){i[r]!==n&&(o.uniform3f(t,n[0],n[1],n[2]),i[r]=n)};case o.FLOAT_VEC4:return function(n){i[r]!==n&&(o.uniform4f(t,n[0],n[1],n[2],n[3]),i[r]=n)};case o.FLOAT_MAT4:return function(n){i[r]!==n&&(o.uniformMatrix4fv(t,!1,new Float32Array(n)),i[r]=n)};case o.SAMPLER_2D:var a=c++;return function(n){o.activeTexture(o.TEXTURE0+a);var e=u.textures.get(n);e||(e=n.hv(o),u.textures.set(n,e)),o.bindTexture(o.TEXTURE_2D,e),i[r]!==n&&(o.uniform1i(t,a),i[r]=n)};case o.BOOL:return function(n){i[r]!==n&&(o.uniform1i(t,n),i[r]=n)};default:return function(){}}}(t,s)}return a}($,h,i,Object.assign({},n.b.uniforms,n.c.uniforms));for(var u=$.getProgramParameter(c,$.ACTIVE_ATTRIBUTES),l=0;l<u;l++){var f=$.getActiveAttrib(c,l),s=$.getAttribLocation(c,f.name);i.activeAttributes.push(f),i.activeAttributeLocations.push(s)}x.programs[e=n.b.id+"#"+n.c.id]=i}x.lastProgId!==e&&($.useProgram(i.glProgram),x.lastProgId=e),a=i.uniformSetters,Object.keys(o=n.e).forEach(function(n){var e=a[n];e&&e(o[n])});var d=x.buffers.get(n.d);for(d||(d=Wr($,n.d),x.buffers.set(n.d,d)),l=0;l<i.activeAttributes.length;l++){s=i.activeAttributeLocations[l],void 0===d.buffers[(f=i.activeAttributes[l]).name]&&(d.buffers[f.name]=Or($,f,n.d,i.attributes)),$.bindBuffer($.ARRAY_BUFFER,d.buffers[f.name]);var g=Yr($,f.type);if(1===g.arraySize)$.enableVertexAttribArray(s),$.vertexAttribPointer(s,g.size,g.baseType,!1,0,0);else for(var b=4*g.size,p=b*g.arraySize,m=0;m<g.arraySize;m++)$.enableVertexAttribArray(s+m),$.vertexAttribPointer(s+m,g.size,g.baseType,!1,p,b*m)}for(x.toggle=!x.toggle,Ar(hd(x),n.a),l=0;l<9;l++){var v=x[Ir[l]];v.toggle!==x.toggle&&v.enabled&&(Hr[l](x),v.enabled=!1,v.toggle=x.toggle)}d.indexBuffer?($.bindBuffer($.ELEMENT_ARRAY_BUFFER,d.indexBuffer),$.drawElements(n.d.a.fF,d.numIndices,$.UNSIGNED_INT,0)):$.drawArrays(n.d.a.fF,0,d.numIndices)}},h.g)),n}),Xr=P(function(n,e,r){return function(n,e,r,t){return{$:3,d:Ae(n),g:e,h:r,i:t}}(e,{g:r,f:{},h:n},rt,tt)}),Qr=d(function(n,e){n.contextAttributes.alpha=!0,n.contextAttributes.premultipliedAlpha=e.a}),Jr=d(function(n,e){n.contextAttributes.depth=!0,n.sceneSettings.push(function(n){n.clearDepth(e.a)})}),Kr=d(function(n,e){n.contextAttributes.stencil=!0,n.sceneSettings.push(function(n){n.clearStencil(e.a)})}),Zr=d(function(n){n.contextAttributes.antialias=!0}),nt=d(function(n,e){n.sceneSettings.push(function(n){n.clearColor(e.a,e.b,e.c,e.d)})}),et=d(function(n){n.contextAttributes.preserveDrawingBuffer=!0});function rt(n){var e={contextAttributes:{alpha:!1,depth:!1,stencil:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},sceneSettings:[]};Ar(function(n){return D(vd,e,n)},n.h);var r=ge.createElement("canvas"),t=r.getContext&&(r.getContext("webgl",e.contextAttributes)||r.getContext("experimental-webgl",e.contextAttributes));return t&&"undefined"!=typeof WeakMap?(e.sceneSettings.forEach(function(n){n(t)}),t.getExtension("OES_standard_derivatives"),t.getExtension("OES_element_index_uint"),n.f.gl=t,n.f.toggle=!1,n.f.blend={enabled:!1,toggle:!1},n.f.depthTest={enabled:!1,toggle:!1},n.f.stencilTest={enabled:!1,toggle:!1},n.f.scissor={enabled:!1,toggle:!1},n.f.colorMask={enabled:!1,toggle:!1},n.f.cullFace={enabled:!1,toggle:!1},n.f.polygonOffset={enabled:!1,toggle:!1},n.f.sampleCoverage={enabled:!1,toggle:!1},n.f.sampleAlphaToCoverage={enabled:!1,toggle:!1},n.f.shaders=[],n.f.programs={},n.f.lastProgId=null,n.f.buffers=new WeakMap,n.f.textures=new WeakMap,n.f.STENCIL_WRITEMASK=t.getParameter(t.STENCIL_WRITEMASK),Dr(function(){return D(Gr,n,r)})):(r=ge.createElement("div")).innerHTML='<a href="https://get.webgl.org/">Enable WebGL</a> to see this content!',r}function tt(n,e){return e.f=n.f,Gr(e)}function at(n){return{$:3,a:n}}function ot(n){return D(_t,"\n    ",D(St,"\n",n))}function it(n){return _(jt,d(function(n,e){return e+1}),0,n)}function ct(n){return 97<=(n=Rt(n))&&n<=122}function ut(n){return(n=Rt(n))<=90&&65<=n}function lt(n){return(n=Rt(n))<=57&&48<=n}function ft(n){return ct(n)||ut(n)||lt(n)}function st(n){return n}function dt(n){return n.a}function gt(n){return n}function bt(n){return _(za,Sa(yt),Aa(T),n)}var pt=function(n){return{$:0,a:n}},Je={$:0},mt={$:1},vt=d(function(n){return n}),ht=1,xt=2,$t=0,yt=C,wt=P(function(n,e,r){for(;;){if(-2===r.$)return e;var t=r.d,a=n,o=_(n,r.b,r.c,_(wt,n,e,r.e));n=a,e=o,r=t}}),Ct=function(n){return _(wt,P(function(n,e,r){return D(yt,{a:n,b:e},r)}),T,n)},Pt=function(n){return{$:1,a:n}},Tt=d(function(n,e){return{$:3,a:n,b:e}}),Mt=d(function(n,e){return{$:0,a:n,b:e}}),Lt=d(function(n,e){return{$:1,a:n,b:e}}),At=function(n){return{$:0,a:n}},Bt=function(n){return{$:2,a:n}},zt=on,Nt=_n,Dt=fn,_t=d(function(n,e){return D(tn,n,M(e))}),St=d(function(n,e){return N(D(rn,n,e))}),jt=P(function(n,e,r){for(;;){if(!r.b)return e;var t=r.b,a=n,o=D(n,r.a,e);n=a,e=o,r=t}}),Vt=L,kt=P(function(n,e,r){for(;;){if(1<=s(n,e))return r;var t=n,a=e-1,o=D(yt,e,r);n=t,e=a,r=o}}),qt=d(function(n,e){return _(kt,n,e,T)}),Ft=d(function(n,e){return _(Vt,n,D(qt,0,it(e)-1),e)}),Rt=function(n){var e=n.charCodeAt(0);return e<55296||56319<e?e:1024*(e-55296)+n.charCodeAt(1)-56320+65536},Et=function(n){return _(jt,yt,T,n)},It=function(n){var e=n.charCodeAt(0);return isNaN(e)?mt:pt(e<55296||56319<e?{a:n[0],b:n.slice(1)}:{a:n[0]+n[1],b:n.slice(2)})},Ht=d(function(n,e){return"\n\n("+Dt(n+1)+(") "+ot(Ut(e)))}),Ut=function(n){return D(Yt,n,T)},Yt=d(function(n,e){n:for(;;)switch(n.$){case 0:var r=n.a,t=n.b,a=function(){var n=It(r);if(1===n.$)return!1;var e=n.a,n=e.b;return function(n){return ct(n)||ut(n)}(e.a)&&D(zt,ft,n)}();n=t,e=D(yt,a?"."+r:"['"+r+"']",e);continue n;case 1:var t=n.b,o="["+Dt(n.a)+"]";n=t,e=D(yt,o,e);continue n;case 2:var i=n.a;if(i.b){if(i.b.b){var c=(e.b?"The Json.Decode.oneOf at json"+D(_t,"",Et(e)):"Json.Decode.oneOf")+" failed in the following "+Dt(it(i))+" ways:";return D(_t,"\n\n",D(yt,c,D(Ft,Ht,i)))}n=t=i.a,e=e;continue n}return"Ran into a Json.Decode.oneOf with no possibilities"+(e.b?" at json"+D(_t,"",Et(e)):"!");default:o=n.a,i=n.b;return(c=e.b?"Problem with the value at json"+D(_t,"",Et(e))+":\n\n    ":"Problem with the given value:\n\n")+(ot(D(Nt,4,i))+"\n\n")+o}}),Ot=a(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),Wt=[],Gt=O,Xt=d(function(n,e){return Q(e)/Q(n)}),Qt=Gt(D(Xt,2,32)),Jt=B(Ot,0,Qt,Wt,Wt),Kt=A,Zt=W,na=function(n){return n.length},ea=d(function(n,e){return 0<s(n,e)?n:e}),ra=j,ta=d(function(n,e){for(;;){var r=D(ra,32,n),t=r.b,r=D(yt,{$:0,a:r.a},e);if(!t.b)return Et(r);n=t,e=r}}),aa=d(function(n,e){for(;;){var r=Gt(e/32);if(1===r)return D(ra,32,n).a;n=D(ta,n,T),e=r}}),oa=d(function(n,e){if(e.s){var r=32*e.s,t=Zt(D(Xt,32,r-1)),n=n?Et(e.F):e.F,n=D(aa,n,e.s);return B(Ot,na(e.v)+r,D(ea,5,t*Qt),n,e.v)}return B(Ot,na(e.v),Qt,Wt,e.v)}),ia=r(function(n,e,r,t,a){for(;;){if(e<0)return D(oa,!1,{F:t,s:r/32|0,v:a});var o={$:1,a:_(Kt,32,e,n)};n=n,e=e-32,r=r,t=D(yt,o,t),a=a}}),ca=d(function(n,e){if(0<n){var r=n%32;return z(ia,e,n-r-32,n,T,_(Kt,r,n-r,e))}return Jt}),ua=function(n){return!n.$},la=hn,fa=xn,sa=function(n){return{$:0,a:n}},da=function(n){switch(n.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},ga=t(function(n,e,r,t,a,o){return{eV:o,h7:e,iU:t,iY:r,i_:n,cY:a}}),ba=cn,pa=function(n){return n.length},ma=an,va=d(function(n,e){return n<1?e:_(ma,n,pa(e),e)}),ha=ln,xa=d(function(n,e){return n<1?"":_(ma,0,n,e)}),$a=function(n){for(var e=0,r=n.charCodeAt(0),t=43==r||45==r?1:0,a=t;a<n.length;++a){var o=n.charCodeAt(a);if(o<48||57<o)return mt;e=10*e+o-48}return a==t?mt:pt(45==r?-e:e)},ya=r(function(n,e,r,t,a){if(""===a||D(ba,"@",a))return mt;var o=D(ha,":",a);if(o.b){if(o.b.b)return mt;var i=o.a,o=$a(D(va,i+1,a));if(1===o.$)return mt;o=o;return pt(b(ga,n,D(xa,i,a),o,e,r,t))}return pt(b(ga,n,a,mt,e,r,t))}),wa=a(function(n,e,r,t){if(""===t)return mt;var a=D(ha,"/",t);if(a.b){a=a.a;return z(ya,n,D(va,a,t),e,r,D(xa,a,t))}return z(ya,n,"/",e,r,t)}),Ca=P(function(n,e,r){if(""===r)return mt;var t=D(ha,"?",r);if(t.b){t=t.a;return B(wa,n,pt(D(va,t+1,r)),e,D(xa,t,r))}return B(wa,n,mt,e,r)}),Pa=d(function(n,e){if(""===e)return mt;var r=D(ha,"#",e);if(r.b){r=r.a;return _(Ca,n,pt(D(va,r+1,e)),D(xa,r,e))}return _(Ca,n,mt,e)}),Ta=un,Ma=function(n){return D(Ta,"http://",n)?D(Pa,0,D(va,7,n)):D(Ta,"https://",n)?D(Pa,1,D(va,8,n)):mt},La=function(){for(;;)0},Aa=kn,C=Aa(0),Ba=a(function(n,e,r,t){if(t.b){var a=t.a,o=t.b;if(o.b){var i=o.a,c=o.b;if(c.b){t=c.a,o=c.b;if(o.b){c=o.b;return D(n,a,D(n,i,D(n,t,D(n,o.a,500<r?_(jt,n,e,Et(c)):B(Ba,n,e,r+1,c)))))}return D(n,a,D(n,i,D(n,t,e)))}return D(n,a,D(n,i,e))}return D(n,a,e)}return e}),za=P(function(n,e,r){return B(Ba,n,e,0,r)}),Na=d(function(r,n){return _(za,d(function(n,e){return D(yt,r(n),e)}),T,n)}),Da=qn,_a=d(function(e,n){return D(Da,function(n){return Aa(e(n))},n)}),Sa=P(function(r,n,t){return D(Da,function(e){return D(Da,function(n){return Aa(D(r,e,n))},t)},n)}),ja=Qn,Va=d(function(n,e){return En(D(Da,ja(n),e))});function ka(n){switch(n.$){case 0:return 1;case 1:return 2;case 2:return 4;case 3:return 1;case 4:return 2;case 5:case 6:return 4;case 7:return 8;case 8:case 9:return n.a;default:return n.a.byteLength}}function qa(n){return D(To,function(n){for(var e=0,r=0;r<n.length;r++){var t=n.charCodeAt(r);e+=t<128?1:t<2048?2:t<55296||56319<t?3:(r++,4)}return e}(n),n)}function Fa(n){return(n=D(Vo,n,jo)).$?"":n.a}function Ra(n){switch(n){case 0:return 0;case 1:return 2;case 2:return 4;default:return 6}}function Ea(n){var e=n.b,r=n.c;switch(n.a){case 3:return S(r,Fa(e));case 2:return r+(Fa(D(qo,1,e))+"=");case 1:return r+(Fa(D(qo,2,e))+"==");default:return r}}function Ia(n){var e={a:Go(n),b:Ho},e=D(Yo,e,Io(Wo));return D(Oo,Ea,D(Mo,e,n))}function Ha(n){return D(Xo,"",Ia(n.$?n.a:Po(qa(n.a))))}function Ua(n){return{$:4,a:n}}function Ya(n){return D(si,n,function(n){return!n.b||n.b.b?mt:pt(n.a)})}function Oa(n){switch(n){case"invalid_request":return $i;case"unauthorized_client":return Pi;case"access_denied":return xi;case"unsupported_response_type":return Ti;case"invalid_scope":return yi;case"server_error":return wi;case"temporarily_unavailable":return Ci;default:return{$:7,a:n}}}function Wa(n){return{$:1,a:n}}function Ga(n){return{$:2,a:n}}function Xa(n){if(-1!==n.$||-1!==n.d.$||-1!==n.e.$)return n;if(-1!==n.e.d.$||n.e.d.a){var e=n.d,r=n.e,t=r.b,a=r.c,o=r.d,i=r.e;return z(zo,1,n.b,n.c,z(zo,0,e.b,e.c,e.d,e.e),z(zo,0,t,a,o,i))}var o,c=n.d,u=n.e,t=u.b,a=u.c,r=(o=u.d).d,e=o.e,i=u.e;return z(zo,0,o.b,o.c,z(zo,1,n.b,n.c,z(zo,0,c.b,c.c,c.d,c.e),r),z(zo,1,t,a,e,i))}function Qa(n){if(-1!==n.$||-1!==n.d.$||-1!==n.e.$)return n;if(-1!==n.d.d.$||n.d.d.a){var e=n.d,r=e.d,t=n.e,a=t.b,o=t.c,i=t.d,c=t.e;return z(zo,1,u=n.b,l=n.c,z(zo,0,e.b,e.c,r,t=e.e),z(zo,0,a,o,i,c))}var u=n.b,l=n.c,t=(r=n.d).e,a=(n=n.e).b,o=n.c,i=n.d,c=n.e;return z(zo,0,r.b,r.c,z(zo,1,(e=r.d).b,e.c,e.d,e.e),z(zo,1,u,l,t,z(zo,0,a,o,i,c)))}function Ja(n){var r=n;return function(n){var e=n.a0;return N([z(zi,n.a7,n.aL,e,n.aX,(0,n.jX)(r(e)))])}}function Ka(n){return _(za,Hi,T,n)}function Za(n){return N([n])}function no(n){return _(Qi,"#",n.eV,_(Qi,"?",n.cY,S(D(Xi,n.iY,S(n.i_?"https://":"http://",n.h7)),n.iU)))}function eo(n){return _(jt,d(function(n,e){return _(jn,n.a,n.b,e)}),{},n)}function ro(n){return{$:0,a:n}}function to(n){return{$:11,a:n}}function ao(n){return{$:12,a:n}}function oo(n){return{$:2,a:n}}function io(n){return{$:1,a:n}}function co(n){return{$:10,a:n}}function uo(n){return{$:8,a:n}}function lo(n){return n.b?pt(n.a):mt}function fo(n){return n.$?n.a.ab.c5:1}function so(n){return(n.$?n.a.ab:n.a).a3}function go(n){return D(Xo,yc,D($c,{hg:!1,iE:!1},n))}function bo(n){return{gA:Tc(n),gB:Mc(n)}}function po(n){function e(n){return!(n=n.ge).b||n.a.$?mt:Lc(n.a.a)}function r(n){return D(Na,e,n)}function t(n){return r(D(Pc,go('lon=\\"([\\d\\.-]*)\\"'),n))}function a(n){return r(D(Pc,go('lat=\\"([\\d\\.-]*)\\"'),n))}function o(n){return r(D(Pc,go("<ele>([\\d\\.-]*)<\\/ele>"),n))}return n=D(Na,function(n){return n.iy},D(Pc,go("<trkpt((.|\\n|\\r)*?)trkpt>"),n)),D(Cc,gt,D(Na,function(n){var e={a:a(n),b:t(n),c:o(n)};if(!e.a.b||e.a.a.$||!e.b.b||e.b.a.$)return mt;if(e.c.b&&!e.c.a.$){var r=e.a.a.a,n=e.c.a.a;return pt(_(ni,bo(e.b.a.a/180*3.141592653589793),r/180*3.141592653589793,n+6371e3))}r=e.a.a.a;return pt(_(ni,bo(e.b.a.a/180*3.141592653589793),r/180*3.141592653589793,6371e3))},n))}function mo(n){return n.a+"="+n.b}function vo(n){return n.b?"?"+D(_t,"&",D(Na,mo,n)):""}function ho(n){return{$:4,a:n}}Xn.Task={b:C,c:P(function(n,e){return D(_a,function(){return 0},bt(D(Na,Va(n),e)))}),d:P(function(){return Aa(0)}),e:d(function(n,e){return D(_a,n,e)}),f:void 0};var xo=Kn("Task"),$o=d(function(n,e){return xo(D(_a,n,e))}),V=function(e){var n=e.iM,a=e.iN,r=function(){r.a(n(Xe()))};return Oe({eg:function(t){return r.a=t,Ke.addEventListener("popstate",r),~Ke.navigator.userAgent.indexOf("Trident")&&Ke.addEventListener("hashchange",r),d(function(n,e){var r;e.ctrlKey||e.metaKey||e.shiftKey||1<=e.button||n.target||n.hasAttribute("download")||(e.preventDefault(),r=n.href,e=Xe(),n=Ma(r).a,t(a(n&&e.i_===n.i_&&e.h7===n.h7&&e.iY.a===n.iY.a?{$:0,a:n}:{$:1,a:r})))})},ig:function(n){return _(e.ig,n,Xe(),r)},jZ:e.jZ,jU:e.jU,jt:e.jt})},yo=P(function(n,e,r){return e(n(r))}),q=function(n){return{$:1,a:n}},wo=P(function(n,e,r){switch(n.$){case 0:return _(er,e,r,n.a);case 1:return B(rr,e,r,n.b,!n.a);case 2:return B(tr,e,r,n.b,!n.a);case 3:return _(ar,e,r,n.a);case 4:return B(or,e,r,n.b,!n.a);case 5:return B(ir,e,r,n.b,!n.a);case 6:return B(cr,e,r,n.b,!n.a);case 7:return B(ur,e,r,n.b,!n.a);case 8:return _(Co,n.b,e,r);case 9:return _(fr,e,r,n.b);default:return _(lr,e,r,n.a)}}),Co=P(function(n,e,r){for(;;){if(!n.b)return r;var t=n.b,a=e,o=_(wo,n.a,e,r);n=t,e=a,r=o}}),Po=function(n){var e=new DataView(new ArrayBuffer(ka(n)));return wo(n)(e)(0),e},To=d(function(n,e){return{$:9,a:n,b:e}}),Mo=d(function(n,e){return D(sr,n,e)}),Lo=d(function(n,e){switch(n){case 0:return e;case 1:return 3&e;case 2:return 15&e;default:return 63&e}}),Ao={$:-2},Bo=Ao,zo=r(function(n,e,r,t,a){return{$:-1,a:n,b:e,c:r,d:t,e:a}}),No=r(function(n,e,r,t,a){if(-1!==a.$||a.a){if(-1!==t.$||t.a||-1!==t.d.$||t.d.a)return z(zo,n,e,r,t,a);var o=t.d,i=t.e;return z(zo,0,t.b,t.c,z(zo,1,o.b,o.c,o.d,o.e),z(zo,1,e,r,i,a))}var c=a.b,u=a.c,o=a.d,a=a.e;if(-1!==t.$||t.a)return z(zo,n,c,u,z(zo,0,e,r,t,o),a);var i;return z(zo,0,e,r,z(zo,1,t.b,t.c,t.d,i=t.e),z(zo,1,c,u,o,a))}),Do=h,_o=P(function(n,e,r){if(-2===r.$)return z(zo,0,n,e,Ao,Ao);var t=r.a,a=r.b,o=r.c,i=r.d,c=r.e;switch(D(Do,n,a)){case 0:return z(No,t,a,o,_(_o,n,e,i),c);case 1:return z(zo,t,a,e,i,c);default:return z(No,t,a,o,i,_(_o,n,e,c))}}),So=P(function(n,e,r){r=_(_o,n,e,r);if(-1!==r.$||r.a)return r;return z(zo,1,r.b,r.c,r.d,r.e)}),jo=(Wf=N([{a:0,b:"A"},{a:1,b:"B"},{a:2,b:"C"},{a:3,b:"D"},{a:4,b:"E"},{a:5,b:"F"},{a:6,b:"G"},{a:7,b:"H"},{a:8,b:"I"},{a:9,b:"J"},{a:10,b:"K"},{a:11,b:"L"},{a:12,b:"M"},{a:13,b:"N"},{a:14,b:"O"},{a:15,b:"P"},{a:16,b:"Q"},{a:17,b:"R"},{a:18,b:"S"},{a:19,b:"T"},{a:20,b:"U"},{a:21,b:"V"},{a:22,b:"W"},{a:23,b:"X"},{a:24,b:"Y"},{a:25,b:"Z"},{a:26,b:"a"},{a:27,b:"b"},{a:28,b:"c"},{a:29,b:"d"},{a:30,b:"e"},{a:31,b:"f"},{a:32,b:"g"},{a:33,b:"h"},{a:34,b:"i"},{a:35,b:"j"},{a:36,b:"k"},{a:37,b:"l"},{a:38,b:"m"},{a:39,b:"n"},{a:40,b:"o"},{a:41,b:"p"},{a:42,b:"q"},{a:43,b:"r"},{a:44,b:"s"},{a:45,b:"t"},{a:46,b:"u"},{a:47,b:"v"},{a:48,b:"w"},{a:49,b:"x"},{a:50,b:"y"},{a:51,b:"z"},{a:52,b:"0"},{a:53,b:"1"},{a:54,b:"2"},{a:55,b:"3"},{a:56,b:"4"},{a:57,b:"5"},{a:58,b:"6"},{a:59,b:"7"},{a:60,b:"8"},{a:61,b:"9"},{a:62,b:"+"},{a:63,b:"/"}]),_(jt,d(function(n,e){return _(So,n.a,n.b,e)}),Bo,Wf)),Vo=d(function(n,e){n:for(;;){if(-2===e.$)return mt;var r=e.c,t=e.d,a=e.e;switch(D(Do,n,e.b)){case 0:n=n,e=t;continue n;case 1:return pt(r);default:n=n,e=a;continue n}}}),ko=d(function(n,e){return e>>>Ra(n)}),qo=d(function(n,e){return e<<Ra(n)}),Fo=d(function(n,e){var r=e.b;switch(e.a){case 0:return D(ko,1,n);case 1:return D(qo,2,r)|D(ko,2,n);case 2:return D(qo,1,r)|D(ko,3,n);default:return r}}),Ro=d(function(n,e){var r=e.a,t=e.c,a=function(){switch(r){case 0:return D(Lo,1,n);case 1:return D(Lo,2,n);case 2:return D(Lo,3,n);default:return D(Lo,1,n)}}(),e=D(Fo,n,e),e=3===r?S(Fa(e),Fa(D(ko,1,n))):Fa(e);return{a:function(n){switch(n){case 0:return 1;case 1:return 2;case 2:return 3;default:return 1}}(r),b:a,c:S(t,e)}}),Eo=d(function(r,n){var t=n;return d(function(n,e){e=D(t,n,e);return{a:e.a,b:r(e.b)}})}),Io=d(function(n,e){var r,t=e.a,a=e.b;return 0<t?D(Eo,function(n){return{$:0,a:{a:t-1,b:D(Ro,n,a)}}},n):(r={$:1,a:a},d(function(n,e){return{a:e,b:r}}))}),Ho={a:0,b:0,c:""},Uo=a(function(n,e,r,t){for(;;){var a=D(e(n),r,t),o=a.a,a=a.b;if(a.$)return{a:o,b:a.a};n=a.a,e=e,r=r,t=o}}),Yo=d(function(n,e){return D(Uo,n,e)}),Oo=d(function(n,e){return e.$?mt:pt(n(e.a))}),Wo=dr,Go=Ze,Xo=d(function(n,e){return e.$?n:e.a}),on=D(yo,q,Ha),Qo=d(function(n,e){return{$:8,a:n,b:e}}),Jo=d(function(n,e){for(;;){if(!e.b)return n;var r=e.b;n=n+ka(e.a),e=r}}),Ko=function(n){return D(Qo,D(Jo,0,n),n)},y=D(yo,Na(function(n){return{$:3,a:n}}),D(yo,Ko,Po)),Zo=D(yo,y,D(yo,on,function(n){return{bZ:n}})),ni=P(function(n,e,r){return{di:r,aa:e,q:n}}),ei=Zn,ri=_n=d(function(n,e){return{$:0,a:n,b:e}}),ti={$:2,b:function(n){n({$:0,a:D(ri,-(new Date).getTimezoneOffset(),T)})},c:null},ai={$:3},oi={$:0},ii={$:0},ci=Wn,ui=d(function(n,e){return D($o,vt(e),ci(n))}),li=ei(T),fi=a(function(n,e,r,t){return{eM:n,eN:e,eO:r,bZ:t}}),si=d(function(e,r){return function(n){return r(D(Xo,T,D(Vo,e,n)))}}),di=Ya("error_description"),gi=Ya("error_uri"),bi=a(function(e,n,r,t){var a=n,o=r,i=t;return function(n){return _(e,a(n),o(n),i(n))}}),pi=Ya("state"),L=function(n){return B(bi,fi(n),di,gi,pi)},mi=d(function(n,e){return{dr:n,bZ:e}}),vi=d(function(e,n){var r=n;return function(n){return e(r(n))}}),hi=Ya("code"),xi={$:2},$i={$:0},yi={$:4},wi={$:5},Ci={$:6},Pi={$:1},Ti={$:3},Mi={dj:L,dk:function(n){return D(vi,mi(n),pi)},ds:hi,dy:D(vi,Oo(Oa),Ya("error"))},Li={$:0},Ai=P(function(e,n,r){var t=n,a=r;return function(n){return D(e,t(n),a(n))}}),Bi=d(function(n,e){return{a:n,b:e}}),zi=r(function(n,e,r,t,a){return{aX:t,a0:r,aL:e,jX:a,a7:n}}),Ni=function(n){return n.b&&(""!==n.a||n.b.b)?D(yt,n.a,Ni(n.b)):T},Di=d(function(n,e){return pt(1===e.$?N([n]):D(yt,n,e.a))}),_i=function(n){try{return pt(decodeURIComponent(n))}catch(n){return mt}},Si=o(function(n,e,r,t,a,o,i){if(-1!==o.$||o.a){n:for(;-1===i.$&&1===i.a;){if(-1===i.d.$){if(1!==i.d.a)break n;return Qa(e)}return Qa(e)}return e}return z(zo,r,o.b,o.c,o.d,z(zo,0,t,a,o.e,i))}),ji=function(n){if(-1!==n.$||-1!==n.d.$)return Ao;var e=n.a,r=n.b,t=n.c,a=n.d,o=a.d,i=n.e;if(1!==a.a)return z(zo,e,r,t,ji(a),i);if(-1!==o.$||o.a){var c=Xa(n);if(-1!==c.$)return Ao;n=c.e;return z(No,c.a,c.b,c.c,ji(c.d),n)}return z(zo,e,r,t,ji(a),i)},Vi=d(function(n,e){if(-2===e.$)return Ao;var r=e.a,t=e.b,a=e.c,o=e.d,i=e.e;if(s(n,t)<0){if(-1!==o.$||1!==o.a)return z(zo,r,t,a,D(Vi,n,o),i);var c=o.d;if(-1!==c.$||c.a){var u=Xa(e);if(-1!==u.$)return Ao;var l=u.e;return z(No,u.a,u.b,u.c,D(Vi,n,u.d),l)}return z(zo,r,t,a,D(Vi,n,o),i)}return D(ki,n,f(Si,n,e,r,t,a,o,i))}),ki=d(function(n,e){if(-1!==e.$)return Ao;var r=e.a,t=e.b,a=e.c,o=e.d,i=e.e;if(g(n,t)){e=function(n){for(;;){if(-1!==n.$||-1!==n.d.$)return n;n=n.d}}(i);return-1!==e.$?Ao:z(No,r,e.b,e.c,o,ji(i))}return z(No,r,t,a,o,D(Vi,n,i))}),qi=d(function(n,e){e=D(Vi,n,e);if(-1!==e.$||e.a)return e;return z(zo,1,e.b,e.c,e.d,e.e)}),Fi=P(function(n,e,r){e=e(D(Vo,n,r));return e.$?D(qi,n,r):_(So,n,e.a,r)}),Ri=d(function(n,e){var r=D(St,"=",n);if(r.b&&r.b.b&&!r.b.b.b){n=r.b.a,r=_i(r.a);if(1===r.$)return e;r=r.a,n=_i(n);return 1===n.$?e:_(Fi,r,Di(n.a),e)}return e}),Ei=d(function(n,e){return function(n){for(;;){if(!n.b)return mt;var e=n.a,r=n.b,t=e.aL;if(!t.b)return pt(e.jX);if(""===t.a&&!t.b.b)return pt(e.jX);n=r}}(n(z(zi,T,function(n){n=D(St,"/",n);return Ni(n.b&&""===n.a?n.b:n)}(e.iU),1===(n=e.cY).$?Bo:_(za,Ri,Bo,D(St,"&",n.a)),e.eV,gt)))}),Ii=P(function(n,e,r){return D(Xo,e,D(Ei,Ja(r),n))}),Hi=d(function(n,e){return e.b?_(za,yt,e,n):n}),Ui=d(function(n,e){return Ka(D(Na,n,e))}),Yi=d(function(n,e){var r=n,t=e;return function(n){return D(Ui,t,r(n))}}),Oi=d(function(n,e){return D(Yi,n,Ja(e))}),Wi=d(function(n,e){var r=n.ds,t=n.dy,a=n.dk,o=n.dj,i=$(e,{iU:"/"}),c=D(Ei,D(Oi,Za,_(Ai,Bi,r,t)),i);n:for(;!c.$;){if(c.a.a.$){if(c.a.b.$)break n;return _(Ii,i,Li,D(vi,Wa,o(c.a.b.a)))}return _(Ii,i,Li,D(vi,Ga,a(c.a.a.a)))}return Li})(Mi),Gi=Qe,Xi=d(function(n,e){return 1===n.$?e:e+(":"+Dt(n.a))}),Qi=P(function(n,e,r){return 1===e.$?r:S(r,S(n,e.a))}),Ji=a(function(n,e,r,t){var a=$(e,{eV:mt,cY:mt}),o=D(Gi,r,no(a)),i=Wi(e);switch(i.$){case 0:return{a:{hY:ii,bT:a},b:li};case 2:var c=i.a.dr;return 1!==n.$&&g(i.a.bZ,pt(n.a.bZ))?{a:{hY:{$:1,a:c},bT:a},b:ei(N([D(ui,50,t(ai)),o]))}:{a:{hY:{$:4,a:oi},bT:a},b:o};default:return{a:{hY:{$:4,a:{$:1,a:i.a}},bT:a},b:o}}}),Ki=gt,K=ie("storageCommands",gt),Zi=Sn,nc=K(eo(N([{a:"Cmd",b:Zi("storage.list")}]))),ec=D(_n,0,T),rc={gA:1,gB:0},tc=rc,O=P(function(n,e,r){e=B(Ji,n,e,r,at),r=e.a,e=e.b;return{a:{dw:0,eS:mt,e5:mt,it:{a:0,b:0},ix:!1,f0:_(ni,tc,0,0),ec:0,i5:T,ei:r,jM:Ki(0),b6:mt,gu:mt,j_:{a:800,b:500},j$:0,gF:ec},b:ei(N([e,D($o,Ua,ti),nc]))}}),ac=sn,A=function(n){return{$:3,b:n}},l=function(n){return{$:5,c:n}},oc=function(n){return{$:11,g:n}},ic=Zn,cc=P(function(n,e,r){return n(e(r))}),uc=le("mapResponses",W=bn),lc=le("randomBytes",A(ac)),fc=le("storageResponses",W),sc=Sn,dc=ie("mapCommands",gt),gc="pk.eyJ1IjoicGV0ZXJqYW1lc3dhcmQiLCJhIjoiY2tpdWswb3dsMm02bDMzcDMyNGw1bmh5aSJ9.Fk3ibin0PpeEGXlGsctP1g",bc=d(function(n,e){return D($o,e,function(n){return{$:2,b:function(e){(nr=document.createElement("input")).type="file",nr.accept=D(_t,",",n),nr.addEventListener("change",function(n){e({$:0,a:n.target.files[0]})}),mr(nr)},c:null}}(n))}),pc=d(function(n,e){for(;;){if(!e.$){var r=e.a;return e}e=s(n,fo((r=e.a).n))<0?(n=n,r.n):(n=n-fo(r.n),r.Q)}}),mc=d(function(n,e){return{hc:tc,hd:1e4,he:.5235987755982988,hA:10,hK:0,hV:.7853981633974483,hZ:so(D(pc,n,e)),h$:!0,iQ:mt,j2:!1,kc:10}}),vc=ne,hc=function(n){return n.name},xc=a(function(n,e,r,t){return{$8:e,iy:n,iI:r,ge:t}}),$c=vr,yc=/.^/,wc=P(function(n,e,r){e=n(e);return e.$?r:D(yt,e.a,r)}),Cc=d(function(n,e){return _(za,wc(n),T,e)}),Pc=hr(1/0),Tc=I,Mc=H,Lc=function(n){return 0!==n.length&&!/[\sxbo]/.test(n)&&(n=+n)==n?pt(n):mt},Ac=P(function(n,e,r){return n+("/"+(D(_t,"/",e)+vo(r)))}),Bc=d(function(n,e){return{$:3,a:n,b:e}}),zc=function(n){return{$:0,a:n}},Nc=d(function(n,e){return{$:4,a:n,b:e}}),Dc={$:2},_c=function(n){return{$:1,a:n}},Sc=function(n){return{$:0,a:n}},jc={$:1},Vc=function(n){return!n.$},kc=Jn,qc={$:0},Fc=Pn,Rc=d(function(n,e){return _($r,"",gt,D(yo,e,n))}),Ec=d(function(n,e){return e.$?Pt(n(e.a)):At(e.a)}),Ic={$:2},Hc={$:1},Uc=d(function(n,e){switch(e.$){case 0:return Pt({$:0,a:e.a});case 1:return Pt(Hc);case 2:return Pt(Ic);case 3:return Pt({$:3,a:e.a.jn});default:return D(Ec,ho,n(e.b))}}),Yc=d(function(n,e){return D(Rc,n,Uc(function(n){return D(Ec,Ut,D(Fc,e,n))}))}),m=o(function(n,e,r,t,a,o,i){return{ck:t,ct:e,cE:n,aa:o,q:i,c$:r,de:a}}),Oc=mn,Wc=d(function(n,e){return _(za,Oc,e,n)}),Gc=gn,Xc=pn,Qc=c(Cn,m,D(Wc,N(["query"]),Xc),D(Wc,N(["country"]),Xc),D(Wc,N(["region"]),Xc),D(Wc,N(["city"]),Xc),D(Wc,N(["zip"]),Xc),D(Wc,N(["lat"]),Gc),D(Wc,N(["lon"]),Gc)),Jc=d(function(n,e){return{f2:n,gf:e}}),j=Aa(D(Jc,Bo,T)),Kc=function(r){return{$:2,b:function(n){var e=r.f;2===e.$&&e.c&&e.c(),r.f=null,n({$:0,a:x})},c:null}},Zc=En,nu=P(function(r,n,t){for(;;){if(!n.b)return Aa(t);var e=n.a,a=n.b;if(e.$){var o=e.a;return D(Da,function(n){var e=o.gm;return _(nu,r,a,1===e.$?t:_(So,e.a,n,t))},Zc(_(xr,r,ja(r),o)))}var i=e.a,e=D(Vo,i,t);if(1!==e.$)return D(Da,function(){return _(nu,r,a,D(qi,i,t))},Kc(e.a));r=r,n=a,t=t}}),F=a(function(n,e,r,t){return D(Da,function(n){return Aa(D(Jc,n,r))},_(nu,n,e,t.f2))}),eu=a(function(n,e,r,t){var a=t.b;return g(e,t.a)?pt(D(ja,n,a(r))):mt}),p=P(function(n,e,r){return D(Da,function(){return Aa(r)},bt(D(Cc,_(eu,n,e.a,e.b),r.gf)))}),E=d(function(n,e){if(e.$){var r=e.a;return{$:1,a:{gQ:r.gQ,g2:r.g2,eQ:D(yr,n,r.eQ),eX:r.eX,fA:r.fA,gj:r.gj,gm:r.gm,gr:r.gr}}}return{$:0,a:e.a}}),ru=d(function(n,e){return{$:0,a:n,b:e}});function tu(n){return El({$:1,a:{gQ:!1,g2:n.g2,eQ:n.eQ,eX:n.eX,fA:n.fA,gj:n.gj,gm:n.gm,gr:n.gr}})}function au(n){return n<0?-n:n}function ou(n){return au(n)}function iu(n){return n.$?n.a.ab:n.a}function cu(n){return(n.$?n.a.ab:n.a).bw}function uu(n){return _(Ol,_(Yl,(e=n).fB,e.fx,.5),function(n){return _(Yl,n.fC,n.fy,.5)}(n),function(n){return _(Yl,n.fD,n.fz,.5)}(n));var e}function lu(n){return n.fx}function fu(n){return n.fy}function su(n){return n.fz}function du(n){return n.fB}function gu(n){return n.fC}function bu(n){return n.fD}function pu(n){return{a:D(Wl,du(n),lu(n)),b:D(Wl,gu(n),fu(n)),c:D(Wl,bu(n),su(n))}}function mu(n){return.5*n}function vu(n){return n*n}function hu(n){var e=uu(n),n=pu(n),n=mu(function(n){return Gl(n)}((n=N([vu(n.a),vu(n.b),vu(n.c)]),_(jt,Xl,0,n))));return D(Ql,n,e)}function xu(n){return(n.$?n.a.ab:n.a).bF}function $u(n){return(n.$?n.a.ab:n.a).aW}function yu(n){return n.gA}function wu(n){return n.gB}function Cu(n){return n.dd}function Pu(n){return 0<n}function Tu(n){return n}function Mu(n){return-n}function Lu(n){return Tc(n)}function Au(n){return Tu(n)/3.141592653589793*180}function Bu(n){return D(Hl,n.gB,n.gA)}function zu(n){return(n.$?n.a.ab:n.a).bQ}function Nu(n){return(n.$?n.a.ab:n.a).a2}function Du(n){return(n.$?n.a.ab:n.a).b8}function _u(n){return n}function Su(n){return(n.$?n.a.ab:n.a).cb}function ju(n){var o=D(Xo,_(ni,tc,0,0),lo(n)),e=it(n)-1,i=d(function(n,e){var r,t=D(of,mu(D(Ul,zu(n),zu(e))),zu(n)),a=D(uf,cu(n),cu(e));return{bs:D(Xl,iu(n).bs,iu(e).bs),bt:D(Xl,iu(n).bt,iu(e).bt),bw:a,bA:iu(e).bA,bB:iu(n).bB,bC:D(Xo,0,(r=N([iu(n).bC,iu(n).bC,ou(D(Ul,iu(n).bA,iu(e).bB))])).b?pt(_(jt,Kl,r.a,r.b)):mt),bD:D(Xl,iu(n).bD,iu(e).bD),bE:D(Xl,iu(n).bE,iu(e).bE),bF:D(Kl,D(Ul,t,D(of,xu(n),zu(n))),D(Ul,t,D(of,xu(e),zu(e)))),aW:$u(e),cy:iu(e).cy,cz:iu(n).cz,bL:D(ea,iu(n).bL,iu(e).bL),bQ:t,c5:fo(n)+fo(e),a2:{a:Nu(n).a,b:Nu(e).b},bY:hu(a),a3:so(n),b_:D(ea,iu(n).b_,iu(e).b_),b8:D(Xl,Du(n),Du(e)),cb:D(nf,D(Ul,t,D(of,Su(n),zu(n))),D(Ul,t,D(of,Su(e),zu(e))))}}),c=d(function(n,e){var r={a:n<2,b:e};if(r.a){if(r.b.b&&r.b.b.b){var e=r.b,t=e.b,a=t.a,t=t.b;return{a:pt({$:0,a:_(cf,o,e.a,a)}),b:D(yt,a,t)}}return{a:mt,b:r.b}}a=n/2|0,n-=a,r=D(c,a,t=r.b),t=r.a,n=D(c,n,r.b),r=n.b,t={a:t,b:n.a};if(t.a.$||t.b.$)return{a:mt,b:r};n=t.a.a,t=t.b.a;return{a:pt({$:1,a:{n:n,ab:D(i,n,t),Q:t}}),b:r}});return D(c,e,n).a}function Vu(n){return D(pf,sc,N([Au(n.a),Au(n.b)]))}function ku(n){function e(n){var e=n.aa;return{a:Bu(n.q),b:e}}function o(n){return Vu(e(Nu(n).b))}var i=P(function(n,e,r){if(e.$){var t=e.a;return 0<n?_(i,n-1,t.n,_(i,n-1,t.Q,r)):D(yt,o(e),r)}return D(yt,o(e),r)}),c=a(function(n,e,r,t){if(r.$){var a=r.a;return D(bf,n,a.ab.bw)?B(c,n,e-1,a.n,B(c,n,e-1,a.Q,t)):_(i,e-1,a.n,_(i,e-1,a.Q,t))}return D(yt,o(r),t)});if((t=n.b6).$)return sf;var r=t.a,t=so(D(pc,n.dw,r)),t=D(mf,{a:4e3,b:4e3,c:4e3},t),n=D(yt,Vu(e(Nu(r).a)),B(c,t,n.ec,r,T)),n=eo(N([{a:"type",b:Zi("LineString")},{a:"coordinates",b:D(pf,gt,n)}]));return eo(N([{a:"type",b:Zi("Feature")},{a:"properties",b:eo(T)},{a:"geometry",b:n}]))}function qu(n){if((t=n.b6).$)return li;var e=Nu(D(pc,n.dw,t.a)).a,r=e.q,t=e.aa;return dc(eo(N([{a:"Cmd",b:Zi("Track")},{a:"token",b:Zi(gc)},{a:"lon",b:sc(Au(Bu(r)))},{a:"lat",b:sc(Au(t))},{a:"zoom",b:sc(10)},{a:"data",b:ku(n)},{a:"points",b:sf}])))}function Fu(n){return{$:4,a:n}}function Ru(n){return D(_t,"",n)}function Eu(n){return Ru(N([n.i_?"https":"http","://",n.h7,D(Xo,"",D(Oo,function(n){return":"+Dt(n)},n.iY)),n.iU,D(Xo,"",D(Oo,function(n){return"?"+n},n.cY))]))}function Iu(n){return{$:6,a:n}}function Hu(n){return yt(D(Af,"Authorization","Bearer "+n))}function Uu(n){return Nu(n).a.aa}function Yu(n){return n.et}function Ou(n){return n.eu}function Wu(n){return n.d_}function Gu(n){return n.et}function Xu(n){return n.eu}function Qu(n){return n.ev}function Ju(n){return n.hH}function Ku(n){return D(ws,n.d_,n.et)}function Zu(n){return D(ws,n.d_,n.eu)}function nl(n){return D(ws,n.d_,n.ev)}function el(n){var e={d_:n.hZ,et:Ou(n.cA),eu:D(ds,Yu(e=n.cA),Ou(e)),ev:Yu(n.cA)};return _(ys,nl,n.hI,_(ms,Ku,Mu(n.hN),_(ms,Zu,n.gY,e)))}function rl(n){var e=mu(ou(n.jY));return{d8:{$:0,a:Ts(e)},j0:n.j0}}function tl(n){return n.gA}function al(n){return n.gB}function ol(n){return n.hi}function il(n){return n.f$}function cl(n){return(n.$?n.a.ab:n.a).bY}function ul(n){return function(n){return n}(n.gX)}function ll(n){return Wu(n)}function fl(n){return{gA:-n.gA,gB:-n.gB,dd:-n.dd}}function sl(n){return fl(Qu(n))}function dl(n){return n}function gl(n){return D(ad,0,{$:0,a:function(n){n=function(n){return{gR:n.d,dp:n.c,dA:n.b,d9:n.a}}(n);return _(od,n.d9,n.dA,n.dp)}(n)})}function bl(n){return n.b}function pl(n){var e=n.a,r=n.b,t=n.c,a=n.d,o=D(Zl,e,D(Zl,r,t)),i=D(ea,e,D(ea,r,t)),c=(o+i)/2,n=g(o,i)?0:c<.5?(i-o)/(i+o):(i-o)/(2-i-o),o=1/6*(g(i,e)?(r-t)/(i-o):g(i,r)?2+(t-e)/(i-o):4+(e-r)/(i-o));return{gR:a,dE:ld(o)?0:o<0?1+o:o,iv:c,i4:n}}function ml(n){return n}function vl(n){return n}function hl(n){return n}function xl(n){var e=(t=pu(n)).a,r=t.b,t=t.c;return{hi:hl(uu(n)),h2:e/2,h3:r/2,h4:t/2}}function $l(n){return Cd(hl(n))}function yl(n){return{fx:yu(n),fy:wu(n),fz:Cu(n),fB:yu(n),fC:wu(n),fD:Cu(n)}}function wl(n){return n}function Cl(n){return{$:4,a:D(Rd,n,T)}}function Pl(n){return n}function Tl(f){return function(l){return function(u){return function(c){return function(i){return function(o){return function(a){return function(t){return function(r){return function(e){return function(n){return{$:2,a:f,b:l,c:u,d:c,e:i,f:o,g:a,h:t,i:r,j:e,k:n}}}}}}}}}}}}function Ml(n){return n.a}function Ll(n){function t(n){return _(sd,(n=(_(ls,-20,20,e=n)+20)/40,e=pl(cd).dE,n*pl(ud).dE+(1-n)*e),.6,.7);var e}function e(n){var e=D(id,so(n),$u(n)),n=100*D(af,D(Wl,Cu(so(r=n)),Cu($u(r))),Du(r)),r=D(Fd,o,e);return N([z(Ng,gl(t(n)),Ml(e),bl(e),bl(r),Ml(r))])}function a(n){return S(N([_(Vd,{f$:1},gl(td),so(n)),D(Td,gl(td),D(id,so(n),$u(n)))]),e(n))}var r=d(function(n,e){return N([_(Vd,{f$:10},gl(dd),so(D(pc,n,e)))])}),o=(l=n.b6).$?_g:D(Bd,bu(cu(l.a)),_g),i=P(function(n,e,r){if(e.$){var t=e.a;return 0<n?_(i,n-1,t.Q,_(i,n-1,t.n,r)):S(a(e),r)}return S(a(e),r)}),c=(l=n.b6).$?yl(Cs):D(mf,{a:4e3,b:4e3,c:4e3},so(D(pc,n.dw,l.a))),u=P(function(n,e,r){if(e.$){var t=e.a;return D(bf,c,t.ab.bw)?_(u,n-1,t.Q,_(u,n-1,t.n,r)):_(i,n-1,t.Q,_(i,n-1,t.n,r))}return S(a(e),r)}),l=n.b6;return l.$?T:_(u,n.ec,l=l.a,D(r,n.dw,l))}function Al(n){return{a:function(n){return $(n,{i5:Ll(n)})}(n),b:1===n.j$?ei(N([qu(n),function(n){var e=n.b6;if(e.$)return li;var r=Nu(D(pc,n.dw,e.a)).a,n=r.q,e=r.aa;return dc(eo(N([{a:"Cmd",b:Zi("Centre")},{a:"token",b:Zi(gc)},{a:"lon",b:sc(Au(Bu(n)))},{a:"lat",b:sc(Au(e))}])))}(n)])):li}}function Bl(n){return Dt(Eg(255*n))}function zl(n){var e=n.b,r=n.c,t=n.d;return Bl(n.a)+("-"+Bl(e)+("-"+Bl(r)+("-"+Bl(t))))}function Nl(n){return D(Fg,Rg,_(qg,"bg-"+zl(n),"background-color",n))}function Dl(n){switch(n.$){case 0:return mt;case 1:var e=n.a,r=e.b,t=e.c;return pt("mv-"+Bl(e.a)+("-"+Bl(r)+("-"+Bl(t))));default:var a=n.a,o=a.b,i=a.c,c=n.b,u=c.a,l=c.b,f=c.c,e=n.c,r=e.a,t=e.b,c=e.c,e=n.d;return pt("tfrm-"+Bl(a.a)+("-"+Bl(o)+("-"+Bl(i)+("-"+Bl(u)+("-"+Bl(l)+("-"+Bl(f)+("-"+Bl(r)+("-"+Bl(t)+("-"+Bl(c)+("-"+Bl(e)))))))))))}}function _l(n){return"."+n}function Sl(n){var e=n.b,r=n.c,t=n.d;return"rgba("+Dt(Eg(255*n.a))+(","+Dt(Eg(255*e))+","+Dt(Eg(255*r))+","+fp(t))+")"}function jl(n){return D(_t," ",D(Cc,gt,N([n.e2?pt("inset"):mt,pt(fp(n.a.a)+"px"),pt(fp(n.a.b)+"px"),pt(fp(n.a9)+"px"),pt(fp(n.gb)+"px"),pt(Sl(n.cn))])))}function Vl(n){return N([D(lp,"."+db+":focus-within",D(Cc,gt,N([D(Oo,function(n){return D(up,"border-color",Sl(n))},n.g4),D(Oo,function(n){return D(up,"background-color",Sl(n))},n.g_),D(Oo,function(n){return D(up,"box-shadow",jl({a9:n.a9,cn:n.cn,e2:!1,a:D(dp,st,D(sp,st,n.a)),gb:n.gb}))},n.jd),pt(D(up,"outline","none"))]))),D(lp,"."+eb+":focus .focusable, ."+eb+".focusable:focus, .ui-slide-bar:focus + ."+eb+" .focusable-thumb",D(Cc,gt,N([D(Oo,function(n){return D(up,"border-color",Sl(n))},n.g4),D(Oo,function(n){return D(up,"background-color",Sl(n))},n.g_),D(Oo,function(n){return D(up,"box-shadow",jl({a9:n.a9,cn:n.cn,e2:!1,a:D(dp,st,D(sp,st,n.a)),gb:n.gb}))},n.jd),pt(D(up,"outline","none"))])))])}function kl(n){return pe(we(n))}function ql(n){switch(n){case 0:return"."+Kg;case 1:return"."+Hg;case 2:return"."+Jg;case 3:return"."+Qg;case 4:return"."+Ug;default:return"."+Yg}}Xn.Http={b:j,c:F,d:p,e:E,f:d(function(n,e){return D(ru,e.a,D(yo,e.b,n))})};var Fl,Rl,El=Kn("Http"),Il=(Kn("Http"),function(r){return{$:2,b:function(n){var e=new FileReader;return e.addEventListener("loadend",function(){n({$:0,a:e.result})}),e.readAsText(r),function(){e.abort()}},c:null}}),Hl=Y,Ul=d(function(n,e){return D(Hl,n.gA*e.gB-n.gB*e.gA,n.gA*e.gA+n.gB*e.gB)}),Yl=P(function(n,e,r){return.5<r?e+(1-r)*(n-e):n+r*(e-n)}),Ol=P(function(n,e,r){return{gA:n,gB:e,dd:r}}),Wl=d(function(n,e){return e-n}),Gl=X,Xl=d(function(n,e){return e+n}),Ql=d(function(n,e){return{hi:e,f$:ou(n)}}),Jl=d(function(n,e){var r=n.a,t=n.b,a=e.a,n=e.b,e=Mc(n-t)*Tc(a),t=Tc(r)*Mc(a)-Mc(r)*Tc(a)*Tc(n-t);return D(Hl,e,t)}),Kl=d(function(n,e){return D(ea,n,e)}),Zl=d(function(n,e){return s(n,e)<0?n:e}),nf=d(function(n,e){return D(Zl,n,e)}),ef=d(function(n,e){var r=Cu(e),t=Cu(n),a=wu(e),o=wu(n),e=yu(e),n=yu(n);return{fx:D(Kl,n,e),fy:D(Kl,o,a),fz:D(Kl,t,r),fB:D(nf,n,e),fC:D(nf,o,a),fD:D(nf,t,r)}}),rf=d(function(n,e){return _(Ol,Lu(e.aa)*(78846.81*Au(D(Ul,n.q,e.q))),78846.81*Au(D(Wl,n.aa,e.aa)),D(Wl,n.di,e.di))}),tf=d(function(n,e){var r={a:Tu(e.b),b:Tu(e.a)},t=r.a,a={a:Tu(n.b),b:Tu(n.a)},e=a.a,n=t-e,t=(r.b-a.b)*Tc((e+t)/2);return 6371e3*Gl(t*t+n*n)}),af=d(function(n,e){return n/e}),of=d(function(n,e){var r=n,n=e,e=Mc(r),r=Tc(r);return{gA:r*n.gA-e*n.gB,gB:e*n.gA+r*n.gB}}),cf=P(function(n,e,r){var t=D(tf,{a:Bu(e.q),b:e.aa},{a:Bu(r.q),b:r.aa}),a=D(of,mu(D(Ul,e.q,r.q)),e.q),o=D(rf,n,r),i=D(rf,n,e),c=D(ef,i,o),u=D(Jl,{a:Tu(e.aa),b:Tu(Bu(e.q))},{a:Tu(r.aa),b:Tu(Bu(r.q))}),l=D(Wl,Cu(i),Cu(o)),n=Pu(t)&&Pu(l)?100*D(af,l,t):0;return{bs:D(Kl,0,l),bt:D(Kl,0,Mu(l)),bw:c,bA:bo(u),bB:bo(u),bC:0,bD:Pu(l)?t:0,bE:l<0?t:0,bF:D(Kl,0,D(Kl,D(Ul,a,e.q),D(Ul,a,r.q))),aW:o,cy:n,cz:n,bL:au(n),bQ:a,c5:1,a2:{a:e,b:r},bY:hu(c),a3:i,b_:D(ea,0,n),b8:t,cb:D(nf,0,D(nf,D(Ul,a,e.q),D(Ul,a,r.q)))}}),uf=d(function(n,e){e=_u(e),n=_u(n);return{fx:D(Kl,n.fx,e.fx),fy:D(Kl,n.fy,e.fy),fz:D(Kl,n.fz,e.fz),fB:D(nf,n.fB,e.fB),fC:D(nf,n.fC,e.fC),fD:D(nf,n.fD,e.fD)}}),lf={$:2},ff={$:1},sf=Vn,df=d(function(n,e){return-1<s(e,n)}),gf=d(function(n,e){return s(e,n)<1}),bf=d(function(n,e){return D(gf,lu(n),du(e))&&D(df,du(n),lu(e))&&D(gf,fu(n),gu(e))&&D(df,gu(n),fu(e))&&D(gf,su(n),bu(e))&&D(df,bu(n),su(e))}),pf=d(function(n,e){return _(jt,function(r){return d(function(n,e){return e.push(r(n)),e})}(n),[],e)}),mf=d(function(n,e){var r=mu(ou(n.b)),t=mu(ou(n.a)),a=mu(ou(n.c)),o=function(n){return{a:n.gA,b:n.gB,c:n.dd}}(e),n=o.a,e=o.b,o=o.c;return{fx:D(Xl,t,n),fy:D(Xl,r,e),fz:D(Xl,a,o),fB:D(Wl,t,n),fC:D(Wl,r,e),fD:D(Wl,a,o)}}),vf=Tn,hf=D(Oc,"msg",Xc),xf=d(function(n,e){return D(tf,{a:Bu(n.q),b:n.aa},{a:Bu(e.q),b:e.aa})}),$f=d(function(n,e){n=D(Ul,zu(e),n);return D(df,Su(e),n)&&D(gf,xu(e),n)}),yf=d(function(n,e){var r=D(of,Su(e),zu(e)),e=D(of,xu(e),zu(e));return D(nf,ou(D(Ul,n,e)),ou(D(Ul,n,r)))}),wf=d(function(u,n){var l=d(function(n,e){for(;;){if(!n.$){var r=n.a,t=D(xf,u,r.a2.a),a=D(xf,u,r.a2.b);return D(gf,a,t)?{a:e,b:t}:{a:e+1,b:a}}var o=n.a,i={a:D($f,u.q,o.n),b:D($f,u.q,o.Q)},c={a:i.a,b:i.b};if(c.a){if(c.b){r=D(l,o.Q,e+fo(o.n)),t=r.a,a=r.b,i=D(l,o.n,e),r=i.a,i=i.b;return D(gf,a,i)?{a:r,b:i}:{a:t,b:a}}n=o.n,e=e}else e=!c.b&&D(gf,(c={a:D(yf,u.q,o.n),b:D(yf,u.q,o.Q)}).b,c.a)?(n=o.n,e):(n=o.Q,e+fo(o.n))}});return D(l,n,0).a}),Cf=P(function(n,e,r){var t=D(vf,hf,e),a={a:D(vf,D(Oc,"lat",Gc),e),b:D(vf,D(Oc,"lon",Gc),e)},o={a:t,b:n.b6};if(o.a.$||"click"!==o.a.a||o.b.$)return{a:n,b:li};e=o.b.a,t={a:n.ix,b:a.a,c:a.b};if(t.a||t.b.$||t.c.$)return{a:n,b:li};o=t.b.a,a=t.c.a,t={di:0,aa:o/180*3.141592653589793,q:bo(a/180*3.141592653589793)},o=$(n,{dw:D(wf,t,e),it:{a:a,b:o},ix:!0});return{a:o,b:ei(N([qu(o),D(ui,100,r(lf)),D(ui,100,r(ff))]))}}),Pf=dc(eo(N([{a:"Cmd",b:Zi("Repaint")},{a:"token",b:Zi(gc)}]))),Tf=P(function(n,e,r){switch(n.$){case 2:return{a:$(e,{ix:!1}),b:li};case 0:return _(Cf,e,n.a,r);default:return{a:e,b:Pf}}}),hn=P(function(n,e,r){return{hX:e,ia:n,iu:r}}),Mf=$n,Lf={gW:$(xn={eV:mt,h7:"",iU:"",iY:mt,i_:1,cY:mt},{h7:"www.strava.com",iU:"/oauth/authorize"}),aT:"59195",hm:"01713301d9282956d3d182c1e01ce02c5e8620c3",c2:N(["read_all"]),jP:$(xn,{h7:"www.strava.com",iU:"/oauth/token"}),jV:B(Mf,hn,D(Oc,"id",ac),D(Oc,"firstname",Xc),D(Oc,"lastname",Xc)),jW:$(xn,{h7:"www.strava.com",iU:"/api/v3/athlete"})},Af=d(function(n,e){return{$:0,a:n,b:e}}),cn=a(function(n,e,r,t){return{hQ:r,i0:e,c2:t,jO:n}}),ln=(an=function(n){return oc(N([D(la,pt,n),sa(mt)]))})(D(Oc,"expires_in",ac)),un=yn,Bf=vn,zf=function(n){return{$:1,a:n}},Qn=function(n){return D(yo,Oo(sa),Xo(zf(n)))},Nf=P(function(n,e,r){return e.$||r.$?mt:D(n,e.a,r.a)}),Df=function(n){return n.toLowerCase()},_f=d(function(n,e){return"bearer"===Df(n)?pt(e):mt}),C=d(function(n,e){e={a:e,b:_(Nf,_f,pt(n),e)};if(1!==e.a.$)return e.b.$?mt:pt(pt(e.b.a));return pt(mt)}),gr=D(Bf,Qn("missing or invalid 'refresh_token' / 'token_type'"),_(fa,C,D(Oc,"token_type",Xc),an(D(Oc,"refresh_token",Xc)))),h=D(la,Xo(T),an(D(Oc,"scope",A(Xc)))),pr=Nf(_f),Sf=z(un,cn,D(Bf,Qn("missing or invalid 'access_token' / 'token_type'"),_(fa,pr,D(la,pt,D(Oc,"token_type",Xc)),D(la,pt,D(Oc,"access_token",Xc)))),gr,ln,h),jf=wr,Vf=a(function(n,e,r,t){return{g2:D(jf,"application/x-www-form-urlencoded",t),eQ:D(Yc,n,Sf),eX:r,fA:"POST",gj:mt,gm:mt,gr:no(e)}}),kf=d(function(n,e){return{$:0,a:n,b:e}}),qf=function(n){return encodeURIComponent(n)},Ff=d(function(n,e){return D(kf,qf(n),qf(e))}),Rf=d(function(n,e){var r,t=e.eH,a=e.dr,o=e.gr,i=e.bT,e=function(n){return D(Xo,T,D(Oo,function(n){return N([D(Af,"Authorization","Basic "+n)])},D(Oo,function(n){return Ha({$:0,a:n.aT+":"+n.c3})},n)))}(1===(r=t.c3).$?mt:pt({aT:t.aT,c3:r.a})),a=D(va,1,vo(S((r=t.c3).$?T:N([D(Ff,"client_secret",r.a)]),N([D(Ff,"grant_type","authorization_code"),D(Ff,"client_id",t.aT),D(Ff,"redirect_uri",Eu(i)),D(Ff,"code",a)]))));return B(Vf,n,o,e,a)}),Ef=P(function(n,e,r){var t=n.jP;return tu(D(Rf,Fu,{dr:r,eH:{aT:n.aT,c3:pt("01713301d9282956d3d182c1e01ce02c5e8620c3")},bT:e,gr:t}))}),If=d(function(n,e){return{a:$(n,{hY:{$:1,a:e}}),b:_(Ef,Lf,n.bT,e)}}),Hf={$:3},Uf={$:5},Yf=P(function(n,e,r){return{eM:n,eN:e,eO:r}}),Of=an(D(Oc,"error_description",Xc)),Wf=an(D(Oc,"error_uri",Xc)),Gf=B(Mf,Yf,D(la,Oa,D(Oc,"error",Xc)),Of,Wf),Xf=d(function(n,e){if(1!==e.$)return{a:$(n,{hY:{$:2,a:e.a.jO}}),b:D(ui,100,Uf)};if(4!==e.a.$)return{a:$(n,{hY:{$:4,a:Hf}}),b:li};e=D(Fc,Gf,e.a.a);return e.$?{a:$(n,{hY:{$:4,a:Hf}}),b:li}:{a:$(n,{hY:{$:4,a:{$:2,a:e.a}}}),b:li}}),Qf=function(n){return D($o,La,{$:2,b:function(){try{Ke.location=n}catch(n){ge.location.reload(!1)}},c:null})},Jf=P(function(n,e,r){return S(r,e.b?N([D(Ff,n,D(_t," ",e))]):T)}),Kf=P(function(n,e,r){return S(r,1===e.$?T:N([D(Ff,n,e.a)]))}),Zf=d(function(n,e){var r=e.aT,t=e.gr,a=e.bT,o=e.c2,i=e.bZ,e=e.hr,a=D(va,1,vo(_(Kf,"code_challenge_method",D(Oo,vt("S256"),e),_(Kf,"code_challenge",e,_(Kf,"state",i,_(Jf,"scope",o,N([D(Ff,"client_id",r),D(Ff,"redirect_uri",Eu(a)),D(Ff,"response_type",n?"token":"code")]))))))),n=t.cY;return $(t,1===n.$?{cY:pt(a)}:{cY:pt(n.a+"&"+a)})}),ns=d(function(n,e){e=Zo(e),e={aT:Lf.aT,bT:n.bT,c2:Lf.c2,bZ:pt(e.bZ),gr:Lf.gW};return{a:$(n,{hY:ii}),b:Qf(no(function(n){return D(Zf,0,{aT:n.aT,hr:mt,bT:n.bT,c2:n.c2,bZ:n.bZ,gr:n.gr})}(e)))}}),es=d(function(n,e){return{$:3,a:n,b:e}}),rs={$:4},ts=d(function(n,e){e={a:n.hY,b:e};return 1===e.b.$?{a:$(n,{hY:{$:4,a:rs}}),b:li}:2!==e.a.$?{a:$(n,{hY:{$:4,a:oi}}),b:li}:{a:$(n,{hY:D(es,e.b.a,e.a.a)}),b:li}}),as=ie("genRandomBytes",Sn),os=d(function(n,e){var r=n.jW;return tu({g2:qc,eQ:D(Yc,Iu,n.jV),eX:D(Hu,e,T),fA:"GET",gj:mt,gm:mt,gr:no(r)})}),is=d(function(n,e){return{a:$(n,{hY:{$:2,a:e}}),b:D(os,Lf,e)}}),cs=d(function(n,e){var r={a:e.hY,b:n};n:for(;;)switch(r.a.$){case 0:switch(r.b.$){case 1:return function(n){return{a:$(n,{hY:ii}),b:as(16)}}(e);case 2:return D(ns,e,r.b.a);default:break n}case 1:switch(r.b.$){case 3:return D(If,e,r.a.a);case 4:return D(Xf,e,r.b.a);default:break n}case 2:switch(r.b.$){case 5:return D(is,e,r.a.a);case 6:return D(ts,e,r.b.a);default:break n}case 3:if(7!==r.b.$)break n;return function(n){return{a:$(n,{hY:ii}),b:Qf(no(n.bT))}}(e);default:break n}return{a:e,b:li}}),us={$:10},ls=P(function(n,e,r){return s(r,n)<0?n:0<s(r,e)?e:r}),fs=R,ss=d(function(n,e){return 78271.484*Lu(e)/D(fs,2,n)}),ds=d(function(n,e){return{gA:n.gB*e.dd-n.dd*e.gB,gB:n.dd*e.gA-n.gA*e.dd,dd:n.gA*e.gB-n.gB*e.gA}}),gs=P(function(n,e,r){var t=n,a=r,o=.5*e,i=Tc(o),c=Mc(o),u=t.hH,l=u.gA*c,f=i*l,n=l*l,r=u.gB*c,e=i*r,o=l*r,t=r*r,c=u.dd*c,i=i*c,l=l*c,r=r*c,c=c*c;return{gA:(1-2*(t+c))*a.gA+2*(o-i)*a.gB+2*(l+e)*a.dd,gB:2*(o+i)*a.gA+(1-2*(n+c))*a.gB+2*(r-f)*a.dd,dd:2*(l-e)*a.gA+2*(r+f)*a.gB+(1-2*(n+t))*a.dd}}),bs=P(function(n,e,r){var t=n,a=r,o=.5*e,i=Tc(o),c=Mc(o),u=t.d_,l=a.gA-u.gA,f=a.gB-u.gB,s=a.dd-u.dd,d=t.hH,g=d.gA*c,n=i*g,r=g*g,e=d.gB*c,o=i*e,a=g*e,t=e*e,c=d.dd*c,i=i*c,g=g*c,e=e*c,c=c*c;return{gA:u.gA+(1-2*(t+c))*l+2*(a-i)*f+2*(g+o)*s,gB:u.gB+2*(a+i)*l+(1-2*(r+c))*f+2*(e-n)*s,dd:u.dd+2*(g-o)*l+2*(e+n)*f+(1-2*(r+t))*s}}),ps=P(function(n,e,r){return{d_:_(bs,n,e,Wu(r)),et:_(gs,n,e,Gu(r)),eu:_(gs,n,e,Xu(r)),ev:_(gs,n,e,Qu(r))}}),ms=P(function(n,e,r){return _(ps,n(r),e,r)}),vs=d(function(n,e){return{gA:e.gA+n.gA,gB:e.gB+n.gB,dd:e.dd+n.dd}}),hs=d(function(n,e){return{d_:D(vs,n,Wu(e)),et:Gu(e),eu:Xu(e),ev:Qu(e)}}),xs=d(function(n,e){return{gA:n*e.gA,gB:n*e.gB,dd:n*e.dd}}),$s=P(function(n,e,r){return D(hs,D(xs,e,n),r)}),ys=P(function(n,e,r){return _($s,Ju(n(r)),e,r)}),ws=d(function(n,e){return{hH:e,d_:n}}),Cs={gA:0,gB:0,dd:0},Ps=gt({d_:Cs,et:Of={gA:1,gB:0,dd:0},eu:br={gA:0,gB:1,dd:0}}),Ts=U,Ms=P(function(n,e,r){var t=e.h$?so(D(pc,r,n)):e.hZ,n=Uu(D(pc,r,n)),t=(t={gY:Bu(e.hc),hI:100*D(ss,e.kc,n),hN:e.he,hZ:t},el({gY:t.gY,hI:t.hI,hN:t.hN,hZ:t.hZ,cA:Ps}));return rl({jY:e.hV,j0:t})}),Ls=d(function(n,e){return n+.5*(e-n)}),As={gA:-1,gB:0},Bs={gA:0,gB:-1},zs={gA:0,gB:1},Ns=d(function(n,e){return{gA:n,gB:e}}),Ds=a(function(n,e,r,t){var a=D(df,e,t)?zs:Bs,o=D(df,n,r)?rc:As,i={a:ou(D(Wl,n,r)),b:ou(D(Wl,e,t))};return{gX:{d_:D(Ns,D(Ls,n,r),D(Ls,e,t)),et:o,eu:a},hG:i}}),_s=d(function(n,e){return B(Ds,tl(n),al(n),tl(e),al(e))}),Ss=d(function(n,e){var r=n.d_,t=e.gA-r.gA,a=e.gB-r.gB,e=e.dd-r.dd,r=n.hH,n=t*r.gA+a*r.gB+e*r.dd,t=t-n*r.gA,a=a-n*r.gB,n=e-n*r.dd,r=D(ea,au(t),D(ea,au(a),au(n)));if(r){n=n/r,a=a/r,t=t/r;return Gl(t*t+a*a+n*n)*r}return 0}),js=d(function(n,e){var r=n.d_,n=n.hH;return{gA:r.gA+e*n.gA,gB:r.gB+e*n.gB,dd:r.dd+e*n.dd}}),Vs=d(function(n,e){return e.gA*n.gA+e.gB*n.gB+e.dd*n.dd}),ks=d(function(n,e){return{gA:e.gA-n.gA,gB:e.gB-n.gB,dd:e.dd-n.dd}}),qs=d(function(n,e){var r=n.f$,t=function(n){return n.d_}(e),n=D(ks,n.hi,t),t=Ju(e),r=r,t=D(Vs,t,n),n=n,n=D(fs,n.gA,2)+D(fs,n.gB,2)+D(fs,n.dd,2),n=D(fs,t,2)-n+D(fs,r,2);if(n<0)return mt;r=-t+Gl(n),n=-t-Gl(n);return pt({a:D(js,e,n),b:D(js,e,r)})}),Fs=d(function(f,n){var s=d(function(n,e){for(;;){if(!n.$){var r=n.a,t=D(Ss,f,r.a3),a=D(Ss,f,r.aW);return D(gf,a,t)?{a:e,b:t}:{a:e+1,b:a}}var o=n.a,i=D(Wl,il(cl(o.Q)),D(Ss,f,ol(cl(o.Q)))),c=D(Wl,il(cl(o.n)),D(Ss,f,ol(cl(o.n)))),u={a:!g(D(qs,cl(o.n),f),mt),b:!g(D(qs,cl(o.Q),f),mt)},l={a:u.a,b:u.b};if(l.a){if(l.b){r=D(s,o.Q,e+fo(o.n)),t=r.a,a=r.b,u=D(s,o.n,e),r=u.a,u=u.b;return D(gf,a,u)?{a:r,b:u}:{a:t,b:a}}n=o.n,e=e}else e=!l.b&&D(gf,i,c)?(n=o.n,e):(n=o.Q,e+fo(o.n))}});return D(s,n,0).a}),Rs=d(function(n,e){return{gA:n,gB:e}}),Es=d(function(n,e){return n*e}),Is=d(function(n,e){return e/n}),Hs=d(function(n,e){return n*e}),Us={gA:0,gB:0,dd:-1},Ys=d(function(n,e){return e/n}),Os=d(function(n,e){var r=n.ev,t=n.eu,n=n.et;return{gA:n.gA*e.gA+t.gA*e.gB+r.gA*e.dd,gB:n.gB*e.gA+t.gB*e.gB+r.gB*e.dd,dd:n.dd*e.gA+t.dd*e.gB+r.dd*e.dd}}),Ws=d(function(n,e){var r=n.d_,n=n.et;return(e.gA-r.gA)*n.gA+(e.gB-r.gB)*n.gB}),Gs=P(function(n,e,r){return{gA:n,gB:e,dd:r}}),Xs=a(function(n,e,r,t){var a=n.d_,o=n.ev,i=n.eu,n=n.et;return{gA:a.gA+e*n.gA+r*i.gA+t*o.gA,gB:a.gB+e*n.gB+r*i.gB+t*o.gB,dd:a.dd+e*n.dd+r*i.dd+t*o.dd}}),Qs=d(function(n,e){var r=n.d_,n=n.eu;return(e.gA-r.gA)*n.gA+(e.gB-r.gB)*n.gB}),Js=P(function(n,e,r){var t=n,a=D(Qs,ul(e),r),o=D(Ws,ul(e),r),i=t.j0,n=function(n){return n.hG}(e),r=n.b,e=t.d8;if(e.$){n=D(Ys,r,e.a);return D(ws,B(Xs,i,D(Es,n,o),D(Es,n,a),0),sl(t.j0))}r=Mu(D(Is,e.a,D(Hs,.5,r))),r=D(Os,i,D(Xo,Us,function(n){var e=n,r=D(ea,au(e.gA),D(ea,au(e.gB),au(e.dd)));if(r){var t=e.dd/r,n=e.gB/r,e=e.gA/r,r=Gl(e*e+n*n+t*t);return pt({gA:e/r,gB:n/r,dd:t/r})}return mt}(_(Gs,o,a,r))));return D(ws,ll(t.j0),r)}),Ks=d(function(n,e){var r={a:e.b6,b:e.gu};if(r.a.$||r.b.$)return 0;var t=r.a.a,a=r.b.a,r=_(Ms,D(pc,e.dw,t),a,e.dw),a=n.dY,n=D(Rs,a.a,a.b),a=e.j_,e={a:dl(a.a),b:dl(a.b)},a=e.a;return D(Fs,_(Js,r,D(_s,D(Ns,0,e.b),D(Ns,a,0)),n),t)}),Zs=P(function(n,e,r){return{gA:n,gB:e,dd:r}}),nd=P(function(n,e,r){var t=n,a=r,o=.5*e,i=Tc(o),c=Mc(o),u=t.hH,l=u.gA*c,f=i*l,n=l*l,r=u.gB*c,e=i*r,o=l*r,t=r*r,c=u.dd*c,i=i*c,l=l*c,r=r*c,c=c*c;return{gA:(1-2*(t+c))*a.gA+2*(o-i)*a.gB+2*(l+e)*a.dd,gB:2*(o+i)*a.gA+(1-2*(n+c))*a.gB+2*(r-f)*a.dd,dd:2*(l-e)*a.gA+2*(r+f)*a.gB+(1-2*(n+t))*a.dd}}),ed=d(function(n,e){return{gA:n*e.gA,gB:n*e.gB,dd:n*e.dd}}),rd=a(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),td=B(rd,0,0,0,1),ad=d(function(n,e){return{$:0,a:n,b:e}}),od=Pr,id=d(function(n,e){return{a:n,b:e}}),cd=B(rd,117/255,80/255,123/255,1),ud=B(rd,.8,0,0,1),ld=J,fd=a(function(n,e,r,t){var a={a:n,b:e,c:r},n=a.a,e=a.b,r=a.c,o=.5<r?r+e-r*e:r*(e+1),i=2*r-o,a=function(n){n=n<0?n+1:1<n?n-1:n;return 6*n<1?i+(o-i)*n*6:2*n<1?o:3*n<2?i+(o-i)*(2/3-n)*6:i},e=a(n-1/3),r=a(n),n=a(n+1/3);return B(rd,n,r,e,t)}),sd=P(function(n,e,r){return B(fd,n,e,r,1)}),dd=B(rd,252/255,175/255,62/255,1),gd=d(function(n,e){return{$:1,a:n,b:e}}),bd={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        \n        void main () {\n            gl_FragColor = vec4(constantColor, 1.0);\n        }\n    ",attributes:{},uniforms:{constantColor:"aU"}},pd={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"bb",sceneProperties:"g"}},md={$:0},vd=d(function(n,e){switch(e.$){case 0:return D(Qr,n,e);case 1:return D(Jr,n,e);case 2:return D(Kr,n,e);case 3:return D(Zr,n,e);case 4:return D(nt,n,e);default:return D(et,n,e)}}),hd=d(function(n,e){switch(e.$){case 0:return D(Sr,n,e);case 1:return D(jr,n,e);case 2:return D(Vr,n,e);case 3:return D(kr,n,e);case 4:return D(qr,n,e);case 5:return D(Fr,n,e);case 6:return D(Rr,n,e);case 7:return D(Er,n,e);default:return function(n){var e=n.sampleAlphaToCoverage;e.toggle=n.toggle,e.enabled||(n.gl.enable(n.gl.SAMPLE_ALPHA_TO_COVERAGE),e.enabled=!0)}(n)}}),xd=_r,$d={src:"\n        precision highp float;\n        \n        attribute lowp float lineSegmentVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp vec3 lineSegmentStartPoint;\n        uniform highp vec3 lineSegmentEndPoint;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = (1.0 - lineSegmentVertex) * lineSegmentStartPoint + lineSegmentVertex * lineSegmentEndPoint;\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{lineSegmentVertex:"fd"},uniforms:{lineSegmentEndPoint:"fb",lineSegmentStartPoint:"fc",modelMatrix:"d",modelScale:"e",projectionMatrix:"f",sceneProperties:"g",viewMatrix:"h"}},yd=d(function(n,e){return{$:1,a:n,b:e}})({eK:2,e0:0,fF:1})(N([{a:{fd:0},b:{fd:1}}])),wd=Tr,Cd=function(n){return new Float64Array([n.gA,n.gB,n.dd])},Pd=d(function(n,e){var r=function(n){n=ml(n);return D(ef,n.a,n.b)}(e),t=xl(r),e=ml(e),u=e.a,l=e.b;switch(n.$){case 0:if(n.b.$)return md;var f=n.b.a;return D(gd,t,i(function(n,e,r,t,a,o,i,c){return z(xd,c,$d,bd,yd,{aU:f,fb:$l(l),fc:$l(u),d:r,e:e,f:o,g:n,h:a})}));case 1:if(n.b.$)return md;var f=n.b.a,s=n.c;return D(gd,t,i(function(n,e,r,t,a,o,i,c){return z(xd,c,$d,pd,yd,{bb:D(wd,vl(s),f),fb:$l(l),fc:$l(u),d:r,e:e,f:o,g:n,h:a})}));case 2:default:return md}}),Td=d(function(n,e){return D(Pd,n,e)}),Md=d(function(n,e){return{iH:n,d_:e}}),Ld=d(function(n,e){return D(Md,e.iH,D(vs,n,e.d_))}),Ad=P(function(n,e,r){return D(Ld,D(xs,e,n),r)}),Bd=d(function(n,e){return _(Ad,e.iH,n,e)}),zd=d(function(n,e){return{$:3,a:n,b:e}}),Nd={src:"\n        precision lowp float;\n        \n        uniform lowp vec3 constantColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(constantColor, alpha);\n        }\n    ",attributes:{},uniforms:{constantColor:"aU",pointRadius:"cU",sceneProperties:"g"}},Dd=(dr=d(function(n,e){return{$:0,a:n,b:e}}))({eK:1,e0:0,fF:0})(N([{hL:1}])),_d={src:"\n        precision mediump float;\n        \n        uniform mediump vec3 emissiveColor;\n        uniform lowp float pointRadius;\n        uniform highp mat4 sceneProperties;\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        float pointAlpha(float pointRadius, vec2 pointCoord) {\n            float pointSize = 2.0 * pointRadius;\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\n            float r = sqrt(x * x + y * y);\n            float innerRadius = pointRadius;\n            float outerRadius = pointRadius + 1.0;\n            if (r > outerRadius) {\n                return 0.0;\n            } else if (r > innerRadius) {\n                return outerRadius - r;\n            } else {\n                return 1.0;\n            }\n        }\n        \n        void main () {\n            vec4 color = toSrgb(emissiveColor, sceneProperties);\n            float supersampling = sceneProperties[3][0];\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\n            gl_FragColor = vec4(color.rgb, alpha);\n        }\n    ",attributes:{},uniforms:{emissiveColor:"bb",pointRadius:"cU",sceneProperties:"g"}},Sd={src:"\n        precision highp float;\n        \n        attribute lowp float dummyAttribute;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform lowp float pointRadius;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp vec3 pointPosition;\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main () {\n            vec4 worldPosition = getWorldPosition(pointPosition, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            float supersampling = sceneProperties[3][0];\n            gl_PointSize = 2.0 * pointRadius * supersampling * dummyAttribute + 2.0;\n        }\n    ",attributes:{dummyAttribute:"hL"},uniforms:{modelMatrix:"d",modelScale:"e",pointPosition:"fU",pointRadius:"cU",projectionMatrix:"f",sceneProperties:"g",viewMatrix:"h"}},jd=P(function(u,n,l){var e=yl(l),r=xl(e);switch(n.$){case 0:if(n.b.$)return md;var f=n.b.a;return D(zd,r,i(function(n,e,r,t,a,o,i,c){return z(xd,c,Sd,Nd,Dd,{aU:f,d:r,e:e,fU:$l(l),cU:wl(u),f:o,g:n,h:a})}));case 1:if(n.b.$)return md;var f=n.b.a,s=n.c;return D(zd,r,i(function(n,e,r,t,a,o,i,c){return z(xd,c,Sd,_d,Dd,{bb:D(wd,vl(s),f),d:r,e:e,fU:$l(l),cU:wl(u),f:o,g:n,h:a})}));case 2:default:return md}}),Vd=P(function(n,e,r){return _(jd,n.f$,e,r)}),kd=d(function(n,e){var r=ml(e),e=r.b;return{a:n(r.a),b:n(e)}}),qd=d(function(n,e){var r=n.d_,n=n.iH,r=(e.gA-r.gA)*n.gA+(e.gB-r.gB)*n.gB+(e.dd-r.dd)*n.dd;return{gA:e.gA-r*n.gA,gB:e.gB-r*n.gB,dd:e.dd-r*n.dd}}),Fd=d(function(n,e){return D(kd,qd(n),e)}),Rd=d(function(n,e){for(;;){if(!n.b)return e;var r=n.a;n=n.b,e=D(yt,r,e)}}),Ed={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void main () {\n            gl_FragColor = texture2D(colorTexture, interpolatedUv);\n        }\n    ",attributes:{},uniforms:{colorTexture:"co"}},Id={src:"\n        precision mediump float;\n        \n        uniform mediump sampler2D colorTexture;\n        uniform mediump float backlight;\n        uniform highp mat4 sceneProperties;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main () {\n            vec3 emissiveColor = fromSrgb(texture2D(colorTexture, interpolatedUv).rgb) * backlight;\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{backlight:"dl",colorTexture:"co",sceneProperties:"g"}},Hd=o(function(n,e,r,t,a,o,i){for(;;){if(!i.b)return{fx:e,fy:t,fz:o,fB:n,fC:r,fD:a};var c=i.a,u=i.b,l=c.gA,f=c.gB,c=c.dd;n=D(Zl,l,n),e=D(ea,l,e),r=D(Zl,f,r),t=D(ea,f,t),a=D(Zl,c,a),o=D(ea,c,o),i=u}}),Ud=d(function(n,e){var r=n.gA,t=n.gB,n=n.dd;return f(Hd,r,r,t,t,n,n,e)}),Yd={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 materialColor;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"Y",lights12:"bO",lights34:"cH",lights56:"cI",lights78:"cJ",materialColor:"dQ",sceneProperties:"g",viewMatrix:"h"}},Od={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D materialColorTexture;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        uniform highp mat4 viewMatrix;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 lambertianLight(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                vec3 upDirection = xyz_type.xyz;\n                vec3 aboveLuminance = rgb_parameter.rgb;\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\n                return luminance * materialColor;\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(\n                xyz_type,\n                rgb_parameter,\n                surfacePosition,\n                directionToLight,\n                normalIlluminance\n            );\n        \n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\n        }\n        \n        vec3 lambertianLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 materialColor,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n            vec3 materialColor = fromSrgb(texture2D(materialColorTexture, interpolatedUv).rgb);\n        \n            vec3 linearColor = lambertianLighting(\n                interpolatedPosition,\n                normalDirection,\n                materialColor,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{enabledLights:"Y",lights12:"bO",lights34:"cH",lights56:"cI",lights78:"cJ",materialColorTexture:"dR",normalMapTexture:"bj",sceneProperties:"g",useNormalMap:"bo",viewMatrix:"h"}},Wd=(q=function(n){return{$:5,a:n}})(1029),Gd=q(1028),Xd=P(function(n,e,r){return 1===e?D(yt,n?Wd:Gd,r):r}),Qd={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform lowp vec3 baseColor;\n        uniform lowp float roughness;\n        uniform lowp float metallic;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColor:"dn",enabledLights:"Y",lights12:"bO",lights34:"cH",lights56:"cI",lights78:"cJ",metallic:"dT",roughness:"ee",sceneProperties:"g",viewMatrix:"h"}},Jd={src:"\n        precision highp float;\n        \n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 lights12;\n        uniform highp mat4 lights34;\n        uniform highp mat4 lights56;\n        uniform highp mat4 lights78;\n        uniform lowp vec4 enabledLights;\n        uniform mediump sampler2D baseColorTexture;\n        uniform lowp vec4 constantBaseColor;\n        uniform mediump sampler2D roughnessTexture;\n        uniform lowp vec2 constantRoughness;\n        uniform mediump sampler2D metallicTexture;\n        uniform lowp vec2 constantMetallic;\n        uniform mediump sampler2D normalMapTexture;\n        uniform lowp float useNormalMap;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        const lowp float kPerspectiveProjection = 0.0;\n        const lowp float kOrthographicProjection = 1.0;\n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        const highp float kPi = 3.14159265359;\n        const mediump float kMediumpFloatMax = 65504.0;\n        const lowp float kDisabledLight = 0.0;\n        const lowp float kSoftLighting = 3.0;\n        \n        float getFloatValue(sampler2D texture, vec2 uv, vec2 constantValue) {\n            if (constantValue.y == 1.0) {\n                return constantValue.x;\n            } else {\n                vec4 textureColor = texture2D(texture, uv);\n                return dot(textureColor, vec4(0.2126, 0.7152, 0.0722, 0.0));\n            }\n        }\n        \n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\n            float x = 2.0 * (rgb.r - 0.5);\n            float y = 2.0 * (rgb.g - 0.5);\n            float z = 2.0 * (rgb.b - 0.5);\n            return normalize(vec3(-x, -y, z));\n        }\n        \n        float getNormalSign() {\n            return 2.0 * float(gl_FrontFacing) - 1.0;\n        }\n        \n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\n            vec3 bitangent = cross(normal, tangent) * normalSign;\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\n        }\n        \n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\n            float projectionType = sceneProperties[1].w;\n            if (projectionType == kPerspectiveProjection) {\n                vec3 cameraPoint = sceneProperties[1].xyz;\n                return normalize(cameraPoint - surfacePosition);\n            } else if (projectionType == kOrthographicProjection) {\n                return sceneProperties[1].xyz;\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        void getDirectionToLightAndNormalIlluminance(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            out vec3 directionToLight,\n            out vec3 normalIlluminance\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                directionToLight = xyz_type.xyz;\n                normalIlluminance = rgb_parameter.rgb;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                vec3 displacement = lightPosition - surfacePosition;\n                float distance = length(displacement);\n                directionToLight = displacement / distance;\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\n            }\n        }\n        \n        float positiveDotProduct(vec3 v1, vec3 v2) {\n            return clamp(dot(v1, v2), 0.0, 1.0);\n        }\n        \n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\n            vec3 crossNH = cross(normalDirection, halfDirection);\n            float a = dotNH * alpha;\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\n            float d = k * k * (1.0 / kPi);\n            return min(d, kMediumpFloatMax);\n        }\n        \n        float safeQuotient(float numerator, float denominator) {\n            if (denominator == 0.0) {\n                return 0.0;\n            } else {\n                return numerator / denominator;\n            }\n        }\n        \n        float g1(float dotNV, float alphaSquared) {\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\n        }\n        \n        float specularG(float dotNL, float dotNV, float alphaSquared) {\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\n        }\n        \n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\n            vec3 one = vec3(1.0, 1.0, 1.0);\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\n            return specularBaseColor + (one - specularBaseColor) * scale;\n        }\n        \n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\n            float dotNHSquared = dotNH * dotNH;\n        \n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\n            float g = specularG(dotNL, dotNV, alpha * alpha);\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\n        }\n        \n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\n            float t2 = (1.0 - s);\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\n        }\n        \n        vec3 softLightingLuminance(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localLightDirection\n        ) {\n            float sinElevation = dot(localLightDirection, localUpDirection);\n            float t = (sinElevation + 1.0) / 2.0;\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\n        }\n        \n        vec3 softLightingSpecularSample(\n            vec3 aboveLuminance,\n            vec3 belowLuminance,\n            vec3 localUpDirection,\n            vec3 localViewDirection,\n            vec3 localLightDirection,\n            vec3 localHalfDirection,\n            float alphaSquared,\n            vec3 specularBaseColor\n        ) {\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\n            float dotNL = localLightDirection.z;\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\n        }\n        \n        vec3 softLighting(\n            vec3 normalDirection,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha,\n            vec3 directionToCamera,\n            vec3 viewY,\n            vec4 xyz_type,\n            vec4 rgb_parameter\n        ) {\n            float alphaSquared = alpha * alpha;\n            vec3 upDirection = xyz_type.xyz;\n            vec3 luminanceAbove = rgb_parameter.rgb;\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\n            float crossMagnitude = length(crossProduct);\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\n            if (crossMagnitude > 1.0e-6) {\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\n                xDirection = cross(yDirection, normalDirection);\n            } else {\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n                xDirection = normalize(cross(viewY, normalDirection));\n                yDirection = cross(normalDirection, xDirection);\n            }\n            float localViewX = dot(directionToCamera, xDirection);\n            float localViewZ = dot(directionToCamera, normalDirection);\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\n            float localUpX = dot(upDirection, xDirection);\n            float localUpY = dot(upDirection, yDirection);\n            float localUpZ = dot(upDirection, normalDirection);\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\n        \n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\n            vec3 vT2 = cross(vH, vT1);\n            float s = 0.5 * (1.0 + vH.z);\n            \n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\n            \n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\n            \n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\n            \n            return specular + diffuse * diffuseBaseColor;\n        }\n        \n        vec3 physicalLight(\n            vec4 xyz_type,\n            vec4 rgb_parameter,\n            vec3 surfacePosition,\n            vec3 normalDirection,\n            vec3 directionToCamera,\n            vec3 viewY,\n            float dotNV,\n            vec3 diffuseBaseColor,\n            vec3 specularBaseColor,\n            float alpha\n        ) {\n            float lightType = xyz_type.w;\n            if (lightType == kDisabledLight) {\n                return vec3(0.0, 0.0, 0.0);\n            } else if (lightType == kSoftLighting) {\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\n            }\n        \n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\n        \n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\n        }\n        \n        vec3 physicalLighting(\n            vec3 surfacePosition,\n            vec3 surfaceNormal,\n            vec3 baseColor,\n            vec3 directionToCamera,\n            mat4 viewMatrix,\n            float roughness,\n            float metallic,\n            mat4 lights12,\n            mat4 lights34,\n            mat4 lights56,\n            mat4 lights78,\n            vec4 enabledLights\n        ) {\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\n            float alpha = roughness * roughness;\n            float nonmetallic = 1.0 - metallic;\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\n        \n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\n        }\n        \n        float inverseGamma(float u) {\n            if (u <= 0.04045) {\n                return clamp(u / 12.92, 0.0, 1.0);\n            } else {\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\n            }\n        }\n        \n        vec3 fromSrgb(vec3 srgbColor) {\n            return vec3(\n                inverseGamma(srgbColor.r),\n                inverseGamma(srgbColor.g),\n                inverseGamma(srgbColor.b)\n            );\n        }\n        \n        float gammaCorrect(float u) {\n            if (u <= 0.0031308) {\n                return 12.92 * u;\n            } else {\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\n            }\n        }\n        \n        vec3 gammaCorrectedColor(vec3 color) {\n            float red = gammaCorrect(color.r);\n            float green = gammaCorrect(color.g);\n            float blue = gammaCorrect(color.b);\n            return vec3(red, green, blue);\n        }\n        \n        vec3 reinhardLuminanceToneMap(vec3 color) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scale = 1.0 / (1.0 + luminance);\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 reinhardPerChannelToneMap(vec3 color) {\n            return gammaCorrectedColor(color / (color + 1.0));\n        }\n        \n        float extendedReinhardToneMap(float x, float xMax) {\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\n        }\n        \n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\n            float scale = scaledLuminance / luminance;\n            return gammaCorrectedColor(color * scale);\n        }\n        \n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\n            return gammaCorrectedColor(vec3(red, green, blue));\n        }\n        \n        vec3 hableFilmicHelper(vec3 color) {\n            float a = 0.15;\n            float b = 0.5;\n            float c = 0.1;\n            float d = 0.2;\n            float e = 0.02;\n            float f = 0.3;\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\n        }\n        \n        vec3 hableFilmicToneMap(vec3 color) {\n            float exposureBias = 2.0;\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\n            return gammaCorrectedColor(scale * unscaled);\n        }\n        \n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\n            if (toneMapType == 0.0) {\n                return gammaCorrectedColor(color);\n            } else if (toneMapType == 1.0) {\n                return reinhardLuminanceToneMap(color);\n            } else if (toneMapType == 2.0) {\n                return reinhardPerChannelToneMap(color);\n            } else if (toneMapType == 3.0) {\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\n            } else if (toneMapType == 4.0) {\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\n            } else if (toneMapType == 5.0) {\n                return hableFilmicToneMap(color);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\n            vec3 referenceWhite = sceneProperties[2].rgb;\n            float unitR = linearColor.r / referenceWhite.r;\n            float unitG = linearColor.g / referenceWhite.g;\n            float unitB = linearColor.b / referenceWhite.b;\n            float toneMapType = sceneProperties[3][2];\n            float toneMapParam = sceneProperties[3][3];\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\n            return vec4(toneMapped, 1.0);\n        }\n        \n        void main() {\n            vec3 baseColor = fromSrgb(texture2D(baseColorTexture, interpolatedUv).rgb) * (1.0 - constantBaseColor.w) + constantBaseColor.rgb * constantBaseColor.w;\n            float roughness = getFloatValue(roughnessTexture, interpolatedUv, constantRoughness);\n            float metallic = getFloatValue(metallicTexture, interpolatedUv, constantMetallic);\n        \n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\n            float normalSign = getNormalSign();\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\n        \n            vec3 linearColor = physicalLighting(\n                interpolatedPosition,\n                normalDirection,\n                baseColor,\n                directionToCamera,\n                viewMatrix,\n                roughness,\n                metallic,\n                lights12,\n                lights34,\n                lights56,\n                lights78,\n                enabledLights\n            );\n        \n            gl_FragColor = toSrgb(linearColor, sceneProperties);\n        }\n    ",attributes:{},uniforms:{baseColorTexture:"$7",constantBaseColor:"dt",constantMetallic:"du",constantRoughness:"dv",enabledLights:"Y",lights12:"bO",lights34:"cH",lights56:"cI",lights78:"cJ",metallicTexture:"dU",normalMapTexture:"bj",roughnessTexture:"ef",sceneProperties:"g",useNormalMap:"bo",viewMatrix:"h"}},Kd={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n        }\n    ",attributes:{quadVertex:"cX"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"au",sceneProperties:"g",viewMatrix:"h"}},Zd=function(n){var e=new Float64Array(16);return e[0]=n.ff,e[1]=n.fj,e[2]=n.fn,e[3]=n.fr,e[4]=n.fg,e[5]=n.fk,e[6]=n.fo,e[7]=n.fs,e[8]=n.fh,e[9]=n.fl,e[10]=n.fp,e[11]=n.ft,e[12]=n.fi,e[13]=n.fm,e[14]=n.fq,e[15]=n.fu,e},ng=a(function(n,e,r,t){t=Pl(t),r=Pl(r),e=Pl(e),n=Pl(n);return Zd({ff:n.gA,fg:e.gA,fh:r.gA,fi:t.gA,fj:n.gB,fk:e.gB,fl:r.gB,fm:t.gB,fn:n.dd,fo:e.dd,fp:r.dd,fq:t.dd,fr:0,fs:0,ft:0,fu:0})}),eg=dr({eK:1,e0:0,fF:6})(N([{cX:_(od,0,0,0)},{cX:_(od,1,0,1)},{cX:_(od,1,1,2)},{cX:_(od,0,1,3)}])),rg=d(function(n,e){return{$:1,a:n,b:e}}),tg=d(function(n,e){if(e.$)return{a:e.a.H,b:1};return{a:n,b:0}}),ag=function(n){return n[0]},og=function(n){return n[1]},ig=function(n){return n[2]},cg=Mr,ug=B(cg,0,0,0,0),lg=d(function(n,e){return e.$?{a:e.a.H,b:ug}:{a:n,b:B(cg,ag(e=e.a),og(e),ig(e),1)}}),fg=d(function(n,e){var r,t={a:n,b:e};if(t.a.$)return D(rg,{a:r=t.a.a.H,b:ug},D(tg,r,e));if(t.b.$)return D(rg,D(lg,r=t.b.a.H,n),D(tg,r,e));return{$:0,a:t.a.a}}),sg=P(function(n,e,r){return{$:0,a:n,b:e,c:r}}),dg=a(function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}}),gg=a(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),bg=Cr,pg=D(bg,0,0),mg=d(function(n,e){return e.$?{a:e.a.H,b:pg}:{a:n,b:D(bg,e.a,1)}}),vg=a(function(n,e,r,t){var a,o=B(gg,n,e,r,t);if(o.a.$)return B(dg,{a:a=o.a.a.H,b:ug},D(mg,a,e),D(mg,a,r),D(tg,a,t));if(o.b.$)return B(dg,D(lg,a=o.b.a.H,n),{a:a,b:pg},D(mg,a,r),D(tg,a,t));if(o.c.$)return B(dg,D(lg,a=o.c.a.H,n),D(mg,a,e),{a:a,b:pg},D(tg,a,t));if(o.d.$)return B(dg,D(lg,a=o.d.a.H,n),D(mg,a,e),D(mg,a,r),{a:a,b:1});return _(sg,o.a.a,o.b.a,o.c.a)}),hg={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n        }\n    ",attributes:{quadVertex:"cX"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"au",sceneProperties:"g",viewMatrix:"h"}},xg={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying highp vec3 interpolatedPosition;\n        varying highp vec3 interpolatedNormal;\n        varying mediump vec2 interpolatedUv;\n        varying highp vec3 interpolatedTangent;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedPosition = worldPosition.xyz;\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\n            interpolatedUv = quadVertex.xy;\n            interpolatedTangent = tangent;\n        }\n    ",attributes:{quadVertex:"cX"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"au",sceneProperties:"g",viewMatrix:"h"}},$g={src:"\n        precision highp float;\n        \n        attribute highp vec3 quadVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 quadVertexPositions;\n        \n        varying mediump vec2 interpolatedUv;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        void main() {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadVertex.z), quadVertexPositions, position, normal, tangent);\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\n            interpolatedUv = quadVertex.xy;\n        }\n    ",attributes:{quadVertex:"cX"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"au",sceneProperties:"g",viewMatrix:"h"}},yg=r(function(r,T,M,L,A){var n=D(Ud,T,N([M,L,A])),n=xl(n);return D(gd,n,function(){switch(r.$){case 0:if(r.b.$){var u=r.b.a.H;return i(function(n,e,r,t,a,o,i,c){return z(xd,_(Xd,t,0,c),$g,Ed,eg,{co:u,d:r,e:e,f:o,au:B(ng,T,M,L,A),g:n,h:a})})}var l=r.b.a;return i(function(n,e,r,t,a,o,i,c){return z(xd,_(Xd,t,0,c),Kd,bd,eg,{aU:l,d:r,e:e,f:o,au:B(ng,T,M,L,A),g:n,h:a})});case 1:if(r.b.$){u=r.b.a.H,s=r.c;return i(function(n,e,r,t,a,o,i,c){return z(xd,_(Xd,t,0,c),$g,Id,eg,{dl:vl(s),co:u,d:r,e:e,f:o,au:B(ng,T,M,L,A),g:n,h:a})})}var f=r.b.a,s=r.c;return i(function(n,e,r,t,a,o,i,c){return z(xd,_(Xd,t,0,c),Kd,pd,eg,{dl:s,bb:D(wd,vl(s),f),d:r,e:e,f:o,au:B(ng,T,M,L,A),g:n,h:a})});case 2:var n=D(fg,r.b,r.c);if(n.$){var e=n.a,d=e.a,e=n.b,g=e.a,b=e.b;return i(function(n,e,r,t,a,o,i,c){var u=i.a,i=i.b;return z(xd,_(Xd,t,0,c),xg,Od,eg,{Y:i,bO:u.bO,cH:u.cH,cI:u.cI,cJ:u.cJ,dR:d,d:r,e:e,bj:g,f:o,au:B(ng,T,M,L,A),g:n,bo:b,h:a})})}var p=n.a;return i(function(n,e,r,t,a,o,i,c){var u=i.a,i=i.b;return z(xd,_(Xd,t,0,c),hg,Yd,eg,{Y:i,bO:u.bO,cH:u.cH,cI:u.cI,cJ:u.cJ,dQ:p,d:r,e:e,f:o,au:B(ng,T,M,L,A),g:n,h:a})});default:e=B(vg,r.b,r.c,r.d,r.e);if(e.$){var n=e.a,m=n.a,v=n.b,n=e.b,h=n.a,x=n.b,n=e.c,$=n.a,y=n.b,n=e.d,g=n.a,b=n.b;return i(function(n,e,r,t,a,o,i,c){var u=i.a,i=i.b;return z(xd,_(Xd,t,0,c),xg,Jd,eg,{$7:m,dt:v,du:y,dv:x,Y:i,bO:u.bO,cH:u.cH,cI:u.cI,cJ:u.cJ,dU:$,d:r,e:e,bj:g,f:o,au:B(ng,T,M,L,A),ef:h,g:n,bo:b,h:a})})}var w=e.a,C=e.b,P=e.c;return i(function(n,e,r,t,a,o,i,c){var u=i.a,i=i.b;return z(xd,_(Xd,t,0,c),hg,Qd,eg,{dn:w,Y:i,bO:u.bO,cH:u.cH,cI:u.cI,cJ:u.cJ,dT:P,d:r,e:e,f:o,au:B(ng,T,M,L,A),ee:C,g:n,h:a})})}}())}),Ko=P(function(n,e,r){return{$:3,a:n,b:e,c:r}})({eK:1,e0:3,fF:4}),wg=(y=N([{aJ:D(bg,0,1)},{aJ:D(bg,1,1)},{aJ:D(bg,2,1)},{aJ:D(bg,3,1)},{aJ:D(bg,0,-1)},{aJ:D(bg,1,-1)},{aJ:D(bg,2,-1)},{aJ:D(bg,3,-1)}]),on=N([{a:0,b:1,c:2},{a:0,b:2,c:3},{a:4,b:6,c:5},{a:4,b:7,c:6},{a:4,b:5,c:1},{a:1,b:0,c:4},{a:5,b:6,c:2},{a:2,b:1,c:5},{a:6,b:7,c:3},{a:3,b:2,c:6},{a:7,b:4,c:0},{a:0,b:3,c:7}]),D(Ko,y,on)),Cg={src:"\n        precision highp float;\n        \n        attribute highp vec2 quadShadowVertex;\n        \n        uniform highp vec4 modelScale;\n        uniform highp mat4 modelMatrix;\n        uniform highp mat4 viewMatrix;\n        uniform highp mat4 projectionMatrix;\n        uniform highp mat4 sceneProperties;\n        uniform highp mat4 shadowLight;\n        uniform highp mat4 quadVertexPositions;\n        \n        const lowp float kDirectionalLight = 1.0;\n        const lowp float kPointLight = 2.0;\n        \n        void getQuadVertex(int quadVertexIndex, mat4 quadVertexPositions, out vec3 position, out vec3 normal, out vec3 tangent) {\n            vec3 next = vec3(0.0, 0.0, 0.0);\n            vec3 prev = vec3(0.0, 0.0, 0.0);\n            if (quadVertexIndex == 0) {\n                prev = quadVertexPositions[3].xyz;\n                position = quadVertexPositions[0].xyz;\n                next = quadVertexPositions[1].xyz;\n                tangent = normalize(next - position);\n            } else if (quadVertexIndex == 1) {\n                prev = quadVertexPositions[0].xyz;\n                position = quadVertexPositions[1].xyz;\n                next = quadVertexPositions[2].xyz;\n                tangent = normalize(position - prev);\n            } else if (quadVertexIndex == 2) {\n                prev = quadVertexPositions[1].xyz;\n                position = quadVertexPositions[2].xyz;\n                next = quadVertexPositions[3].xyz;\n                tangent = normalize(position - next);\n            } else {\n                prev = quadVertexPositions[2].xyz;\n                position = quadVertexPositions[3].xyz;\n                next = quadVertexPositions[0].xyz;\n                tangent = normalize(prev - position);\n            }\n            normal = normalize(cross(next - position, prev - position));\n        }\n        \n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\n            return modelMatrix * scaledPosition;\n        }\n        \n        vec3 safeNormalize(vec3 vector) {\n            if (vector == vec3(0.0, 0.0, 0.0)) {\n                return vector;\n            } else {\n                return normalize(vector);\n            }\n        }\n        \n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\n        }\n        \n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\n            float lightType = xyz_type.w;\n            if (lightType == kDirectionalLight) {\n                return xyz_type.xyz;\n            } else if (lightType == kPointLight) {\n                vec3 lightPosition = xyz_type.xyz;\n                return normalize(lightPosition - surfacePosition);\n            } else {\n                return vec3(0.0, 0.0, 0.0);\n            }\n        }\n        \n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\n            vec4 xyz_type = shadowLight[0];\n            vec4 rgb_parameter = shadowLight[1];\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\n            vec3 offset = vec3(0.0, 0.0, 0.0);\n            float sceneDiameter = sceneProperties[3][1];\n            if (dot(directionToLight, worldNormal) <= 0.0) {\n                offset = -sceneDiameter * directionToLight;\n            } else {\n                offset = -0.001 * sceneDiameter * directionToLight;\n            }\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\n            return projectionMatrix * (viewMatrix * offsetPosition);\n        }\n        \n        void main () {\n            vec3 position = vec3(0.0, 0.0, 0.0);\n            vec3 normal = vec3(0.0, 0.0, 0.0);\n            vec3 tangent = vec3(0.0, 0.0, 0.0);\n            getQuadVertex(int(quadShadowVertex.x), quadVertexPositions, position, normal, tangent);\n            normal *= quadShadowVertex.y;\n            gl_Position = shadowVertexPosition(\n                position,\n                normal,\n                shadowLight,\n                modelScale,\n                modelMatrix,\n                viewMatrix,\n                projectionMatrix,\n                sceneProperties\n            );\n        }\n    ",attributes:{quadShadowVertex:"aJ"},uniforms:{modelMatrix:"d",modelScale:"e",projectionMatrix:"f",quadVertexPositions:"au",sceneProperties:"g",shadowLight:"c4",viewMatrix:"h"}},Pg={src:"\n        precision lowp float;\n        \n        void main () {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    ",attributes:{},uniforms:{}},Tg=P(function(n,e,r){var t=n.ea,a=n.dP,o=n.es,i=d(function(n,e){return e(n)}),c=d(function(n,e){return e(n)}),n=function(n){return D(yo,i(n.b0),D(yo,c(n.bI),D(yo,c(n.cc),c(n.cd))))};return D(n,r,D(n,e,_(Tl,t,a,o)))}),Mg=_(Tg,{dP:0,ea:0,es:15},{bI:7680,b0:519,cc:7680,cd:7683},{bI:7680,b0:519,cc:7680,cd:7682}),Lg=_(Tg,{dP:0,ea:0,es:15},{bI:7680,b0:519,cc:7680,cd:7682},{bI:7680,b0:519,cc:7680,cd:7683}),Ag=d(function(n,e){return D(yt,n?Lg:Mg,e)}),Bg=a(function(u,l,f,s){return{$:2,a:i(function(n,e,r,t,a,o,i,c){return z(xd,D(Ag,t,c),Cg,Pg,wg,{d:r,e:e,f:o,au:B(ng,u,l,f,s),g:n,c4:i,h:a})})}}),zg=o(function(n,e,r,t,a,o,i){r=z(yg,r,t,a,o,i),e={a:n,b:e};return e.a?e.b?Cl(N([r,B(Bg,t,a,o,i)])):r:e.b?B(Bg,t,a,o,i):md}),Ng=r(function(n,e,r,t,a){return f(zg,!0,!1,n,e,r,t,a)}),Dg={gA:0,gB:0,dd:1},Wf=Dg,_g=D(d(function(n,e){return{iH:e,d_:n}}),Cs,Wf),Sg=D(ws,Cs,Wf),jg=P(function(n,e,r){var t={a:e.b6,b:e.gu};if(t.a.$||t.b.$)return{a:e,b:li};var a=t.a.a,o=t.b.a;switch(n.$){case 7:var i=$(o,{kc:_(ls,0,22,o.kc+.5)});return{a:$(e,{gu:pt(i)}),b:li};case 8:i=$(o,{kc:_(ls,0,22,o.kc-.5)});return{a:$(e,{gu:pt(i)}),b:li};case 9:return{a:$(e,{gu:pt(D(mc,e.dw,a))}),b:li};case 4:return{a:e,b:li};case 5:var c=n.a;return o.j2?Al($(e,{dw:D(Ks,c,e)})):{a:e,b:li};case 0:i=$(o,{kc:_(ls,0,22,o.kc+-.001*n.a)});return{a:$(e,{gu:pt(i)}),b:li};case 1:i=pt($(o,{hK:(c=n.a).is.hw||3===c.ha?1:2,h$:!1,iQ:pt(c.dY),j2:!0}));return{a:$(e,{gu:i}),b:D(ui,250,r(us))};case 2:var u=(c=n.a).dY,l=u.a,f=u.b,s={a:o.hK,b:o.iQ};n:for(;!s.b.$;)switch(s.a){case 1:var d=s.b.a,g=d.a,b=(Au(o.he)+(f-(p=d.b)))/180*3.141592653589793,d=(Au(Bu(o.hc))-(l-g))/180*3.141592653589793,i=$(o,{hc:bo(d),he:b,iQ:pt({a:l,b:f})});return{a:$(e,{gu:pt(i)}),b:li};case 2:var b=s.b.a,g=b.a,p=b.b,b=D(ed,.1*D(ss,o.kc,Uu(a)),_(nd,Sg,Bu(o.hc),_(Zs,(p-f)*function(n){return Mc(n)}(o.he),g-l,(f-p)*Lu(o.he)))),i=$(o,{hZ:D(vs,b,o.hZ),iQ:pt({a:l,b:f})});return{a:$(e,{gu:pt(i)}),b:li};default:break n}return{a:e,b:li};case 3:c=n.a,i=pt($(o,{hK:0,iQ:mt}));return{a:$(e,{gu:i}),b:li};case 6:c=n.a;return{a:e,b:li};default:return{a:$(e,{gu:pt($(o,{j2:!1}))}),b:li}}}),L=d(function(n,e){var r=e;switch(n.$){case 4:return{a:$(r,{gF:n.a}),b:function(n){return tu({g2:qc,eQ:D(Yc,n,Qc),eX:T,fA:"GET",gj:mt,gm:mt,gr:_(Ac,"http://ip-api.com",N(["json"]),T)})}(uo)};case 11:var t=_(Tf,n.a,r,to);return{a:r,b:t.b};case 8:var a=function(n){return n.$?mt:pt(n.a)}(n.a),o=function(){if(a.$)return{eA:0,eB:0,fv:1};var n=a.a;return{eA:n.aa,eB:n.q,fv:10}}();return{a:$(r,{e5:a}),b:ei(N([(o=o,dc(eo(N([{a:"Cmd",b:Zi("Init")},{a:"token",b:Zi(gc)},{a:"lon",b:sc(o.eB)},{a:"lat",b:sc(o.eA)},{a:"zoom",b:sc(o.fv)}]))))]))};case 9:return{a:r,b:li};case 0:return{a:r,b:D(bc,N(["text/gpx"]),io)};case 1:var i=n.a;return{a:$(r,{eS:pt(hc(i))}),b:D($o,oo,Il(i))};case 2:o=po(n.a),i=ju(o),i=$(r,{f0:D(Xo,_(ni,tc,0,0),lo(o)),ec:10,b6:i,gu:D(Oo,mc(0),i)}),i=Al(i);return{a:i.a,b:i.b};case 5:var c=Al($(r,{ec:n.a}));return{a:c.a,b:c.b};case 3:var u=D(cs,n.a,r.ei),c=u.a,u=u.b;(function(n){var e=n.hY;switch(e.$){case 3:return pt(e.b);case 2:return pt(e.a);default:;}})(c);return{a:$(r,{ei:c}),b:D(vc,at,u)};case 6:u=r.b6;if(u.$)return{a:r,b:li};u=Al($(r,{dw:n.a}));return{a:u.a,b:u.b};case 7:var l=Al($(r,{j$:n.a}));return{a:l.a,b:l.b};case 10:l=_(jg,n.a,r,co);return{a:l.a,b:l.b};default:return{a:r,b:li}}}),Vg=a(function(n,e,r,t){return{$:0,a:n,b:e,c:r,d:t}}),kg=_(hi=P(function(n,e,r){return B(Vg,n/255,e/255,r/255,1)}),241,242,246),qg=P(function(n,e,r){return{$:4,a:n,b:e,c:r}}),Fg=d(function(n,e){return{$:4,a:n,b:e}}),Rg=(Mi=function(n){return 31<n?{$:1,a:1<<n-32}:{$:0,a:1<<n}})(8),Eg=G,Ig="a",Qe="atv",Hg="ab",Ug="cx",Yg="cy",Og="acb",Wg="accx",Gg="accy",Xg="acr",Qg="al",Jg="ar",Kg="at",Zg="ah",nb="av",eb="s",rb="bh",tb="b",K="w7",_n="bd",sn="bdt",bn="bn",W="bs",ne="cpe",vr="cp",hr="cpx",I="cpy",ab="c",ob="ctr",ib="cb",cb="ccx",ub="ccy",lb="cl",fb="cr",sb="ct",H="cptr",Jn="ctxt",Pn="fcs",db="focus-within",gb="fs",gn="hbh",bb="hc",pb="he",mb="hf",vb="hfp",pn="hv",Cn="ic",hb="fr",xb="lbl",m="iml",j="imlf",F="imlp",p="implw",E="it",Y="i",X="lnk",$b="nb",yb="notxt",wb="ol",Cb="or",Vn="oq",Pb="pg",Tb="p",v="ppe",Mb="ui",Lb="r",$n="sb",hn="sbx",xn="sby",Ab="sbt",Bb="e",zb="cap",yn="sev",vn="sk",Nb="t",C="tc",un="w8",cn="w2",Qn="w9",pr="tj",gr="tja",ln="tl",h="w3",wr="w5",an="w4",R="tr",U="w6",Pr="w1",J="tun",_r="ts",Tr="clr",q="u",Db="wc",_b="we",Sb="wf",jb="wfp",Vb="wrp",kb={$:0},qb={$:0},Fb=eb+" "+ab,Rb=eb+" "+(mn="g"),Eb=eb+" "+Pb,Ib=eb+" "+Tb,Hb=eb+" "+Lb,Ub=eb+" "+Bb,Yb={$:0},Mr=function(n){return{$:0,a:n}},Ob=d(function(n,e){switch(e.$){case 0:return n;case 1:return S(e.a,n);case 2:return S(n,e.a);default:return S(e.a,S(n,e.b))}}),Wb=P(function(e,n,r){switch(r.$){case 0:return n;case 1:return S(D(Na,function(n){return{a:e,b:n}},r.a),n);case 2:return S(n,D(Na,function(n){return{a:e,b:n}},t=r.a));default:var t=r.b;return S(D(Na,function(n){return{a:e,b:n}},r.a),S(n,D(Na,function(n){return{a:e,b:n}},t)))}}),Gb=Mi(41),Xb=Mi(40),Qb=Mi(42),Jb=Mi(43),Kb=d(function(n,e){return D($e,n,Zi(e))}),Zb=Kb("className"),np=pe("div"),ep=Bo,rp=function(n){switch(n.$){case 0:return Dt(n.a)+"px";case 1:return"auto";case 2:return Dt(n.a)+"fr";case 3:var e=n.b;return"min"+(Dt(n.a)+rp(e));default:e=n.b;return"max"+(Dt(n.a)+rp(e))}},tp=function(n){switch(n.$){case 13:return a=n.a;case 12:return a=n.a;case 0:return n.a;case 1:return a=n.a;case 2:return"font-size-"+Dt(n.a);case 3:case 4:return n.a;case 5:return n.a;case 7:case 6:return n.a;case 8:var e=n.a;return"grid-rows-"+D(_t,"-",D(Na,rp,e.i3))+("-cols-"+D(_t,"-",D(Na,rp,e.ap))+("-space-x-"+rp(e.jj.a)+("-space-y-"+rp(e.jj.b))));case 9:var r=n.a;return"gp grid-pos-"+Dt(r.f6)+("-"+Dt(r.eF)+("-"+Dt(r.gx)+("-"+Dt(r.eY))));case 11:var t=n.a,r=n.b,a=function(){switch(t){case 0:return"fs";case 1:return"hv";default:return"act"}}();return D(_t," ",D(Na,function(n){n=tp(n);return""===n?"":n+"-"+a},r));default:return D(Xo,"",Dl(n.a))}},ap=d(function(n,e){return _(So,n,0,e)}),op=d(function(n,e){return!D(Vo,n,e).$}),ip=d(function(n,e){return D(op,n,e)}),cp=d(function(n,e){var r=e.a,t=e.b,a=tp(n);return D(ip,a,r)?e:{a:D(ap,a,r),b:D(yt,n,t)}}),up=d(function(n,e){return{$:0,a:n,b:e}}),lp=d(function(n,e){return{$:0,a:n,b:e}}),fp=fn,sp=d(function(n,e){var r=e.b;return{a:n(e.a),b:r}}),dp=d(function(n,e){return{a:e.a,b:n(e.b)}}),gp=d(function(n,e){return D($e,function(n){return"innerHTML"==n||"formAction"==n?"data-"+n:n}(n),Ce(e))}),Cr=d(function(n,e){return{$:2,a:n,b:e}}),bp=d(function(n,e){return{$:1,a:n,b:e}}),pp=d(function(n,e){return{$:0,a:n,b:e}}),mp=d(function(n,e){return{$:4,a:n,b:e}}),vp=d(function(n,e){return{$:0,a:n,b:e}}),Ko=d(function(n,e){return{$:3,a:n,b:e}}),hp=N([0,1,2,3,4,5]),y=function(t){return{$:6,a:D(Ui,function(n){var e=t(n),r=e.a,e=e.b;return N([D(mp,function(n){switch(n){case 0:return"."+sb;case 1:return"."+ib;case 2:return"."+fb;case 3:return"."+lb;case 4:return"."+cb;default:return"."+ub}}(n),r),D(bp,"."+eb,N([D(mp,ql(n),e)]))])},hp)}},on=N([D(vp,"display","flex"),D(vp,"flex-direction","column"),D(vp,"white-space","pre"),D(mp,"."+gn,N([D(vp,"z-index","0"),D(bp,"."+rb,N([D(vp,"z-index","-1")]))])),D(mp,"."+Ab,N([D(bp,"."+Nb,N([D(mp,"."+mb,N([D(vp,"flex-grow","0")])),D(mp,"."+Sb,N([D(vp,"align-self","auto !important")]))]))])),D(bp,"."+bb,N([D(vp,"height","auto")])),D(bp,"."+mb,N([D(vp,"flex-grow","100000")])),D(bp,"."+Sb,N([D(vp,"width","100%")])),D(bp,"."+jb,N([D(vp,"width","100%")])),D(bp,"."+Db,N([D(vp,"align-self","flex-start")])),y(function(n){switch(n){case 0:return{a:N([D(vp,"justify-content","flex-start")]),b:N([D(vp,"margin-bottom","auto !important"),D(vp,"margin-top","0 !important")])};case 1:return{a:N([D(vp,"justify-content","flex-end")]),b:N([D(vp,"margin-top","auto !important"),D(vp,"margin-bottom","0 !important")])};case 2:return{a:N([D(vp,"align-items","flex-end")]),b:N([D(vp,"align-self","flex-end")])};case 3:return{a:N([D(vp,"align-items","flex-start")]),b:N([D(vp,"align-self","flex-start")])};case 4:return{a:N([D(vp,"align-items","center")]),b:N([D(vp,"align-self","center")])};default:return{a:N([D(bp,"."+eb,N([D(vp,"margin-top","auto"),D(vp,"margin-bottom","auto")]))]),b:N([D(vp,"margin-top","auto !important"),D(vp,"margin-bottom","auto !important")])}}})]),G=N([0,1,2,3,4,5]),C=N([D(pp,"html,body",N([D(vp,"height","100%"),D(vp,"padding","0"),D(vp,"margin","0")])),D(pp,S("."+eb,S("."+Bb,"."+Cn)),N([D(vp,"display","block"),D(mp,"."+mb,N([D(bp,"img",N([D(vp,"max-height","100%"),D(vp,"object-fit","cover")]))])),D(mp,"."+Sb,N([D(bp,"img",N([D(vp,"max-width","100%"),D(vp,"object-fit","cover")]))]))])),D(pp,"."+eb+":focus",N([D(vp,"outline","none")])),D(pp,"."+Mb,N([D(vp,"width","100%"),D(vp,"height","auto"),D(vp,"min-height","100%"),D(vp,"z-index","0"),D(mp,S("."+eb,"."+mb),N([D(vp,"height","100%"),D(bp,"."+mb,N([D(vp,"height","100%")]))])),D(bp,"."+hb,N([D(mp,"."+$b,N([D(vp,"position","fixed"),D(vp,"z-index","20")]))]))])),D(pp,"."+$b,N([D(vp,"position","relative"),D(vp,"border","none"),D(vp,"display","flex"),D(vp,"flex-direction","row"),D(vp,"flex-basis","auto"),D(mp,"."+Bb,on),{$:6,a:D(Na,function(n){switch(n){case 0:return D(mp,_l(Ig),N([D(vp,"position","absolute"),D(vp,"bottom","100%"),D(vp,"left","0"),D(vp,"width","100%"),D(vp,"z-index","20"),D(vp,"margin","0 !important"),D(bp,_l(mb),N([D(vp,"height","auto")])),D(bp,_l(Sb),N([D(vp,"width","100%")])),D(vp,"pointer-events","none"),D(bp,"*",N([D(vp,"pointer-events","auto")]))]));case 1:return D(mp,_l(tb),N([D(vp,"position","absolute"),D(vp,"bottom","0"),D(vp,"left","0"),D(vp,"height","0"),D(vp,"width","100%"),D(vp,"z-index","20"),D(vp,"margin","0 !important"),D(vp,"pointer-events","none"),D(bp,"*",N([D(vp,"pointer-events","auto")])),D(bp,_l(mb),N([D(vp,"height","auto")]))]));case 2:return D(mp,_l(Cb),N([D(vp,"position","absolute"),D(vp,"left","100%"),D(vp,"top","0"),D(vp,"height","100%"),D(vp,"margin","0 !important"),D(vp,"z-index","20"),D(vp,"pointer-events","none"),D(bp,"*",N([D(vp,"pointer-events","auto")]))]));case 3:return D(mp,_l(wb),N([D(vp,"position","absolute"),D(vp,"right","100%"),D(vp,"top","0"),D(vp,"height","100%"),D(vp,"margin","0 !important"),D(vp,"z-index","20"),D(vp,"pointer-events","none"),D(bp,"*",N([D(vp,"pointer-events","auto")]))]));case 4:return D(mp,_l(hb),N([D(vp,"position","absolute"),D(vp,"width","100%"),D(vp,"height","100%"),D(vp,"left","0"),D(vp,"top","0"),D(vp,"margin","0 !important"),D(vp,"pointer-events","none"),D(bp,"*",N([D(vp,"pointer-events","auto")]))]));default:return D(mp,_l(rb),N([D(vp,"position","absolute"),D(vp,"width","100%"),D(vp,"height","100%"),D(vp,"left","0"),D(vp,"top","0"),D(vp,"margin","0 !important"),D(vp,"z-index","0"),D(vp,"pointer-events","none"),D(bp,"*",N([D(vp,"pointer-events","auto")]))]))}},G)}])),D(pp,"."+eb,N([D(vp,"position","relative"),D(vp,"border","none"),D(vp,"flex-shrink","0"),D(vp,"display","flex"),D(vp,"flex-direction","row"),D(vp,"flex-basis","auto"),D(vp,"resize","none"),D(vp,"font-feature-settings","inherit"),D(vp,"box-sizing","border-box"),D(vp,"margin","0"),D(vp,"padding","0"),D(vp,"border-width","0"),D(vp,"border-style","solid"),D(vp,"font-size","inherit"),D(vp,"color","inherit"),D(vp,"font-family","inherit"),D(vp,"line-height","1"),D(vp,"font-weight","inherit"),D(vp,"text-decoration","none"),D(vp,"font-style","inherit"),D(mp,"."+Vb,N([D(vp,"flex-wrap","wrap")])),D(mp,"."+yb,N([D(vp,"-moz-user-select","none"),D(vp,"-webkit-user-select","none"),D(vp,"-ms-user-select","none"),D(vp,"user-select","none")])),D(mp,"."+H,N([D(vp,"cursor","pointer")])),D(mp,"."+Jn,N([D(vp,"cursor","text")])),D(mp,"."+v,N([D(vp,"pointer-events","none !important")])),D(mp,"."+ne,N([D(vp,"pointer-events","auto !important")])),D(mp,"."+Tr,N([D(vp,"opacity","0")])),D(mp,"."+Vn,N([D(vp,"opacity","1")])),D(mp,"."+S(pn,Tr)+":hover",N([D(vp,"opacity","0")])),D(mp,"."+S(pn,Vn)+":hover",N([D(vp,"opacity","1")])),D(mp,"."+S(Pn,Tr)+":focus",N([D(vp,"opacity","0")])),D(mp,"."+S(Pn,Vn)+":focus",N([D(vp,"opacity","1")])),D(mp,"."+S(Qe,Tr)+":active",N([D(vp,"opacity","0")])),D(mp,"."+S(Qe,Vn)+":active",N([D(vp,"opacity","1")])),D(mp,"."+_r,N([D(vp,"transition",D(_t,", ",D(Na,function(n){return n+" 160ms"},N(["transform","opacity","filter","background-color","color","font-size"]))))])),D(mp,"."+$n,N([D(vp,"overflow","auto"),D(vp,"flex-shrink","1")])),D(mp,"."+hn,N([D(vp,"overflow-x","auto"),D(mp,"."+Lb,N([D(vp,"flex-shrink","1")]))])),D(mp,"."+xn,N([D(vp,"overflow-y","auto"),D(mp,"."+ab,N([D(vp,"flex-shrink","1")])),D(mp,"."+Bb,N([D(vp,"flex-shrink","1")]))])),D(mp,"."+vr,N([D(vp,"overflow","hidden")])),D(mp,"."+hr,N([D(vp,"overflow-x","hidden")])),D(mp,"."+I,N([D(vp,"overflow-y","hidden")])),D(mp,"."+Db,N([D(vp,"width","auto")])),D(mp,"."+bn,N([D(vp,"border-width","0")])),D(mp,"."+_n,N([D(vp,"border-style","dashed")])),D(mp,"."+sn,N([D(vp,"border-style","dotted")])),D(mp,"."+W,N([D(vp,"border-style","solid")])),D(mp,"."+Nb,N([D(vp,"white-space","pre"),D(vp,"display","inline-block")])),D(mp,"."+E,N([D(vp,"line-height","1.05"),D(vp,"background","transparent"),D(vp,"text-align","inherit")])),D(mp,"."+Bb,on),D(mp,"."+Lb,N([D(vp,"display","flex"),D(vp,"flex-direction","row"),D(bp,"."+eb,N([D(vp,"flex-basis","0%"),D(mp,"."+_b,N([D(vp,"flex-basis","auto")])),D(mp,"."+X,N([D(vp,"flex-basis","auto")]))])),D(bp,"."+mb,N([D(vp,"align-self","stretch !important")])),D(bp,"."+vb,N([D(vp,"align-self","stretch !important")])),D(bp,"."+Sb,N([D(vp,"flex-grow","100000")])),D(bp,"."+ob,N([D(vp,"flex-grow","0"),D(vp,"flex-basis","auto"),D(vp,"align-self","stretch")])),D(bp,"u:first-of-type."+Xg,N([D(vp,"flex-grow","1")])),D(bp,"s:first-of-type."+Wg,N([D(vp,"flex-grow","1"),D(bp,"."+Ug,N([D(vp,"margin-left","auto !important")]))])),D(bp,"s:last-of-type."+Wg,N([D(vp,"flex-grow","1"),D(bp,"."+Ug,N([D(vp,"margin-right","auto !important")]))])),D(bp,"s:only-of-type."+Wg,N([D(vp,"flex-grow","1"),D(bp,"."+Yg,N([D(vp,"margin-top","auto !important"),D(vp,"margin-bottom","auto !important")]))])),D(bp,"s:last-of-type."+Wg+" ~ u",N([D(vp,"flex-grow","0")])),D(bp,"u:first-of-type."+Xg+" ~ s."+Wg,N([D(vp,"flex-grow","0")])),y(function(n){switch(n){case 0:return{a:N([D(vp,"align-items","flex-start")]),b:N([D(vp,"align-self","flex-start")])};case 1:return{a:N([D(vp,"align-items","flex-end")]),b:N([D(vp,"align-self","flex-end")])};case 2:return{a:N([D(vp,"justify-content","flex-end")]),b:T};case 3:return{a:N([D(vp,"justify-content","flex-start")]),b:T};case 4:return{a:N([D(vp,"justify-content","center")]),b:T};default:return{a:N([D(vp,"align-items","center")]),b:N([D(vp,"align-self","center")])}}}),D(mp,"."+yn,N([D(vp,"justify-content","space-between")])),D(mp,"."+xb,N([D(vp,"align-items","baseline")]))])),D(mp,"."+ab,N([D(vp,"display","flex"),D(vp,"flex-direction","column"),D(bp,"."+eb,N([D(vp,"flex-basis","0px"),D(vp,"min-height","min-content"),D(mp,"."+pb,N([D(vp,"flex-basis","auto")]))])),D(bp,"."+mb,N([D(vp,"flex-grow","100000")])),D(bp,"."+Sb,N([D(vp,"width","100%")])),D(bp,"."+jb,N([D(vp,"width","100%")])),D(bp,"."+Db,N([D(vp,"align-self","flex-start")])),D(bp,"u:first-of-type."+Og,N([D(vp,"flex-grow","1")])),D(bp,"s:first-of-type."+Gg,N([D(vp,"flex-grow","1"),D(bp,"."+Yg,N([D(vp,"margin-top","auto !important"),D(vp,"margin-bottom","0 !important")]))])),D(bp,"s:last-of-type."+Gg,N([D(vp,"flex-grow","1"),D(bp,"."+Yg,N([D(vp,"margin-bottom","auto !important"),D(vp,"margin-top","0 !important")]))])),D(bp,"s:only-of-type."+Gg,N([D(vp,"flex-grow","1"),D(bp,"."+Yg,N([D(vp,"margin-top","auto !important"),D(vp,"margin-bottom","auto !important")]))])),D(bp,"s:last-of-type."+Gg+" ~ u",N([D(vp,"flex-grow","0")])),D(bp,"u:first-of-type."+Og+" ~ s."+Gg,N([D(vp,"flex-grow","0")])),y(function(n){switch(n){case 0:return{a:N([D(vp,"justify-content","flex-start")]),b:N([D(vp,"margin-bottom","auto")])};case 1:return{a:N([D(vp,"justify-content","flex-end")]),b:N([D(vp,"margin-top","auto")])};case 2:return{a:N([D(vp,"align-items","flex-end")]),b:N([D(vp,"align-self","flex-end")])};case 3:return{a:N([D(vp,"align-items","flex-start")]),b:N([D(vp,"align-self","flex-start")])};case 4:return{a:N([D(vp,"align-items","center")]),b:N([D(vp,"align-self","center")])};default:return{a:N([D(vp,"justify-content","center")]),b:T}}}),D(bp,"."+ob,N([D(vp,"flex-grow","0"),D(vp,"flex-basis","auto"),D(vp,"width","100%"),D(vp,"align-self","stretch !important")])),D(mp,"."+yn,N([D(vp,"justify-content","space-between")]))])),D(mp,"."+mn,N([D(vp,"display","-ms-grid"),D(bp,".gp",N([D(bp,"."+eb,N([D(vp,"width","100%")]))])),D(Ko,{a:"display",b:"grid"},N([{a:"display",b:"grid"}])),(Fl=function(n){switch(n){case 0:return N([D(vp,"justify-content","flex-start")]);case 1:return N([D(vp,"justify-content","flex-end")]);case 2:return N([D(vp,"align-items","flex-end")]);case 3:return N([D(vp,"align-items","flex-start")]);case 4:return N([D(vp,"align-items","center")]);default:return N([D(vp,"justify-content","center")])}},{$:6,a:D(Ui,function(n){return N([D(bp,"."+eb,N([D(mp,ql(n),Fl(n))]))])},hp)})])),D(mp,"."+Pb,N([D(vp,"display","block"),D(bp,"."+eb+":first-child",N([D(vp,"margin","0 !important")])),D(bp,"."+eb+(ql(3)+":first-child + .")+eb,N([D(vp,"margin","0 !important")])),D(bp,"."+eb+(ql(2)+":first-child + .")+eb,N([D(vp,"margin","0 !important")])),y(function(n){switch(n){case 0:case 1:return{a:T,b:T};case 2:return{a:T,b:N([D(vp,"float","right"),D(mp,"::after",N([D(vp,"content",'""'),D(vp,"display","table"),D(vp,"clear","both")]))])};case 3:return{a:T,b:N([D(vp,"float","left"),D(mp,"::after",N([D(vp,"content",'""'),D(vp,"display","table"),D(vp,"clear","both")]))])};case 4:default:return{a:T,b:T}}})])),D(mp,"."+m,N([D(vp,"white-space","pre-wrap !important"),D(vp,"height","100%"),D(vp,"width","100%"),D(vp,"background-color","transparent")])),D(mp,"."+p,N([D(mp,"."+Bb,N([D(vp,"flex-basis","auto")]))])),D(mp,"."+F,N([D(vp,"white-space","pre-wrap !important"),D(vp,"cursor","text"),D(bp,"."+j,N([D(vp,"white-space","pre-wrap !important"),D(vp,"color","transparent")]))])),D(mp,"."+Tb,N([D(vp,"display","block"),D(vp,"white-space","normal"),D(vp,"overflow-wrap","break-word"),D(mp,"."+gn,N([D(vp,"z-index","0"),D(bp,"."+rb,N([D(vp,"z-index","-1")]))])),D(Cr,"."+Nb,N([D(vp,"display","inline"),D(vp,"white-space","normal")])),D(Cr,"."+Tb,N([D(vp,"display","inline"),D(mp,"::after",N([D(vp,"content","none")])),D(mp,"::before",N([D(vp,"content","none")]))])),D(Cr,"."+Bb,N([D(vp,"display","inline"),D(vp,"white-space","normal"),D(mp,"."+_b,N([D(vp,"display","inline-block")])),D(mp,"."+hb,N([D(vp,"display","flex")])),D(mp,"."+rb,N([D(vp,"display","flex")])),D(mp,"."+Ig,N([D(vp,"display","flex")])),D(mp,"."+tb,N([D(vp,"display","flex")])),D(mp,"."+Cb,N([D(vp,"display","flex")])),D(mp,"."+wb,N([D(vp,"display","flex")])),D(bp,"."+Nb,N([D(vp,"display","inline"),D(vp,"white-space","normal")]))])),D(bp,"."+Lb,N([D(vp,"display","inline")])),D(bp,"."+ab,N([D(vp,"display","inline-flex")])),D(bp,"."+mn,N([D(vp,"display","inline-grid")])),y(function(n){switch(n){case 0:case 1:return{a:T,b:T};case 2:return{a:T,b:N([D(vp,"float","right")])};case 3:return{a:T,b:N([D(vp,"float","left")])};case 4:default:return{a:T,b:T}}})])),D(mp,".hidden",N([D(vp,"display","none")])),D(mp,"."+Pr,N([D(vp,"font-weight","100")])),D(mp,"."+cn,N([D(vp,"font-weight","200")])),D(mp,"."+h,N([D(vp,"font-weight","300")])),D(mp,"."+an,N([D(vp,"font-weight","400")])),D(mp,"."+wr,N([D(vp,"font-weight","500")])),D(mp,"."+U,N([D(vp,"font-weight","600")])),D(mp,"."+K,N([D(vp,"font-weight","700")])),D(mp,"."+un,N([D(vp,"font-weight","800")])),D(mp,"."+Qn,N([D(vp,"font-weight","900")])),D(mp,"."+Y,N([D(vp,"font-style","italic")])),D(mp,"."+vn,N([D(vp,"text-decoration","line-through")])),D(mp,"."+q,N([D(vp,"text-decoration","underline"),D(vp,"text-decoration-skip-ink","auto"),D(vp,"text-decoration-skip","ink")])),D(mp,S("."+q,"."+vn),N([D(vp,"text-decoration","line-through underline"),D(vp,"text-decoration-skip-ink","auto"),D(vp,"text-decoration-skip","ink")])),D(mp,"."+J,N([D(vp,"font-style","normal")])),D(mp,"."+pr,N([D(vp,"text-align","justify")])),D(mp,"."+gr,N([D(vp,"text-align","justify-all")])),D(mp,"."+C,N([D(vp,"text-align","center")])),D(mp,"."+R,N([D(vp,"text-align","right")])),D(mp,"."+ln,N([D(vp,"text-align","left")])),D(mp,".modal",N([D(vp,"position","fixed"),D(vp,"left","0"),D(vp,"top","0"),D(vp,"width","100%"),D(vp,"height","100%"),D(vp,"pointer-events","none")]))]))]),R=function(n){return N([D(pp,".v-"+n,N([D(vp,"font-feature-settings",'"'+n+'"')])),D(pp,".v-"+n+"-off",N([D(vp,"font-feature-settings",'"'+n+'" 0')]))])},ln=Ka(N([D(Na,function(n){return D(pp,".border-"+Dt(n),N([D(vp,"border-width",Dt(n)+"px")]))},D(qt,0,6)),D(Na,function(n){return D(pp,".font-size-"+Dt(n),N([D(vp,"font-size",Dt(n)+"px")]))},D(qt,8,32)),D(Na,function(n){return D(pp,".p-"+Dt(n),N([D(vp,"padding",Dt(n)+"px")]))},D(qt,0,24)),N([D(pp,".v-smcp",N([D(vp,"font-variant","small-caps")])),D(pp,".v-smcp-off",N([D(vp,"font-variant","normal")]))]),R("zero"),R("onum"),R("liga"),R("dlig"),R("ordn"),R("tnum"),R("afrc"),R("frac")])),R="@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {."+eb+"."+Lb+" > ."+eb+" { flex-basis: auto !important; } ."+eb+"."+Lb+" > ."+eb+"."+ob+' { flex-basis: auto !important; }}\ninput[type="search"],\ninput[type="search"]::-webkit-search-decoration,\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-results-button,\ninput[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance:none;\n}\n\ninput[type=range] {\n  -webkit-appearance: none; \n  background: transparent;\n  position:absolute;\n  left:0;\n  top:0;\n  z-index:10;\n  width: 100%;\n  outline: dashed 1px;\n  height: 100%;\n  opacity: 0;\n}\n\ninput[type=range]::-moz-range-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-ms-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n    background: transparent;\n    cursor: pointer;\n}\n\ninput[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-moz-range-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-ms-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range][orient=vertical]{\n    writing-mode: bt-lr; /* IE */\n    -webkit-appearance: slider-vertical;  /* WebKit */\n}\n'+("\n.explain {\n    border: 6px solid rgb(174, 121, 15) !important;\n}\n.explain > ."+eb+" {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n.ctr {\n    border: none !important;\n}\n.explain > .ctr > ."+eb+" {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n"),xp=d(function(n,e){return{cm:e,J:T,aI:T,al:n}}),$p=d(function(n,e){var o=n;return _(za,d(function(n,e){switch(n.$){case 0:return $(e,{aI:D(yt,{a:n.a,b:n.b},e.aI)});case 3:var r=n.a;return $(e,{J:D(yt,{cm:"\n}",J:T,aI:n.b,al:"@supports ("+r.a+":"+r.b+") {"+o.al},e.J)});case 5:r=n.b;return $(e,{J:D(yt,D($p,D(xp,o.al+" + "+n.a,""),r),e.J)});case 1:var t=n.b;return $(e,{J:D(yt,D($p,D(xp,o.al+" > "+n.a,""),t),e.J)});case 2:t=n.b;return $(e,{J:D(yt,D($p,D(xp,o.al+" "+n.a,""),t),e.J)});case 4:var a=n.b;return $(e,{J:D(yt,D($p,D(xp,S(o.al,n.a),""),a),e.J)});default:a=n.a;return $(e,{J:D(yt,D($p,D(xp,o.al,""),a),e.J)})}}),o,e)}),yp=S(R,(R=S(C,ln),Ru(D(Na,Rl=function(n){return S(wp(n),Ru(D(Na,Rl,n.J)))},_(za,d(function(n,e){var r=n.b;return D(yt,D($p,D(xp,n.a,""),r),e)}),T,R)))));function wp(n){return n.aI.b?n.al+("{"+(Ru(D(Na,function(n){return n.a+":"+n.b+";"},n.aI))+(n.cm+"}"))):""}function Cp(n){switch(n.fF){case 0:return _(kl,"div",T,N([_(kl,"style",T,N([Mm(yp)]))]));case 1:return Mm("");default:return _(kl,"elm-ui-static-rules",N([D(gp,"rules",Zi(yp))]),T)}}function Pp(n){switch(n.$){case 0:return"serif";case 1:return"sans-serif";case 2:return"monospace";case 3:return'"'+n.a+'"';case 4:return'"'+n.a+'"';default:return'"'+n.a.iF+'"'}}function Tp(n){switch(n.$){case 0:return"smcp"===n.a;case 1:return!1;default:return"smcp"===n.a&&1===n.b}}function Mp(n){return 5===n.$&&D(Lm,Tp,n.a.gs)}function Lp(n){switch(n.$){case 0:return'"'+n.a+'"';case 1:return'"'+n.a+'" 0';default:return'"'+n.a+('" '+Dt(n.b))}}function Ap(n){return 5!==n.$?mt:pt(D(_t,", ",D(Na,Lp,n.a.gs)))}function Bp(n){return n.b?pt(_(jt,Zl,n.a,n.b)):mt}function zp(n){var e=N([n.hf,n.g$,n.hE,n.iw]),r=D(Xo,n.hE,Bp(e)),t=D(Xo,n.g$,Bp(D(km,function(n){return!g(n,r)},e))),e=1/((n=D(Xo,n.hf,(a=e).b?pt(_(jt,ea,a.a,a.b)):mt))-r),a=1-n;return{hf:_(Vm,1/(n-t),n-t,1-n),eW:_(Vm,e,n-r,a)}}function Np(n){return{a:N([{a:"display",b:"block"}]),b:N([{a:"display",b:"inline-block"},{a:"line-height",b:fp(n.eY)},{a:"vertical-align",b:fp(n.gt)+"em"},{a:"font-size",b:fp(n.gb)+"em"}])}}function Dp(n){function e(n){return 4!==n.$?mt:pt("@import url('"+n.b+"');")}function r(n){return D(_t,"\n",D(Cc,e,n.b))}function t(n){var e=n.a,n=function(n){return _(jt,d(function(n,e){if(1!==e.$)return e;if(5!==n.$)return e;n=n.a.gH;if(1===n.$)return e;n=n.a;return pt({a:Np(zp(n).eW),b:Np(zp(n).hf)})}),mt,n)}(n.b);return D(_t,"",D(Na,1===n.$?jm(e):D(Sm,e,n.a),a))}var a=D(Na,dt,n);return S(D(_t,"\n",D(Na,r,n)),D(_t,"\n",D(Na,t,n)))}function _p(n){return me(we(n))}function Sp(n){return D(np,N([Zb(Km)]),N([Jm(n)]))}function jp(n){return D(np,N([Zb(Zm)]),N([Jm(n)]))}function Vp(n){return{$:1,a:Zb(n)}}function kp(n){return{$:6,a:n}}function qp(n){var e=n;return D(Fg,Hv,z(Iv,"p-"+Dt(n),e,e,e,e))}function Fp(n){return D(Kv,5,n)}function Rp(n){return _(za,d(function(n,e){return e.$?8!==n.$?mt:pt(n.a):pt(e.a)}),mt,n)}function Ep(n){return _(za,d(function(n,e){return e.$?7!==n.$?mt:pt(n.a):pt(e.a)}),mt,n)}function Ip(n){return 1!==n.$?Ov:{$:2,a:{$:5,a:n.a}}}function Hp(n){return{a:n,b:!0}}function Up(n){return D(Fg,Ph,_(qg,"bc-"+zl(n),"border-color",n))}function Yp(n){return D(Fg,Th,_(ev,"br-"+Dt(n),"border-radius",Dt(n)+"px"))}function Op(n){return D(Fg,xv,z(Mh,"b-"+Dt(n),n,n,n,n))}function Wp(n){return D(Fg,uh,_(ch,D(lh,n,n),n,n))}function Gp(n){return n}function Xp(n){return D(zt,function(n){return"0"===n},Ru(D(Hi,n.e4,N([n.cu]))))?1:n.fP<0?2:0}function Qp(n){return D(Rh,n,"")}function Jp(n){return(n=D(St,".",n)).b?n.b.b?{a:n.a,b:n.b.a}:{a:n.a,b:"0"}:{a:"0",b:"0"}}function Kp(n){var e=$(Zh,{cu:{$:2,a:2},cM:"-",da:""});return D(Kh,e,n)}function Zp(n){return 4===n.$&&11===n.b.$&&!n.b.a}function nm(e){return{$:1,a:D(ux,"keydown",D(la,function(n){return{a:n,b:!0}},D(Bf,function(n){n=e(n);return 1===n.$?zf("No key matched"):sa(n.a)},D(Oc,"key",Xc))))}}function em(n){return D(ye,"tabIndex",Dt(n))}function rm(n){return n}function tm(n){return D(mh,dx,{$:1,a:n})}function am(n){return D(mh,gx,{$:0,a:-n})}function om(n){return D(Fg,px,{$:2,a:n})}function im(n){return{$:5,a:n}}function cm(n){return{$:6,a:n}}function um(n){return{$:2,a:n}}function lm(n){return{$:1,a:n}}function fm(n){return{$:3,a:n}}function sm(n){return n}function dm(n){return _(Tg,{dP:n.dP,ea:n.ea,es:n.es},{bI:n.bI,b0:n.b0,cc:n.cc,cd:n.cd},{bI:n.bI,b0:n.b0,cc:n.cc,cd:n.cd})}function gm(n){return z(xd,N([dm(n),B(_x,!1,!1,!1,!1)]),qx,Vx,kx,{})}function bm(n){return gm({bI:7680,dP:15,ea:8,b0:516,es:D(fs,2,n+4),cc:5386,cd:5386})}function pm(n){return n}function mm(n){return B(Sx,515,n.an,n.ai,n.ah)}function vm(e){var n=function(n){return n.j0}(e.hb),r={d_:ll(n),et:function(n){return Gu(n)}(n),eu:function(n){return Xu(n)}(n),ev:fl(sl(n))},t=Cl(e.hP),a=B(Qx,r,1,mt,N([t]));if(1===a.$)return T;var o=a.a,i=D(u$,c$,n),c=D(Hs,.99,D(Kl,ou(e.ho),Mu(su(o)))),u=pu(o),l=function(n){var e=n,r=D(ea,au(e.gA),D(ea,au(e.gB),au(e.dd)));if(r){var t=e.dd/r,n=e.gB/r,e=e.gA/r;return Gl(e*e+n*n+t*t)*r}return 0}(_(Gs,u.a,u.b,u.c)),r=D(Hs,1.01,D(Xl,l,Mu(bu(o)))),o=(u=i$(a=D(t$,e.hb,{gV:e.gV,hU:r,iG:c})).fu)?pm(fl(sl(n))):Pl(ll(n)),c=(r=function(){var n=e.aK;switch(n.$){case 0:return{a:0,b:0};case 1:return{a:1,b:0};case 2:return{a:2,b:0};case 3:return{a:3,b:n.a};case 4:return{a:4,b:n.a};default:return{a:5,b:0}}}()).a,n=r.b,n=Zd({ff:0,fg:o.gA,fh:ag(r=D(Bx,e.aD,e.aN)),fi:e.gg,fj:0,fk:o.gB,fl:og(r),fm:Gp(l),fn:0,fo:o.dd,fp:ig(r),fq:c,fr:0,fs:u,ft:0,fu:n}),f=b(Dx,n,i,a,Jx,t,{U:T,ae:T,af:T}),s=e.aF;switch(s.$){case 0:return Ka(N([_(Mx,f.U,{a:d=s.a,b:Tx},Ux),_(Mx,f.ae,e$,Ux)]));case 1:var d=s.a;return Ka(N([_(Mx,f.U,e$,Ux),N([Kx]),_(Mx,f.af,d.bO,jx),N([bm(0)]),_(Mx,f.U,{a:d,b:Tx},r$),_(Mx,f.ae,e$,Ux)]));default:var g=s.a,d=s.b;return Ka(N([_(Mx,f.U,{a:d,b:Tx},Ux),N([Kx]),D(Ex,f.af,g),_(o$,f.U,d,it(g)),_(Mx,f.ae,e$,Ux)]))}}function hm(n){return n}function xm(n){return function(n){return D(l$,{a8:n.a8,gZ:n.gZ,hb:n.hb,ho:n.ho,hG:n.hG},N([{hP:n.hP,aD:n.aD,aF:n.aF,aK:n.aK,aN:n.aN}]))}({a8:s$,gZ:n.gZ,hb:n.hb,ho:n.ho,hG:n.hG,hP:n.hP,aD:1.2*D(fs,2,9),aF:(e=function(n){for(;;){if(g(n.im,0)&&g(n.$9,0))return Zx;if(!D(g$,ou(n.im),ou(n.$9))){var e=au(hm(n.$9)/3.141592653589793),r=au(hm(n.im)/3.141592653589793),t=pm(n.gq),a=t.gA,o=t.gB,i=t.dd,t=D(Bx,1,n.cj);return{cg:r*ig(t),hh:!1,cx:r*og(t),d7:e/r,cZ:r*ag(t),el:3,gA:a,gB:o,dd:i}}n={cj:n.cj,im:n.$9,$9:n.im,gq:fl(n.gq)}}}({cj:f$,im:1e3,$9:200,gq:n.gq}),n={bO:D(n$,e,Zx),cH:D(n$,Zx,Zx),cI:D(n$,Zx,Zx),cJ:D(n$,Zx,Zx)},e.hh?{$:1,a:n}:{$:0,a:n}),aK:d$,aN:f$});var e}function $m(n){return{$:7,a:n}}function ym(n){var e=D(zv,N([Bv(qv),Dv,qp(10),_v]),N([D(zv,N([Bv(qv),Dv,qp(10),_v]),N([function(n){var e=N([D(X$,0,ny("Third person")),D(X$,1,ny("Map"))]);return D(oy,N([Wp(5),qp(5)]),{dG:Fv("Choose view"),fK:$m,iP:e,jb:pt(n.j$)})}(n),D(kv,1!==n.j$,D(W$,n,co)),D(kv,1===n.j$,D(mx,n,to))])),(e=n.b6).$?Ev:(e=1+fo(e.a),D(Ch,iy,{dG:Fv("Current position slider"),iz:e-1,iC:0,fK:D(yo,Eg,kp),jp:pt(1),jJ:Lh,jX:n.dw}))]));return D(zv,N([Bv(qv),qp(5),Nv]),N([D(Yv,T,N([D(Sv,N([Bv(Uv(600))]),Ev)])),D(Yv,N([Bv(qv),Wp(5),qp(5)]),N([D(Sv,N([Bv(qv),Dv]),e)])),D(Yv,N([Bv(Uv(600)),Nv]),N([function(n){if(n.$)return D(Sv,N([_v,gh]),{$:2,a:"No track loaded"});var e=n.a;return D(Yv,N([Nl(Ah),Yp(10),qp(10),Wp(5)]),N([D(zv,N([Wp(5)]),D(Na,function(n){return n.a},nx)),D(zv,N([Wp(5)]),D(Na,function(n){return(0,n.b)(e)},nx))]))}(n.b6)]))]))}var wm,Cm,Pm,Tm,Mm=be,Lm=d(function(n,e){for(;;){if(!e.b)return!1;var r=e.b;if(n(e.a))return!0;n=n,e=r}}),Am=P(function(n,e,r){var t=e.a,e=e.b;return n?r+"\n  "+t+": "+e+" !important;":r+"\n  "+t+": "+e+";"}),Bm=a(function(n,e,r,t){if(1===e.$)return N([r+("{"+_(jt,Am(!1),"",t))+"\n}"]);switch(e.a){case 1:switch(n.h8){case 0:return T;case 2:return N([r+("-hv {"+_(jt,Am(!0),"",t))+"\n}"]);default:return N([r+("-hv:hover {"+_(jt,Am(!1),"",t))+"\n}"])}case 0:var a=_(jt,Am(!1),"",t);return N([r+"-fs:focus {"+a+"\n}","."+eb+":focus "+r+"-fs  {"+a+"\n}",r+"-fs:focus-within {"+a+"\n}",".ui-slide-bar:focus + ."+eb+" .focusable-thumb"+r+"-fs {"+a+"\n}"]);default:return N([r+("-act:active {"+_(jt,Am(!1),"",t))+"\n}"])}}),zm=P(function(e,n,r){switch(n.$){case 0:return B(Bm,e,r,n.a,n.b);case 13:return B(Bm,e,r,"."+(a=n.a),N([D(up,"box-shadow",n.b)]));case 12:return B(Bm,e,r,"."+(a=n.a),N([D(up,"opacity",fp(D(ea,0,D(Zl,1,1-n.b))))]));case 2:var t=n.a;return B(Bm,e,r,".font-size-"+Dt(t),N([D(up,"font-size",Dt(t)+"px")]));case 1:var a=n.a,o=n.b,i=D(_t,", ",D(Cc,Ap,o)),c=N([D(up,"font-family",D(_t,", ",D(Na,Pp,o))),D(up,"font-feature-settings",i),D(up,"font-variant",D(Lm,Mp,o)?"small-caps":"normal")]);return B(Bm,e,r,"."+a,c);case 3:return B(Bm,e,r,"."+(w=n.a),N([D(up,n.b,C=n.c)]));case 4:return B(Bm,e,r,"."+(w=n.a),N([D(up,n.b,Sl(n.c))]));case 5:var u=n.a,l=n.b,f=n.c,s=Dt(f)+"px",d=Dt(l)+"px",g="."+Lb,t="."+Vb+g,b="."+Jg,p="."+Tb,i="."+Pb,m="."+Qg,o=fp(f/2)+"px",a=fp(l/2)+"px",c="."+ab,l="."+eb;return Ka(N([B(Bm,e,r,(w="."+u)+g+" > "+l+" + "+l,N([D(up,"margin-left",d)])),B(Bm,e,r,w+t+" > "+l,N([D(up,"margin",o+" "+a)])),B(Bm,e,r,w+c+" > "+l+" + "+l,N([D(up,"margin-top",s)])),B(Bm,e,r,w+i+" > "+l+" + "+l,N([D(up,"margin-top",s)])),B(Bm,e,r,w+i+" > "+m,N([D(up,"margin-right",d)])),B(Bm,e,r,w+i+" > "+b,N([D(up,"margin-left",d)])),B(Bm,e,r,S(w,p),N([D(up,"line-height","calc(1em + "+Dt(f)+"px)")])),B(Bm,e,r,"textarea"+l+w,N([D(up,"line-height","calc(1em + "+Dt(f)+"px)"),D(up,"height","calc(100% + "+Dt(f)+"px)")])),B(Bm,e,r,w+p+" > "+m,N([D(up,"margin-right",d)])),B(Bm,e,r,w+p+" > "+b,N([D(up,"margin-left",d)])),B(Bm,e,r,w+p+"::after",N([D(up,"content","''"),D(up,"display","block"),D(up,"height","0"),D(up,"width","0"),D(up,"margin-top",Dt(-1*(f/2|0))+"px")])),B(Bm,e,r,w+p+"::before",N([D(up,"content","''"),D(up,"display","block"),D(up,"height","0"),D(up,"width","0"),D(up,"margin-bottom",Dt(-1*(f/2|0))+"px")]))]));case 7:var b=n.c,v=n.d,m=n.e;return B(Bm,e,r,w="."+(u=n.a),N([D(up,"padding",fp(n.b)+("px "+fp(b)+("px "+fp(v)+("px "+fp(m))))+"px")]));case 6:b=n.c,v=n.d,m=n.e;return B(Bm,e,r,w="."+(u=n.a),N([D(up,"border-width",Dt(n.b)+("px "+Dt(b)+("px "+Dt(v)+("px "+Dt(m))))+"px")]));case 8:var p=n.a,h=P(function(n,e,r){n:for(;;)switch(r.$){case 0:return Dt(r.a)+"px";case 1:var t={a:n,b:e};if(1===t.a.$){if(1===t.b.$)return"max-content";return"minmax(max-content, "+Dt(a=t.b.a)+"px)"}if(1===t.b.$)return"minmax("+Dt(t.a.a)+"px, max-content)";var a=t.b.a;return"minmax("+Dt(t.a.a)+("px, "+Dt(a))+"px)";case 2:var o=r.a,t={a:n,b:e};if(1===t.a.$){if(1===t.b.$)return Dt(o)+"fr";return"minmax(max-content, "+Dt(a=t.b.a)+"px)"}if(1===t.b.$)return"minmax("+Dt(t.a.a)+("px, "+Dt(o))+"frfr)";a=t.b.a;return"minmax("+Dt(t.a.a)+("px, "+Dt(a))+"px)";case 3:var i=r.b;n=pt(r.a),e=e,r=i;continue n;default:i=r.b;n=n,e=pt(r.a),r=i;continue n}}),f=function(n){return _(h,mt,mt,n)},x=(f(p.jj.a),f(p.jj.b)),b="grid-template-rows: "+D(_t," ",D(Na,f,p.i3))+";",v="-ms-grid-rows: "+D(_t,x,D(Na,f,p.ap))+";",m="-ms-grid-columns: "+D(_t,x,D(Na,f,p.ap))+";",$="grid-row-gap:"+f(p.jj.b)+";",x="grid-column-gap:"+f(p.jj.a)+";",f="grid-template-columns: "+D(_t," ",D(Na,f,p.ap))+";";return N([(w=".grid-rows-"+D(_t,"-",D(Na,rp,p.i3))+("-cols-"+D(_t,"-",D(Na,rp,p.ap))+("-space-x-"+rp(p.jj.a)+("-space-y-"+rp(p.jj.b)))))+"{"+m+v+"}","@supports (display:grid) {"+(w+"{"+f+b+x+$+"}")+"}"]);case 9:var x=n.a,$=D(_t," ",N(["-ms-grid-row: "+Dt(x.f6)+";","-ms-grid-row-span: "+Dt(x.eY)+";","-ms-grid-column: "+Dt(x.eF)+";","-ms-grid-column-span: "+Dt(x.gx)+";"])),y=D(_t," ",N(["grid-row: "+Dt(x.f6)+(" / "+Dt(x.f6+x.eY))+";","grid-column: "+Dt(x.eF)+(" / "+Dt(x.eF+x.gx))+";"]));return N([(w=".grid-pos-"+Dt(x.f6)+("-"+Dt(x.eF)+("-"+Dt(x.gx)+("-"+Dt(x.eY)))))+"{"+$+"}","@supports (display:grid) {"+(w+"{"+y+"}")+"}"]);case 11:var w=n.a;return D(Ui,function(n){return _(zm,e,n,pt(w))},n.b);default:var y=n.a,C=function(n){switch(n.$){case 0:return mt;case 1:var e=n.a,r=e.b,t=e.c;return pt("translate3d("+fp(e.a)+("px, "+fp(r)+("px, "+fp(t)))+"px)");default:var a=n.a,o=a.b,i=a.c,c=n.b,u=c.a,l=c.b,f=c.c,e=n.c,r=e.a,t=e.b,c=e.c,e=n.d,i="translate3d("+fp(a.a)+("px, "+fp(o)+("px, "+fp(i)))+"px)",f="scale3d("+fp(u)+(", "+fp(l)+(", "+fp(f)))+")",e="rotate3d("+fp(r)+(", "+fp(t)+(", "+fp(c)+(", "+fp(e))))+"rad)";return pt(i+" "+f+" "+e)}}(y),C={a:w=Dl(y),b:C};return C.a.$||C.b.$?T:B(Bm,e,r,"."+(u=C.a.a),N([D(up,"transform",C.b.a)]))}}),Nm=d(function(r,n){return eo(D(Na,function(n){var e=_(zm,r,n,mt);return{a:tp(n),b:D(pf,Zi,e)}},n))}),Dm=d(function(n,e){return n+" {"+D(_t,"",D(Na,function(n){return n.a+": "+n.b+";"},e))+"}"}),_m=P(function(n,e,r){var t=r.b;return N([D(Dm,"."+n+"."+e+", ."+n+" ."+e,r.a),D(Dm,"."+n+"."+e+"> ."+Nb+", ."+n+" ."+e+" > ."+Nb,t)])}),Sm=P(function(n,e,r){var t=e.a,e=e.b,n=g(n,r)?n:r+" ."+n;return D(_t," ",S(_(_m,n,zb,e),_(_m,n,gb,t)))}),jm=d(function(n,e){n=g(n,e)?n:e+" ."+n;return D(_t," ",N([D(Dm,"."+n+"."+zb+", ."+n+" ."+zb,N([{a:"line-height",b:"1"}])),D(Dm,"."+n+"."+zb+"> ."+Nb+", ."+n+" ."+zb+" > ."+Nb,N([{a:"vertical-align",b:"0"},{a:"line-height",b:"1"}]))]))}),Vm=P(function(n,e,r){return{eY:e/n,gb:n,gt:r}}),km=d(function(r,n){return _(za,d(function(n,e){return r(n)?D(yt,n,e):e}),T,n)}),qm=d(function(r,n){var e=_(jt,d(function(n,e){return{c0:S(e.c0,_(zm,r,n,mt)),b5:1===(n=1!==(n=n).$?mt:pt({a:n.a,b:n.b})).$?e.b5:D(yt,n.a,e.b5)}}),{c0:T,b5:T},n),n=e.c0;return S(Dp(e.b5),Ru(n))}),Fm=d(function(n,e){switch(n.fF){case 0:case 1:return _(kl,"div",T,N([_(kl,"style",T,N([Mm(D(qm,n,e))]))]));default:return _(kl,"elm-ui-rules",N([D(gp,"rules",D(Nm,n,e))]),T)}}),Rm=a(function(n,e,r,t){r=D(Fm,e,_(jt,cp,{a:ep,b:Vl(e.h_)},r).b);return n?D(yt,{a:"static-stylesheet",b:Cp(e)},D(yt,{a:"dynamic-stylesheet",b:r},t)):D(yt,{a:"dynamic-stylesheet",b:r},t)}),Em=a(function(n,e,r,t){r=D(Fm,e,_(jt,cp,{a:ep,b:Vl(e.h_)},r).b);return n?D(yt,Cp(e),D(yt,r,t)):D(yt,r,t)}),Im=Mi(45),Hm=Mi(37),Um=pe("p"),Ym=d(function(n,e){var r=e.a;if(n.$){var t=n.a;return g(t&e.b,t)}n=n.a;return g(n&r,n)}),Om=pe("s"),Wm=pe("u"),Gm=Mi(44),Xm=Mi(39),Qm=t(function(n,e,r,a,o,t){var i=d(function(n,e){if(1===a.$){var r=a.a;return _(_p,n,e,function(){switch(o.$){case 0:return r;case 2:return B(Rm,!1,o.a,o.b,r);default:return B(Rm,!0,o.a,o.b,r)}}())}var t=a.a;return D(function(){switch(n){case"div":return np;case"p":return Um;default:return kl(n)}}(),e,function(){switch(o.$){case 0:return t;case 2:return B(Em,!1,o.a,o.b,t);default:return B(Em,!0,o.a,o.b,t)}}())}),c=function(){switch(e.$){case 0:return D(i,"div",r);case 1:return D(i,e.a,r);default:return _(kl,e.a,r,N([D(i,e.b,N([Zb(eb+" "+Bb)]))]))}}();switch(t){case 0:return D(Ym,Xm,n)&&!D(Ym,Gm,n)?c:D(Ym,Xb,n)?D(Wm,N([Zb(D(_t," ",N([eb,Bb,ob,ub,Xg])))]),N([c])):D(Ym,Qb,n)?D(Om,N([Zb(D(_t," ",N([eb,Bb,ob,ub,Wg])))]),N([c])):c;case 1:return D(Ym,Hm,n)&&!D(Ym,Im,n)?c:D(Ym,Jb,n)?D(Om,N([Zb(D(_t," ",N([eb,Bb,ob,Gg])))]),N([c])):D(Ym,Gb,n)?D(Wm,N([Zb(D(_t," ",N([eb,Bb,ob,Og])))]),N([c])):c;default:return c}}),Jm=Mm,Km=eb+" "+Nb+" "+Db+" "+bb,Zm=eb+" "+Nb+" "+Sb+" "+mb,nv=P(function(u,n,e){var r=d(function(n,e){var r=n.a,t=n.b,a=e.a,o=e.b;switch(t.$){case 0:var i=t.a;return g(u,4),{a:D(yt,{a:r,b:i(u)},a),b:o};case 1:var c=t.a;return g(u,4),{a:D(yt,{a:r,b:D(c.h9,Yb,u)},a),b:o.b?S(c.js,o):c.js};case 2:c=t.a;return{a:D(yt,{a:r,b:(g(u,2)?jp:Sp)(c)},a),b:o};default:return{a:a,b:o}}}),t=d(function(n,e){var r=e.a,t=e.b;switch(n.$){case 0:var a=n.a;return g(u,4),{a:D(yt,a(u),r),b:t};case 1:var o=n.a;return g(u,4),{a:D(yt,D(o.h9,Yb,u),r),b:t.b?S(o.js,t):o.js};case 2:o=n.a;return{a:D(yt,(g(u,2)?jp:Sp)(o),r),b:t};default:return{a:r,b:t}}});if(1===n.$){var a=_(za,r,{a:T,b:T},n.a),r=a.a;if((a=(i=a.b).b?S(e.js,i):e.js).b){var o=a;return{$:1,a:{h9:B(Qm,e.aY,e.a_,e.aP,{$:1,a:_(Wb,"nearby-element-pls",r,e.aS)}),js:o}}}return{$:0,a:z(Qm,e.aY,e.a_,e.aP,{$:1,a:_(Wb,"nearby-element-pls",r,e.aS)},Yb)}}var i,t=_(za,t,{a:T,b:T},n.a),n=t.a;if((a=(i=t.b).b?S(e.js,i):e.js).b){o=a;return{$:1,a:{h9:B(Qm,e.aY,e.a_,e.aP,{$:0,a:D(Ob,n,e.aS)}),js:o}}}return{$:0,a:z(Qm,e.aY,e.a_,e.aP,{$:0,a:D(Ob,n,e.aS)},Yb)}}),ev=P(function(n,e,r){return{$:3,a:n,b:e,c:r}}),rv=d(function(n,e){return{$:0,a:n,b:e}}),tv=d(function(n,e){var r=e.a,e=e.b;return n.$?D(rv,r,n.a|e):D(rv,n.a|r,e)}),av=d(function(n,e){return{$:3,a:n,b:e}}),ov=d(function(n,e){return D(np,N([Zb(function(){switch(n){case 0:return D(_t," ",N([$b,Bb,Ig]));case 1:return D(_t," ",N([$b,Bb,tb]));case 2:return D(_t," ",N([$b,Bb,Cb]));case 3:return D(_t," ",N([$b,Bb,wb]));case 4:return D(_t," ",N([$b,Bb,hb]));default:return D(_t," ",N([$b,Bb,rb]))}}())]),N([function(){switch(e.$){case 3:return Mm("");case 2:return Sp(e.a);case 0:return(0,e.a)(2);default:return D(e.a.h9,Yb,2)}}()]))}),iv=P(function(n,e,r){var t=D(ov,n,e);switch(r.$){case 0:return 5===n?{$:1,a:N([t])}:{$:2,a:N([t])};case 1:var a=r.a;return 5===n?{$:1,a:D(yt,t,a)}:D(av,a,N([t]));case 2:var o=r.a;return 5===n?D(av,N([t]),o):{$:2,a:D(yt,t,o)};default:a=r.a,o=r.b;return 5===n?D(av,D(yt,t,a),o):D(av,a,D(yt,t,o))}}),cv=d(function(n,e){return{$:2,a:n,b:e}}),uv=d(function(n,e){switch(e.$){case 0:return{$:1,a:n};case 1:return D(cv,e.a,n);default:return D(cv,e.a,e.b)}}),lv=d(function(n,e){return D(ye,function(n){return/^(on|formAction$)/i.test(n)?"data-"+n:n}(n),Ce(e))}),fv=a(function(n,e,r,t){return{$:2,a:n,b:e,c:r,d:t}}),sv=d(function(n,e){switch(n.$){case 0:switch(e.$){case 0:return{$:1,a:{a:r=e.a,b:0,c:0}};case 1:return{$:1,a:{a:0,b:t=e.a,c:0}};case 2:return{$:1,a:{a:0,b:0,c:a=e.a}};case 3:return{$:1,a:e.a};case 4:return B(fv,{a:0,b:0,c:0},{a:1,b:1,c:1},e.a,u=e.b);default:return B(fv,{a:0,b:0,c:0},e.a,{a:0,b:0,c:1},0)}case 1:var r=(o=n.a).a,t=o.b,a=o.c;switch(e.$){case 0:return{$:1,a:{a:e.a,b:t,c:a}};case 1:return{$:1,a:{a:r,b:e.a,c:a}};case 2:return{$:1,a:{a:r,b:t,c:e.a}};case 3:return{$:1,a:e.a};case 4:return B(fv,o,{a:1,b:1,c:1},e.a,u=e.b);default:return B(fv,o,e.a,{a:0,b:0,c:1},0)}default:var o,r=(o=n.a).a,t=o.b,a=o.c,i=n.b,c=n.c,u=n.d;switch(e.$){case 0:return B(fv,{a:e.a,b:t,c:a},i,c,u);case 1:return B(fv,{a:r,b:e.a,c:a},i,c,u);case 2:return B(fv,{a:r,b:t,c:e.a},i,c,u);case 3:return B(fv,e.a,i,c,u);case 4:return B(fv,o,i,e.a,e.b);default:return B(fv,o,e.a,c,u)}}}),dv=Mi(7),gv=Mi(36),bv=d(function(n,e){return D(rv,n.a|e.a,n.b|e.b)}),pv=D(rv,0,0),mv=function(n){switch(n.$){case 0:var e=Dt(n.a),r="height-px-"+e;return{a:pv,b:pb+" "+r,c:N([_(ev,r,"height",e+"px")])};case 1:return{a:D(tv,gv,pv),b:bb,c:T};case 2:e=n.a;return 1===e?{a:D(tv,Hm,pv),b:mb,c:T}:{a:D(tv,Hm,pv),b:vb+(" height-fill-"+Dt(e)),c:N([_(ev,eb+("."+ab+(" > .height-fill-"+Dt(e))),"flex-grow",Dt(1e5*e))])};case 3:var t=n.a,a=n.b,o="min-height-"+Dt(t),i=_(ev,o,"min-height",Dt(t)+"px !important"),c=mv(a),u=c.b,t=c.c;return{a:D(tv,Im,c.a),b:o+" "+u,c:D(yt,i,t)};default:c=n.a,a=n.b,o="max-height-"+Dt(c),i=_(ev,o,"max-height",Dt(c)+"px"),a=mv(a),u=a.b,t=a.c;return{a:D(tv,Im,a.a),b:o+" "+u,c:D(yt,i,t)}}},vv=Mi(38),hv=function(n){switch(n.$){case 0:var e=n.a;return{a:pv,b:_b+(" width-px-"+Dt(e)),c:N([_(ev,"width-px-"+Dt(e),"width",Dt(e)+"px")])};case 1:return{a:D(tv,vv,pv),b:Db,c:T};case 2:e=n.a;return 1===e?{a:D(tv,Xm,pv),b:Sb,c:T}:{a:D(tv,Xm,pv),b:jb+(" width-fill-"+Dt(e)),c:N([_(ev,eb+("."+Lb+(" > .width-fill-"+Dt(e))),"flex-grow",Dt(1e5*e))])};case 3:var r=n.a,t=n.b,a="min-width-"+Dt(r),o=_(ev,a,"min-width",Dt(r)+"px"),i=hv(t),c=i.b,r=i.c;return{a:D(tv,Gm,i.a),b:a+" "+c,c:D(yt,o,r)};default:i=n.a,t=n.b,a="max-width-"+Dt(i),o=_(ev,a,"max-width",Dt(i)+"px"),t=hv(t),c=t.b,r=t.c;return{a:D(tv,Gm,t.a),b:a+" "+c,c:D(yt,o,r)}}},xv=Mi(27),$v=d(function(n,e){if(g(n,xv)){if(3!==e.$)return!1;switch(e.c){case"0px":case"1px":case"2px":case"3px":case"4px":case"5px":case"6px":return!0;default:return!1}}else switch(e.$){case 2:var r=e.a;return 8<=r&&r<=32;case 7:var t=e.b,a=e.c,r=e.e;return g(t,e.d)&&g(t,a)&&g(t,r)&&0<=t&&t<=24;default:return!1}}),yv=Mi(6),wv=Mi(30),Cv=Mi(29),Pv=i(function(n,e,r,t,a,o,i,c){n:for(;;){if(!c.b){var u=Dl(t);return 1===u.$?{aP:D(yt,Zb(n),o),aS:i,aY:r,a_:e,js:a}:{aP:D(yt,Zb(n+" "+u.a),o),aS:i,aY:r,a_:e,js:D(yt,{$:10,a:t},a)}}var l=c.a,f=c.b;switch(l.$){case 0:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 3:var s=l.b;if(D(Ym,d=l.a,r)){n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}n=p=s+" "+n,e=m=e,r=v=D(tv,d,r),t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 1:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=D(yt,l.a,o),i=i,c=f;continue n;case 4:s=l.b;if(D(Ym,d=l.a,r)){n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}if(D($v,d,s)){n=p=tp(s)+" "+n,e=m=e,r=v=D(tv,d,r),t=h=t,a=x=a,o=o,i=i,c=f;continue n}n=p=tp(s)+" "+n,e=m=e,r=v=D(tv,d,r),t=h=t,a=x=D(yt,s,a),o=o,i=i,c=f;continue n;case 10:var d,g=l.b;n=p=n,e=m=e,r=v=D(tv,d=l.a,r),t=h=D(sv,t,g),a=x=a,o=o,i=i,c=f;continue n;case 7:var b=l.a;if(D(Ym,yv,r)){n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}switch(b.$){case 0:var p=_b+(" width-px-"+Dt(P=b.a))+" "+n,m=e,v=D(tv,yv,r),h=t,x=D(yt,_(ev,"width-px-"+Dt(P),"width",Dt(P)+"px"),a);n=p,e=m,r=v,t=h,a=x,o=o,i=i,c=f;continue n;case 1:n=p=n+" "+Db,e=m=e,r=v=D(tv,vv,D(tv,yv,r)),t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 2:if(1===(w=b.a)){n=p=n+" "+Sb,e=m=e,r=v=D(tv,Xm,D(tv,yv,r)),t=h=t,a=x=a,o=o,i=i,c=f;continue n}p=n+(" "+jb+(" width-fill-"+Dt(w))),m=e,v=D(tv,Xm,D(tv,yv,r)),h=t,x=D(yt,_(ev,eb+("."+Lb+(" > .width-fill-"+Dt(w))),"flex-grow",Dt(1e5*w)),a);n=p,e=m,r=v,t=h,a=x,o=o,i=i,c=f;continue n;default:var $=hv(b),y=$.c,p=n+" "+$.b,m=e,v=D(bv,$.a,D(tv,yv,r)),h=t,x=S(y,a);n=p,e=m,r=v,t=h,a=x,o=o,i=i,c=f;continue n}case 8:var w,C=l.a;if(D(Ym,dv,r)){n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}switch(C.$){case 0:var P,T=Dt(P=C.a)+"px",M="height-px-"+T;n=p=pb+" "+M+" "+n,e=m=e,r=v=D(tv,dv,r),t=h=t,a=x=D(yt,_(ev,M,"height ",T),a),o=o,i=i,c=f;continue n;case 1:n=p=bb+" "+n,e=m=e,r=v=D(tv,gv,D(tv,dv,r)),t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 2:if(1===(w=C.a)){n=p=mb+" "+n,e=m=e,r=v=D(tv,Hm,D(tv,dv,r)),t=h=t,a=x=a,o=o,i=i,c=f;continue n}p=n+(" "+vb+(" height-fill-"+Dt(w))),m=e,v=D(tv,Hm,D(tv,dv,r)),h=t,x=D(yt,_(ev,eb+("."+ab+(" > .height-fill-"+Dt(w))),"flex-grow",Dt(1e5*w)),a);n=p,e=m,r=v,t=h,a=x,o=o,i=i,c=f;continue n;default:T=mv(C),y=T.c,p=n+" "+T.b,m=e,v=D(bv,T.a,D(tv,dv,r)),h=t,x=S(y,a);n=p,e=m,r=v,t=h,a=x,o=o,i=i,c=f;continue n}case 2:var L=l.a;switch(L.$){case 0:n=p=n,e=m=D(uv,"main",e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 1:n=p=n,e=m=D(uv,"nav",e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 2:n=p=n,e=m=D(uv,"footer",e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 3:n=p=n,e=m=D(uv,"aside",e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 4:var A=L.a;if(1<A){if(A<7){n=p=n,e=m=D(uv,"h"+Dt(A),e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}n=p=n,e=m=D(uv,"h6",e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}n=p=n,e=m=D(uv,"h1",e),r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 9:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n;case 8:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=D(yt,D(lv,"role","button"),o),i=i,c=f;continue n;case 5:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=D(yt,D(lv,"aria-label",L.a),o),i=i,c=f;continue n;case 6:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=D(yt,D(lv,"aria-live","polite"),o),i=i,c=f;continue n;default:n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=D(yt,D(lv,"aria-live","assertive"),o),i=i,c=f;continue n}case 9:var g=l.a,B=l.b,y=function(){switch(B.$){case 3:return a;case 2:return a;case 0:return a;default:return S(a,B.a.js)}}();n=p=n,e=m=e,r=v=r,t=h=t,a=x=y,o=o,i=_(iv,g,B,i),c=f;continue n;case 6:var z=l.a;if(D(Ym,wv,r)){n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}n=p=function(n){switch(n){case 0:return Zg+" "+Qg;case 2:return Zg+" "+Jg;default:return Zg+" "+Ug}}(z)+" "+n,e=m=e,r=v=function(n){switch(z){case 1:return D(tv,Qb,n);case 2:return D(tv,Xb,n);default:return n}}(D(tv,wv,r)),t=h=t,a=x=a,o=o,i=i,c=f;continue n;default:var N=l.a;if(D(Ym,Cv,r)){n=p=n,e=m=e,r=v=r,t=h=t,a=x=a,o=o,i=i,c=f;continue n}n=p=function(n){switch(n){case 0:return nb+" "+Kg;case 2:return nb+" "+Hg;default:return nb+" "+Yg}}(N)+" "+n,e=m=e,r=v=function(n){switch(N){case 1:return D(tv,Jb,n);case 2:return D(tv,Gb,n);default:return n}}(D(tv,Cv,r)),t=h=t,a=x=a,o=o,i=i,c=f;continue n}}}),Tv={$:0},Mv=a(function(n,e,r,t){return _(nv,n,t,c(Pv,function(n){switch(n){case 0:return Hb;case 1:return Fb;case 2:return Ub;case 3:return Rb;case 4:return Ib;default:return Eb}}(n),e,pv,Tv,T,T,qb,Et(r)))}),Lv=C=function(n){return{$:8,a:n}},ln=function(n){return{$:1,a:n}},Av={$:1},Bv=C=function(n){return{$:7,a:n}},zv=d(function(n,e){return B(Mv,1,kb,D(yt,Vp(sb+" "+lb),D(yt,Lv(Av),D(yt,Bv(Av),n))),{$:0,a:e})}),Nv={$:5,a:2},Dv={$:5,a:0},_v={$:6,a:1},Sv=d(function(n,e){return B(Mv,2,kb,D(yt,Bv(Av),D(yt,Lv(Av),n)),{$:0,a:N([e])})}),jv=ln,Vv=xe,kv=d(function(n,e){return D(Sv,n?T:N([jv(D(Vv,"display","none"))]),e)}),xe=function(n){return{$:2,a:n}},qv={$:2,a:1},Fv=function(n){return{$:1,a:n}},Rv={$:3},Ev=Rv,Iv=r(function(n,e,r,t,a){return{$:7,a:n,b:e,c:r,d:t,e:a}}),Hv=Mi(2),Uv=function(n){return{$:0,a:n}},Yv=d(function(n,e){return B(Mv,0,kb,D(yt,Vp(lb+" "+ub),D(yt,Bv(Av),D(yt,Lv(Av),n))),{$:0,a:e})}),Ov={$:0},Wv=Mi(32),Gv={$:2,a:{$:6}},Xv=P(function(n,e,r){if(1===e.$)return B(Mv,1,{$:1,a:"label"},n,{$:0,a:N([r])});var t=e.a,a=B(Mv,2,kb,e.b,{$:0,a:N([e.c])});switch(t){case 2:return B(Mv,1,{$:1,a:"label"},D(yt,Vp(xb),n),{$:0,a:N([a,r])});case 3:return B(Mv,1,{$:1,a:"label"},D(yt,Vp(xb),n),{$:0,a:N([r,a])});case 0:return B(Mv,0,{$:1,a:"label"},D(yt,Vp(xb),n),{$:0,a:N([r,a])});default:return B(Mv,0,{$:1,a:"label"},D(yt,Vp(xb),n),{$:0,a:N([a,r])})}}),Qv=lv,Jv=d(function(n,e){return{$:9,a:n,b:e}}),Kv=d(function(n,e){return 3===e.$?Ov:D(Jv,n,e)}),Zv=Mi(31),nh=d(function(n,e){return D(Xo,e,_(za,d(function(n,e){if(e.$){if(4!==n.$||5!==n.b.$)return mt;n=n.b;return pt({a:n.b,b:n.c})}return pt(e.a)}),mt,n))}),eh=Mi(33),rh=Kb("max"),th=Kb("min"),ah=he,oh=d(function(n,e){return D(ah,n,{$:1,a:e})}),ih=D(Wc,N(["target","value"]),Xc),ch=P(function(n,e,r){return{$:5,a:n,b:e,c:r}}),uh=Mi(3),lh=d(function(n,e){return"spacing-"+Dt(n)+("-"+Dt(e))}),fh=d(function(n,e){return D(Fg,uh,_(ch,D(lh,n,e),n,e))}),sh=Kb("type"),dh=Kb("value"),gh={$:5,a:1},bh=xe,ph=d(function(n,e){return{$:3,a:n,b:e}}),mh=d(function(n,e){return{$:10,a:n,b:e}}),vh=ve,hh=d(function(r,n){switch(n.$){case 1:var t=n.a;return{$:1,a:{h9:d(function(n,e){return D(vh,r,D(t.h9,n,e))}),js:t.js}};case 0:var e=n.a;return{$:0,a:D(cc,vh(r),e)};case 2:return{$:2,a:n.a};default:return Rv}}),xh=Te,$h=d(function(n,e){switch(e.$){case 0:return Ov;case 2:return{$:2,a:e.a};case 6:return{$:6,a:e.a};case 5:return{$:5,a:e.a};case 7:return{$:7,a:e.a};case 8:return{$:8,a:e.a};case 3:return D(ph,e.a,e.b);case 4:return D(Fg,e.a,e.b);case 9:return D(Jv,e.a,D(hh,n,e.b));case 1:return{$:1,a:D(xh,n,e.a)};default:return D(mh,e.a,e.b)}}),yh=P(function(n,e,r){return D(Yv,N([Bv(qv),Lv(D(Xo,qv,r)),gh]),N([D(Sv,N([Bv(bh(Eg(1e4*n)))]),Ev),D(Sv,D(yt,gh,D(Na,$h(La),e)),Ev),D(Sv,N([Bv(bh(Eg(1e4*au(1-n))))]),Ev)]))}),wh=P(function(n,e,r){return D(zv,N([Lv(qv),Bv(D(Xo,qv,r)),_v]),N([D(Sv,N([Lv(bh(Eg(1e4*au(1-n))))]),Ev),D(Sv,D(yt,_v,D(Na,$h(La),e)),Ev),D(Sv,N([Lv(bh(Eg(1e4*n)))]),Ev)]))}),Ch=d(function(n,e){var r=Ep(n),t=Rp(n),a=function(){var n={a:r,b:t};n:for(;;){if(1===n.a.$){if(1!==n.b.$)break n;return!1}if(n.a.a.$||n.b.$)break n;switch(n.b.a.$){case 0:return 0<s(n.b.a.a,n.a.a.a);case 2:return!0;default:break n}}return!1}(),o=(e.jX-e.iC)/(e.iz-e.iC),i=e.jJ,c=Rp(i),u=1===c.$?"20px":c.a.$?"100%":Dt(c.a.a)+"px",l=Ep(i),c=1===l.$?"20px":l.a.$?"100%":Dt(l.a.a)+"px",l="thmb-"+c+"-"+u,c=N([D(up,"width",c),D(up,"height",u)]),u=D(nh,n,{a:5,b:5});return _(Xv,N([1===e.dG.$?Ov:D(fh,u.a,u.b),Gv,Bv(1===r.$?qv:r.a.$?r.a:Av),Lv(1!==t.$&&t.a.$?t.a:Av)]),e.dG,D(Yv,N([Bv(D(Xo,qv,r)),Lv(D(Xo,Uv(20),t))]),N([B(Mv,2,{$:1,a:"input"},N([Ip(e.dG),D(Fg,Wv,D(lp,'input[type="range"].'+l+"::-moz-range-thumb",c)),D(Fg,eh,D(lp,'input[type="range"].'+l+"::-webkit-slider-thumb",c)),D(Fg,Zv,D(lp,'input[type="range"].'+l+"::-ms-thumb",c)),{$:1,a:Zb(l+" ui-slide-bar focusable-parent")},{$:1,a:D(oh,"input",D(la,Hp,D(la,function(n){n=Lc(n);return e.fK(1===n.$?0:n.a)},ih)))},{$:1,a:sh("range")},{$:1,a:(l=1===(l=e.jp).$?"any":fp(l.a),D(Kb,"step",l))},{$:1,a:th(fp(e.iC))},{$:1,a:rh(fp(e.iz))},{$:1,a:dh(fp(e.jX))},a?{$:1,a:D(Qv,"orient","vertical")}:Ov,Bv(a?D(Xo,Uv(20),t):D(Xo,qv,r)),Lv(a?D(Xo,qv,r):D(Xo,Uv(20),t))]),{$:0,a:T}),D(Sv,D(yt,Bv(D(Xo,qv,r)),D(yt,Lv(D(Xo,Uv(20),t)),S(n,N([Fp(a?_(wh,o,D(yt,{$:1,a:Zb("focusable-thumb")},i),r):_(yh,o,D(yt,{$:1,a:Zb("focusable-thumb")},i),t))])))),Ev)])))}),Ph=Mi(28),ve=P(function(n,e,r){return B(Vg,n,e,r,1)}),Th=Mi(17),Te=gt,Mh=r(function(n,e,r,t,a){return{$:6,a:n,b:e,c:r,d:t,e:a}}),Lh=Te(N([Bv(Uv(16)),Lv(Uv(16)),Yp(4),Op(1),Up(_(ve,.5,.5,.5)),Nl(_(ve,1,1,1))])),Ah=_(hi,246,229,141),ve=function(n){return{$:2,a:n}},Bh=r(function(n,e,r,t,a){return{cu:r,e4:e,fP:n,cW:t,c7:a}}),zh=nn,Nh=P(function(n,e,r){return 0<n?_(Nh,n>>1,S(e,e),1&n?S(r,e):r):r}),Dh=d(function(n,e){return _(Nh,n,e,"")}),_h=d(function(n,e){var r=pa(e),r=s(r,n)<0?au(n-r):0;return S(e,D(Dh,r,"0"))}),Sh=d(function(n,e){return n<1?e:_(ma,0,-n,e)}),jh=d(function(n,e){return n<1?"":_(ma,-n,pa(e),e)}),Vh=function(n){return"0"!==D(jh,1,n)?n:Vh(D(Sh,1,n))},kh=d(function(n,e){var r=n.cu;switch(r.$){case 1:return Vh(e);case 2:return e;default:return D(_h,r.a,e)}}),qh=en,Fh=d(function(n,e){return S(n&&D(Lm,function(n){return"0"!==n&&"."!==n},_(qh,yt,T,e))?"-":"",e)}),Rh=Z,Eh=function(n){return n<0||1114111<n?"�":65535<n?String.fromCharCode(55296+Math.floor((n-=65536)/1024),n%1024+56320):String.fromCharCode(n)},Ih=function(n){var e=n.a,r=n.b;if("9"===e){n=It(r);return 1===n.$?"01":D(Rh,"0",Ih(n.a))}e=Rt(e);return 48<=e&&e<57?D(Rh,Eh(e+1),r):"0"},Hh=function(n){return n===1/0||n===-1/0},Uh=P(function(n,e,r){return S(r,D(Dh,n-pa(r),Qp(e)))}),Yh=function(n){for(var e=n.length,r=Array(e),t=0;t<e;){var a=n.charCodeAt(t);a<55296||56319<a?r[e-t]=n[t]:(r[e-t]=n[t+1],r[e-++t]=n[t-1]),t++}return r.join("")},Oh=P(function(n,e,r){if(Hh(r)||ld(r))return fp(r);var t=r<0,a=Jp(function(n){var e=D(St,"e",fp(au(n)));if(e.b){if(e.b.b){var r=e.a,t=e.b.a,a=D(Xo,0,$a(D(Ta,"+",t)?D(va,1,t):t)),t=Jp(r),t=S(t.a,t.b),t=a<0?D(Xo,"0",D(Oo,function(n){return n.a+"."+n.b},D(Oo,sp(Qp),It(S(D(Dh,au(a),"0"),t))))):_(Uh,a+1,"0",t);return S(n<0?"-":"",t)}return S(n<0?"-":"",r=e.a)}return""}(au(r))),o=a.a,i=a.b,c=pa(o)+e,r=S(D(Dh,1-c,"0"),_(Uh,c,"0",S(o,i))),a=pa(r),c=D(ea,1,c),a=D(n,t,_(ma,c,a,r)),r=_(ma,0,c,r),a=a?Yh(D(Xo,"1",D(Oo,Ih,It(Yh(r))))):r,r=pa(a),e="0"===a?a:0<e?s(e,pa(i))<0?_(ma,0,r-e,a)+"."+_(ma,r-e,r,a):S(o+".",_(Uh,e,"0",i)):S(a,D(Dh,au(e),"0"));return D(Fh,t,e)})(d(function(n,e){var r=It(e);if(1===r.$)return!1;if("5"!==r.a.a)return 53<(e=Rt(r.a.a))&&n||53<=e&&!n;if(""===r.a.b)return!n;return!0})),Wh=d(function(e,n){var r=function(){var n=e.cu;switch(n.$){case 1:return Oh(n.a);case 0:return fp;default:return Oh(n.a)}}(),r=D(St,".",r(n)),n=(n=function(n){if(n.b)return pt(n.b);return mt}(r)).$?"":D(Xo,"",lo(n.a));return{a:D(Xo,"",lo(r)),b:n}}),Gh=d(function(n,e){return(n?function(n){var e=3<pa(n)?D(jh,3,n):n,r=function(n){return 2<pa(n)?D(yt,D(jh,2,n),r(D(Sh,2,n))):pa(n)?N([n]):T};return Et(D(yt,e,r(D(Sh,3,n))))}:function(n){var e=function(n){return 3<pa(n)?D(yt,D(jh,3,n),e(D(Sh,3,n))):N([n])};return Et(e(n))})(D(zh,lt,e))}),Xh=d(function(n,e){var r=D(Wh,n,e),t=z(Bh,e,D(Gh,n.c8,D(zh,lt,r.a)),D(kh,n,r.b),"","");switch(Xp(t)){case 2:return $(t,{cW:n.cM,c7:n.dV});case 0:return $(t,{cW:n.fV,c7:n.fW});default:return $(t,{cW:n.gD,c7:n.gE})}}),Qh=d(function(n,e){return""===e?"":S(n.aV,e)}),Jh=d(function(n,e){var r=Qh(n),n=D(_t,n.da,e.e4),r=r(e.cu);return Ru(N([e.cW,n,r,e.c7]))}),Kh=d(function(n,e){return D(Jh,n,D(Xh,n,e))}),Zh=$({aV:".",cu:{$:0,a:0},cM:"−",dV:"",fV:"",fW:"",c8:0,da:"",gD:"",gE:""},{cu:{$:2,a:2},da:","}),Z=d(function(n,e){return n?Kp(Gp(e)/(12*.0254*5280))+" miles":Kp(Gp(e))+"m"}),nx=N([{a:{$:2,a:"Points"},b:D(yo,iu,D(yo,function(n){return n.c5},D(yo,Dt,ve)))},{a:{$:2,a:"Length"},b:D(yo,iu,D(yo,function(n){return n.b8},D(yo,Z(!1),ve)))},{a:{$:2,a:"Ascent"},b:D(yo,iu,D(yo,function(n){return n.bs},D(yo,Z(!1),ve)))},{a:{$:2,a:"Descent"},b:D(yo,iu,D(yo,function(n){return n.bt},D(yo,Z(!1),ve)))},{a:{$:2,a:"Climb distance"},b:D(yo,iu,D(yo,function(n){return n.bD},D(yo,Z(!1),ve)))},{a:{$:2,a:"Descent distance"},b:D(yo,iu,D(yo,function(n){return n.bE},D(yo,Z(!1),ve)))},{a:{$:2,a:"Steepest"},b:D(yo,iu,D(yo,function(n){return n.b_},D(yo,fp,ve)))}]),ex={$:6,a:0},rx={$:6,a:2},tx={$:8},ax=Sn,ox=d(function(n,e){return D($e,n,ax(e))})("disabled"),ix=d(function(n,e){return D(ah,n,{$:0,a:e})}),cx=D(cc,ln,function(n){return D(ix,"click",sa(n))}),ux=d(function(n,e){return D(ah,n,{$:2,a:e})}),ve=Mi(21),lx=D(ph,ve,H),fx=d(function(n,e){var r=e.iK,e=e.dG;return B(Mv,2,kb,D(yt,Bv(Av),D(yt,Lv(Av),D(yt,Vp(cb+" "+ub+" "+Ab+" "+yb),D(yt,lx,D(yt,function(n){return D(Lm,Zp,n)?Ov:{$:1,a:Zb("focusable")}}(n),D(yt,{$:2,a:tx},D(yt,{$:1,a:em(0)},function(){if(1===r.$)return D(yt,{$:1,a:ox(!0)},n);var e=r.a;return D(yt,cx(e),D(yt,nm(function(n){return g(n,"Enter")||g(n," ")?pt(e):mt}),n))}()))))))),{$:0,a:N([e])})}),sx=Kb("id"),dx=Mi(26),gx=Mi(25),bx=_(hi,164,176,190),px=Mi(4),mx=d(function(n){N([Dv,rx,tm(100),am(10),Nl(kg),om(40),qp(6),Wp(8)]),N([D(fx,T,{dG:{$:2,a:"x"},iK:mt})]);var e=n.j_,n=e.a,e=e.b;return D(Yv,N([Wp(0),qp(0)]),N([D(Sv,N([Bv(Uv(rm(n))),Lv(Uv(rm(e))),ex,Dv,Op(2),Up(bx),jv(sx("map"))]),Ev)]))}),vx={$:4},hx=function(n){return{$:0,a:n}},xx={$:3},$x=a(function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}}),yx=function(n){return{$:1,a:n}},wx=_p,Cx=function(n){return{$:2,a:n}},Px=P(function(n,e,r){return _(Xr,n,e,r)}),Tx=B(cg,1,1,1,1),Mx=P(function(n,e,r){return D(Na,function(n){return D(n,e,r)},n)}),Lx=P(function(n,e,r){return{$:0,a:n,b:e,c:r}}),Ax=d(function(n,e){var r=e.gA,e=e.gB;return _(Lx,n*r/e,n,n*(1-r-e)/e)}),Bx=d(function(n,e){return _(od,3.2406*(n=(r=D(Ax,n,e)).a)-1.5372*(e=r.b)-.4986*(r=r.c),-.9689*n+1.8758*e+.0415*r,.0557*n-.204*e+1.057*r);var r}),zx=d(function(n,e){return{e6:g(n.e6,e.e6),w:n.w*e.w+n.x*e.z+n.y*e.C,x:n.w*e.x+n.x*e.A+n.y*e.D,y:n.w*e.y+n.x*e.B+n.y*e.E,z:n.z*e.w+n.A*e.z+n.B*e.C,A:n.z*e.x+n.A*e.A+n.B*e.D,B:n.z*e.y+n.A*e.B+n.B*e.E,C:n.C*e.w+n.D*e.z+n.E*e.C,D:n.C*e.x+n.D*e.A+n.E*e.D,E:n.C*e.y+n.D*e.B+n.E*e.E,N:e.N+(n.N*e.w+n.O*e.z+n.P*e.C)*e.c1,O:e.O+(n.N*e.x+n.O*e.A+n.P*e.D)*e.c1,P:e.P+(n.N*e.y+n.O*e.B+n.P*e.E)*e.c1,c1:n.c1*e.c1}}),Nx=r(function(n,e,r,t,a){return b(a,n,B(cg,t.c1,t.c1,t.c1,t.e6?1:-1),function(n){return Zd({ff:n.w,fg:n.z,fh:n.C,fi:n.N,fj:n.x,fk:n.A,fl:n.D,fm:n.O,fn:n.y,fo:n.B,fp:n.E,fq:n.P,fr:0,fs:0,ft:0,fu:1})}(t),t.e6,e,r)}),Dx=t(function(n,e,r,t,a,o){n:for(;;)switch(a.$){case 0:return o;case 5:var i=a.b;n=n,e=e,r=r,t=D(zx,a.a,t),a=i,o=o;continue n;case 1:return{U:D(yt,z(Nx,n,e,r,t,a.b),o.U),ae:o.ae,af:o.af};case 3:return{U:o.U,ae:D(yt,z(Nx,n,e,r,t,a.b),o.ae),af:o.af};case 2:return{U:o.U,ae:o.ae,af:D(yt,z(Nx,n,e,r,t,a.a),o.af)};default:i=a.a;return _(jt,B(Dx,n,e,r,t),o,i)}}),_x=a(function(n,e,r,t){return{$:4,a:n,b:e,c:r,d:t}}),Sx=a(function(n,e,r,t){return{$:1,a:n,b:e,c:r,d:t}}),H=d(function(n,e){return{$:6,a:n,b:e}}),jx=N([B(Sx,518,(ve={ah:1,ai:0,an:!1}).an,ve.ai,ve.ah),B(_x,!1,!1,!1,!1),D(H,0,1)]),Vx={src:"\n        precision lowp float;\n\n        void main() {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n    ",attributes:{},uniforms:{}},kx=dr({eK:1,e0:0,fF:5})(N([{cV:D(bg,-1,-1)},{cV:D(bg,1,-1)},{cV:D(bg,-1,1)},{cV:D(bg,1,1)}])),qx={src:"\n        precision lowp float;\n\n        attribute vec2 position;\n\n        void main() {\n            gl_Position = vec4(position, 0.0, 1.0);\n        }\n    ",attributes:{position:"cV"},uniforms:{}},Fx=gm({bI:7681,dP:0,ea:8,b0:519,es:15,cc:7681,cd:7681}),Rx=P(function(n,e,r){return Ka(N([_(Mx,n,r,jx),N([bm(e),Fx])]))}),Ex=d(function(n,e){return Ka(D(Ft,Rx(n),e))}),dr=function(n){return B(Sx,513,n.an,n.ai,n.ah)}({ah:1,ai:0,an:!0}),Ix=P(function(n,e,r){return{$:0,a:n,b:e,c:r}}),ve=d(function(n,e){return _(Ix,32774,n,e)}),Hx=(wm=(H={ce:0,gR:D(ve,1,771),cg:0,cn:D(ve,770,771),cx:0,cZ:0}).cZ,Cm=H.cx,Pm=H.cg,Tm=H.ce,ve=H.cn,H=H.gR,D(d(function(n,e){var r=n.c,t=e.a,a=e.b,e=e.c;return function(l){return function(u){return function(c){return function(i){return function(o){return function(a){return function(t){return function(r){return function(e){return function(n){return{$:0,a:l,b:u,c:c,d:i,e:o,f:a,g:t,h:r,i:e,j:n}}}}}}}}}}}(n.a)(n.b)(r)(t)(a)(e)(wm)(Cm)(Pm)(Tm)}),ve,H)),Ux=N([dr,Hx]),Yx=d(function(n,e){var r=n.ev,t=n.eu,n=n.et;return{gA:e.gA*n.gA+e.gB*n.gB+e.dd*n.dd,gB:e.gA*t.gA+e.gB*t.gB+e.dd*t.dd,dd:e.gA*r.gA+e.gB*r.gB+e.dd*r.dd}}),Ox=d(function(n,e){var r=n.d_,t=e.gA-r.gA,a=e.gB-r.gB,o=e.dd-r.dd,e=n.ev,r=n.eu,n=n.et;return{gA:t*n.gA+a*n.gB+o*n.dd,gB:t*r.gA+a*r.gB+o*r.dd,dd:t*e.gA+a*e.gB+o*e.dd}}),Wx=d(function(n,e){return{d_:D(Ox,n,Wu(e)),et:D(Yx,n,Gu(e)),eu:D(Yx,n,Xu(e)),ev:D(Yx,n,Qu(e))}}),Gx=P(function(n,e,r){return{gA:n,gB:e,dd:r}}),Xx=a(function(n,e,r,t){var a=r.hi,o=2*r.h4*e,i=2*r.h3*e,c=2*r.h2*e,u=pm(Qu(n)),l=au(c*u.gA)+au(i*u.gB)+au(o*u.dd),r=pm(Xu(n)),u=au(c*r.gA)+au(i*r.gB)+au(o*r.dd),r=pm(Gu(n)),r=au(c*r.gA)+au(i*r.gB)+au(o*r.dd),e=D(mf,{a:r,b:u,c:l},D(Ox,n,_(Gx,a.gA*e,a.gB*e,a.dd*e)));return pt(t.$?e:D(uf,t.a,e))}),Qx=a(function(n,e,r,t){n:for(;;){if(!t.b)return r;var a=t.a,o=t.b;switch(a.$){case 0:n=c=n,e=u=e,r=l=r,t=o;continue n;case 1:var i=B(Xx,n,e,a.a,r);n=c=n,e=u=e,r=l=i,t=o;continue n;case 2:n=c=n,e=u=e,r=l=r,t=o;continue n;case 3:i=B(Xx,n,e,a.a,r);n=c=n,e=u=e,r=l=i,t=o;continue n;case 4:var c=n,u=e,l=B(Qx,n,e,r,a.a);n=c,e=u,r=l,t=o;continue n;default:var f=a.a,s=a.b,d=D(Wx,function(n){return{d_:{gA:n.N,gB:n.O,dd:n.P},et:{gA:n.w,gB:n.x,dd:n.y},eu:{gA:n.z,gB:n.A,dd:n.B},ev:{gA:n.C,gB:n.D,dd:n.E}}}(f),n),f=e*f.c1;n=c=n,e=u=e,r=l=B(Qx,d,f,r,N([s])),t=o;continue n}}}),Jx={e6:!0,w:1,x:0,y:0,z:0,A:1,B:0,C:0,D:0,E:1,N:0,O:0,P:0,c1:1},Kx=gm({bI:7681,dP:0,ea:8,b0:519,es:255,cc:7681,cd:7681}),Zx={cg:0,hh:!1,cx:0,d7:0,cZ:0,el:0,gA:0,gB:0,dd:0},n$=d(function(n,e){return Zd({ff:n.gA,fg:n.cZ,fh:e.gA,fi:e.cZ,fj:n.gB,fk:n.cx,fl:e.gB,fm:e.cx,fn:n.dd,fo:n.cg,fp:e.dd,fq:e.cg,fr:n.el,fs:n.d7,ft:e.el,fu:e.d7})}),e$={a:{bO:D(n$,Zx,Zx),cH:D(n$,Zx,Zx),cI:D(n$,Zx,Zx),cJ:D(n$,Zx,Zx)},b:B(cg,0,0,0,0)},r$=N([mm({ah:1,ai:0,an:!0}),dm({bI:7680,dP:240,ea:0,b0:514,es:0,cc:7680,cd:7680}),Hx]),t$=d(function(n,e){var r=e.gV,t=ou(e.iG),a=ou(e.hU),e=n.d8;if(e.$){n=e.a;return Hh(a)?Zd({ff:2/(r*n),fg:0,fh:0,fi:0,fj:0,fk:2/n,fl:0,fm:0,fn:0,fo:0,fp:0,fq:-1,fr:0,fs:0,ft:0,fu:1}):Zd({ff:2/(r*n),fg:0,fh:0,fi:0,fj:0,fk:2/n,fl:0,fm:0,fn:0,fo:0,fp:-2/(a-t),fq:-(a+t)/(a-t),fr:0,fs:0,ft:0,fu:1})}e=e.a;return Hh(a)?Zd({ff:1/(r*e),fg:0,fh:0,fi:0,fj:0,fk:1/e,fl:0,fm:0,fn:0,fo:0,fp:-1,fq:-2*t,fr:0,fs:0,ft:-1,fu:0}):Zd({ff:1/(r*e),fg:0,fh:0,fi:0,fj:0,fk:1/e,fl:0,fm:0,fn:0,fo:0,fp:-(a+t)/(a-t),fq:-2*a*t/(a-t),fr:0,fs:0,ft:-1,fu:0})}),a$=d(function(n,e){return 1==(1&n>>e)?0:1}),o$=P(function(r,t,n){return Ka(D(Na,function(n){var e=n<<4;return _(Mx,r,{a:t,b:B(cg,D(a$,n,0),D(a$,n,1),D(a$,n,2),D(a$,n,3))},function(n){return N([mm({ah:1,ai:0,an:!0}),dm({bI:7680,dP:240,ea:n,b0:514,es:0,cc:7680,cd:7680}),Hx])}(e))},D(qt,1,D(fs,2,n)-1)))}),i$=function(n){return{ff:n[0],fj:n[1],fn:n[2],fr:n[3],fg:n[4],fk:n[5],fo:n[6],fs:n[7],fh:n[8],fl:n[9],fp:n[10],ft:n[11],fi:n[12],fm:n[13],fq:n[14],fu:n[15]}},c$={d_:Cs,et:Of,eu:br,ev:Wf},u$=d(function(n,e){var r,t;return t=hl(Wu(r=D(Wx,e,n))),e=pm(Qu(r)),n=pm(Xu(r)),r=pm(Gu(r)),Zd({ff:r.gA,fg:n.gA,fh:e.gA,fi:t.gA,fj:r.gB,fk:n.gB,fl:e.gB,fm:t.gB,fn:r.dd,fo:n.dd,fp:e.dd,fq:t.dd,fr:0,fs:0,ft:0,fu:1})}),l$=d(function(e,n){var r=N([yx(1),Cx(0),hx(!0),B($x,0,0,0,0)]),t=function(){var n=e.a8;switch(n.$){case 0:return{a:r,b:"0",c:1};case 1:return{a:D(yt,xx,r),b:"1",c:1};default:return{a:r,b:"0",c:n.a}}}(),a=t.a,o=t.b,i=t.c,c=e.hG,u=c.a,l=sm(c.b),f=D(Vv,"height",Dt(l)+"px"),t=sm(u),s=t/l,c=D(Ui,function(n){return vm({gV:s,hb:e.hb,ho:e.ho,hP:n.hP,aD:n.aD,aF:n.aF,gg:i,aK:n.aK,aN:n.aN})},n),u=D(Vv,"width",Dt(t)+"px"),n=function(n){function e(n){return Eg(1e4*n)/100}var r=n.b,t=n.c,a=n.d;return Ru(N(["rgba(",fp(e(n.a)),"%,",fp(e(r)),"%,",fp(e(t)),"%,",fp(Eg(1e3*a)/1e3),")"]))}(e.gZ);return _(wx,"div",N([D(Vv,"padding","0px"),u,f]),N([{a:o,b:_(Px,a,N([(t=Eg(t*i),D(ye,"width",Dt(t))),function(n){return D(ye,"height",Dt(n))}(Eg(l*i)),u,f,D(Vv,"display","block"),D(Vv,"background-color",n)]),c)}]))}),f$={gA:.31271,gB:.32902},s$={$:1},d$={$:0},g$=d(function(n,e){return 0<s(e,n)}),b$=D(cc,Mr,vt),p$=B(rd,114/255,159/255,207/255,1),Of={fX:!0,gd:!1},m$=d(function(n,e){return D(ah,n,{$:3,a:e})}),br=t(function(n,e,r,t,a,o){return{ha:e,hl:r,is:n,dY:t,iS:a,i6:o}}),Wf=D(la,function(n){switch(n){case 0:return 1;case 1:return 2;case 2:return 3;case 3:return 4;case 4:return 5;default:return 0}},D(Oc,"button",ac)),Mr=_(fa,d(function(n,e){return{a:n,b:e}}),D(Oc,"clientX",Gc),D(Oc,"clientY",Gc)),dn=dn,v$=f(wn,br,B(Mf,P(function(n,e,r){return{gS:n,hw:e,je:r}}),D(Oc,"altKey",dn),D(Oc,"ctrlKey",dn),D(Oc,"shiftKey",dn)),Wf,Mr,_(fa,d(function(n,e){return{a:n,b:e}}),D(Oc,"offsetX",Gc),D(Oc,"offsetY",Gc)),_(fa,d(function(n,e){return{a:n,b:e}}),D(Oc,"pageX",Gc),D(Oc,"pageY",Gc)),_(fa,d(function(n,e){return{a:n,b:e}}),D(Oc,"screenX",Gc),D(Oc,"screenY",Gc))),h$=P(function(n,e,r){return D(m$,n,D(la,function(n){return{iB:r(n),fX:e.fX,gd:e.gd}},v$))}),x$=D(h$,"click",Of),$$=D(h$,"dblclick",Of),y$=D(h$,"mousedown",Of),w$=D(h$,"mousemove",Of),C$=D(h$,"mouseup",Of),wn=P(function(n,e,r){return{hB:r,hC:e,iD:n}}),br=D(la,function(n){switch(n){case 1:return 1;case 2:return 2;default:return 0}},ac),P$=B(Mf,wn,v$,D(Oc,"deltaY",Gc),D(Oc,"deltaMode",br)),T$=d(function(e,r){return D(m$,"wheel",D(la,function(n){return{iB:r(n),fX:e.fX,gd:e.gd}},P$))})({fX:!0,gd:!1}),M$={$:9},L$={$:7},A$={$:8},dn=ye("d"),Wf=d(function(n,e){return{T:function(n){return{cl:pt("feather feather-"+n),gb:24,bX:"",c6:2,dc:"0 0 24 24"}}(n),jl:e}}),Mr=z$("http://www.w3.org/2000/svg"),B$=D(Wf,"maximize",N([D(Mr("path"),N([dn("M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3")]),T)])),Of=Mr("line"),wn=ye("x1"),br=ye("x2"),z$=ye("y1"),dn=ye("y2"),N$=D(Wf,"minus",N([D(Of,N([wn("5"),z$("12"),br("19"),dn("12")]),T)])),D$=D(Wf,"plus",N([D(Of,N([wn("12"),z$("5"),br("12"),dn("19")]),T),D(Of,N([wn("5"),z$("12"),br("19"),dn("12")]),T)])),_$={fX:!1,gd:!0},S$=ye("class"),j$=ye("fill"),V$=ye("height"),k$=vh,q$=ye("stroke"),F$=ye("stroke-linecap"),R$=ye("stroke-linejoin"),E$=ye("stroke-width"),I$=Mr("svg"),H$=ye("viewBox"),U$=ye("width"),dn=d(function(n,e){var r=e.jl,t=e.T,e=fp(t.gb),e=N([j$("none"),V$(S(e,t.bX)),U$(S(e,t.bX)),q$("currentColor"),F$("round"),R$("round"),E$(fp(t.c6)),H$(t.dc)]),n=S((t=t.cl).$?e:D(yt,S$(t.a),e),n);return D(I$,n,D(Na,k$(La),r))}),Mr=d(function(n,e){var r=e.jl;return{T:$(e.T,{gb:n}),jl:r}}),Y$=D(cc,D(cc,b$,dn(T)),Mr(20)),O$=_(hi,255,255,255),W$=d(function(n,e){var r={a:n.b6,b:n.gu};if(r.a.$||r.b.$)return{$:2,a:"No track to show"};var t=r.a.a,a=r.b.a;return D(Sv,N([jv(y$(D(yo,lm,e))),jv(w$(D(yo,um,e))),jv(C$(D(yo,fm,e))),jv(x$(D(yo,im,e))),jv($$(D(yo,cm,e))),jv(T$(function(n){return e({$:0,a:n.hC})})),(r=e(vx),jv(D(m$,"contextmenu",sa({iB:r,fX:!0,gd:!0})))),Bv(qv),lx,Op(2),Up(bx),(r=function(n){return D(zv,N([Dv,rx,tm(5),am(5),Nl(O$),om(40),qp(6),Wp(8),jv(_(h$,"click",_$,D(yo,vt(vx),n))),jv(_(h$,"dblclick",_$,D(yo,vt(vx),n))),jv(_(h$,"mousedown",_$,D(yo,vt(vx),n))),jv(_(h$,"mouseup",_$,D(yo,vt(vx),n)))]),N([D(fx,T,{dG:Y$(D$),iK:pt(n(L$))}),D(fx,T,{dG:Y$(N$),iK:pt(n(A$))}),D(fx,T,{dG:Y$(B$),iK:pt(n(M$))})]))}(e),D(Kv,4,r))]),b$(xm({gZ:p$,hb:_(Ms,t,a,n.dw),ho:1,hG:n.j_,hP:n.i5,gq:Dg})))}),G$=d(function(n,e){return{$:0,a:n,b:e}}),X$=d(function(n,e){return D(G$,n,e)}),Q$=_(hi,116,125,140),J$=_(hi,30,144,255),K$=Mi(14),Z$=d(function(n,e){return D(Fg,xv,z(Mh,"b-"+Dt(n)+("-"+Dt(e)),e,n,e,n))}),ny=d(function(n,e){return D(Sv,N([Wp(1),qp(6),Up(J$),(t=(r=2===e?{dq:0,n:2,Q:2,ej:2}:{dq:0,n:1,Q:1,ej:1}).dq,a=r.ej,o=r.n,r=r.Q,g(a,t)&&g(o,r)?g(a,r)?Op(a):D(Z$,o,a):D(Fg,xv,z(Mh,"b-"+Dt(a)+("-"+Dt(r)+("-"+Dt(t)+("-"+Dt(o)))),a,r,t,o))),Nl(2===e?Q$:kg),D(Fg,K$,_(qg,"fc-"+zl(e=2===e?kg:Q$),"color",e)),om(16)]),D(Sv,N([_v,gh]),{$:2,a:n}));var r,t,a,o}),ey=d(function(n,e){return B(Mv,1,kb,D(yt,Lv(Av),D(yt,Bv(qv),n)),{$:0,a:e})}),ry=d(function(n,r){return _(za,d(function(n,e){return r(n)?D(yt,n,e):e}),T,function(n){return _(za,d(function(n,e){var r=e.a,t=e.b;switch(n.$){case 0:return{a:r,b:t};case 3:return{a:D(yt,n,r),b:t};case 1:return{a:D(yt,n,r),b:t};case 4:return{a:D(yt,n,r),b:t};case 7:return D(ip,"width",t)?{a:r,b:t}:{a:D(yt,n,r),b:D(ap,"width",t)};case 8:return D(ip,"height",t)?{a:r,b:t}:{a:D(yt,n,r),b:D(ap,"height",t)};case 2:return D(ip,"described",t)?{a:r,b:t}:{a:D(yt,n,r),b:D(ap,"described",t)};case 9:return{a:D(yt,n,r),b:t};case 6:return D(ip,"align-x",t)?{a:r,b:t}:{a:D(yt,n,r),b:D(ap,"align-x",t)};case 5:return D(ip,"align-y",t)?{a:r,b:t}:{a:D(yt,n,r),b:D(ap,"align-y",t)};default:return D(ip,"transform",t)?{a:r,b:t}:{a:D(yt,n,r),b:D(ap,"transform",t)}}}),{a:T,b:ep},n).a}(n))}),ty=d(function(n,e){return B(Mv,0,kb,D(yt,Bv(qv),n),{$:0,a:e})}),ay=D(cc,ln,em),oy=P(function(t,n,i){var e=d(function(n,e){var r=e.a,t=e.b,a=e.c,o=n.a;switch(r){case 0:return g(pt(o),i.jb)?{a:1,b:t,c:a}:{a:r,b:o,c:a};case 1:return{a:2,b:t,c:o};default:return{a:r,b:t,c:a}}}),r=function(n){var e=n.a,r=n.b,n=g(pt(e),i.jb)?2:0;return D(Sv,N([lx,Bv(t?qv:Av),cx(i.fK(e)),2==n?{$:1,a:D(Qv,"aria-checked","true")}:{$:1,a:D(Qv,"aria-checked","false")},{$:1,a:D(Qv,"role","radio")}]),r(n))},a=function(){var n=i.iP;if(n.b){var t=n.a.a;return function(n){var e=n.b,r=n.c;switch(n.a){case 0:case 1:return pt({a:e,b:t});default:return pt({a:e,b:r})}}(_(jt,e,{a:0,b:t,c:t},i.iP))}return mt}(),r=D(t?ey:ty,D(yt,Ip(i.dG),n),D(Na,r,i.iP)),n=D(ry,n,function(n){n:for(;;)switch(n.$){case 7:case 8:if(2===n.a.$)return!0;break n;case 1:return!0;default:break n}return!1});return _(Xv,S(D(Cc,gt,N([pt(ex),pt(ay(0)),pt({$:1,a:Zb("focus")}),pt(Gv),pt({$:1,a:D(Qv,"role","radiogroup")}),function(){if(1===a.$)return mt;var n=a.a,e=n.a,r=n.b;return pt(nm(function(n){return g(n,"ArrowLeft")||g(n,"ArrowUp")?pt(i.fK(e)):g(n,"ArrowRight")||g(n,"ArrowDown")?pt(i.fK(r)):g(n," ")&&1===i.jb.$?pt(i.fK(e)):mt}))}()])),n),i.dG,r)})(0),dn=_(hi,127,140,141),iy=N([Lv(Uv(24)),Bv(Uv(400)),gh,_v,Fp(D(Sv,N([Bv(Uv(400)),Lv(Uv(2)),gh,_v,Nl(dn),Yp(6)]),Ev))]),cy=d(function(n,e){return{$:2,a:n,b:e}}),uy=d(function(n,e){return{$:1,a:n,b:e}}),ly={g_:mt,g4:mt,jd:pt({a9:0,cn:B(Vg,155/255,203/255,1,1),a:{a:0,b:0},gb:3})},fy=d(function(n,e){switch(e.$){case 0:return(0,e.a)(2);case 1:return D(e.a.h9,n(e.a.js),2);case 2:return Sp(e.a);default:return Sp("")}}),sy=P(function(n,e,r){n=function(n){var e,r;return{h_:1===(r=(e=_(za,d(function(n,e){switch(n.$){case 0:return 1===e.h8.$?$(e,{h8:pt(n.a)}):e;case 1:return 1===e.h_.$?$(e,{h_:pt(n.a)}):e;default:return 1===e.fF.$?$(e,{fF:pt(n.a)}):e}}),{h_:mt,h8:mt,fF:mt},n)).h_).$?ly:r.a,h8:1===(r=e.h8).$?1:r.a,fF:1===(e=e.fF).$?0:e.a}}(n),n=(1===n.fF?cy:uy)(n);return D(fy,n,B(Mv,2,kb,e,{$:0,a:N([r])}))}),Mr=d(function(n,e){return{$:1,a:n,b:e}}),ln={$:1},dn=Mi(5),dy=function(n){return N(n.trim().split(/\s+/g))},Mi=d(function(n,e){return S(e,function(){switch(n.$){case 0:return"serif";case 1:return"sans-serif";case 2:return"monospace";case 3:return D(_t,"-",dy(Df(n.a)));case 4:return D(_t,"-",dy(Df(n.a)));default:return D(_t,"-",dy(Df(n.a.iF)))}}())}),gy=(ln=N([{$:3,a:"Open Sans"},{$:3,a:"Helvetica"},{$:3,a:"Verdana"},ln]),N([D(Fg,Rg,_(qg,"bg-"+zl(B(Vg,1,1,1,0)),"background-color",B(Vg,1,1,1,0))),D(Fg,K$,_(qg,"fc-"+zl(B(Vg,0,0,0,1)),"color",B(Vg,0,0,0,1))),D(Fg,px,{$:2,a:20}),D(Fg,dn,D(Mr,_(jt,Mi,"font-",ln),ln))])),by=P(function(n,e,r){return _(sy,n.iP,D(yt,Vp(D(_t," ",N([Mb,eb,Bb]))),S(gy,e)),r)})({iP:T}),py={$:0},my=_(hi,113,128,147),L=V({ig:D(yo,Oo(Zo),O),iM:vt({$:3,a:Je}),iN:vt({$:3,a:Je}),jt:function(){return ic(N([lc(function(n){return{$:3,a:{$:2,a:n}}}),uc(D(cc,to,ro)),fc(ao)]))},jU:L,jZ:function(n){var e=n;return{g2:N([D(by,N([Bv(qv),qp(10),Wp(10),om(16),Lv(qv),Nl(kg)]),D(zv,N([Bv(qv)]),N([(n=D(fx,N([qp(5),Op(2),Yp(4),Up(my)]),{dG:{$:2,a:"Load GPX from your computer"},iK:pt(py)}),D(Yv,N([Wp(20),qp(10)]),N([n]))),ym(e)])))]),jN:"GPXmagic Labs"}}});ac={Main:{init:L(oc(N([l(mt),D(la,pt,A(ac))])))(0)}},n.Elm?function n(e,r){for(var t in r)t in e?"init"==t?k(6):n(e[t],r[t]):e[t]=r[t]}(n.Elm,ac):n.Elm=ac}(this);
